info:
  version: "7.0"
  title: "KIE Server"
basePath: "/services/rest"
tags:
- name: "Case instance administration"
- name: "Case queries"
- name: "Case instances"
- name: "KIE Server and KIE containers"
- name: "DMN models"
- name: "KIE session assets"
- name: "Process and task definitions"
- name: "Documents"
- name: "Jobs"
- name: "Process instances"
- name: "Custom queries"
- name: "Process queries"
- name: "Task instances"
- name: "Process instance administration"
- name: "Task instance administration"
- name: "Process and task forms"
- name: "Process images"
- name: "Static files endpoint :: BPM"
paths:
  /server/admin/cases/instances:
    get:
      tags:
      - "Case instance administration"
      summary: "Returns case instances without authentication checks."
      description: ""
      operationId: "getCaseInstances"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "status"
        in: "query"
        description: "optional case instance status (open, closed, canceled) - defaults\
          \ ot open (1) only"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "open"
          - "closed"
          - "cancelled"
        collectionFormat: "multi"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      - name: "sort"
        in: "query"
        description: "optional sort column, no default"
        required: false
        type: "string"
      - name: "sortOrder"
        in: "query"
        description: "optional sort direction (asc, desc) - defaults to asc"
        required: false
        type: "boolean"
        default: true
      - name: "withData"
        in: "query"
        description: "optional flag to load data when loading case instance"
        required: false
        type: "boolean"
        default: false
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              instances:
              - case-id: "IT-0000000006"
                case-description: "Order for IT hardware"
                case-owner: "baAdmin"
                case-status: 1
                case-definition-id: "itorders.orderhardware"
                container-id: "itorders_1.0.0-SNAPSHOT"
                case-started-at: 1540474204152
                case-completed-at: null
                case-completion-msg: ""
                case-sla-compliance: 0
                case-sla-due-date: null
                case-file: null
                case-milestones: null
                case-stages: null
                case-roles: null
              - case-id: "IT-0000000011"
                case-description: "Order for IT hardware"
                case-owner: "baAdmin"
                case-status: 1
                case-definition-id: "itorders.orderhardware"
                container-id: "itorders_1.0.0-SNAPSHOT6"
                case-started-at: 1540496734746
                case-completed-at: null
                case-completion-msg: ""
                case-sla-compliance: 0
                case-sla-due-date: null
                case-file: null
                case-milestones: null
                case-stages: null
                case-roles: null
          schema:
            $ref: "#/definitions/case-instance-list"
  /server/admin/containers/{containerId}/cases/instances/{caseId}:
    put:
      tags:
      - "Case instance administration"
      summary: "Migrates a specified case instance to another KIE container and case\
        \ definition."
      description: ""
      operationId: "migrateCaseInstance"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that case instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "caseId"
        in: "path"
        description: "identifier of case instance to be migrated"
        required: true
        type: "string"
        x-example: "CASE-000000001"
      - name: "targetContainerId"
        in: "query"
        description: "container id that new case definition should be migrated to\
          \ to"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "process and node mapping - unique ids of old definition to new\
          \ definition given as Map of Maps - ProcessMapping should provide map of\
          \ process definitions (mandatory), NodeMapping should provide map of node\
          \ mappings (optional)"
        required: false
        schema:
          type: "string"
        x-examples:
          application/json: "{\n  \"NodeMapping\" : { },\n  \"ProcessMapping\" : {\n\
            \    \"insurance-claims.CarInsuranceClaimCase\" : \"insurance-claims.CarInsuranceClaimCase2\"\
            \n  }\n}"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<map-type>\n    <entries>\n        <entry>\n            <key>ProcessMapping</key>\n\
            \            <value xsi:type=\"jaxbMap\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
            >\n                <entries>\n                    <entry>\n          \
            \              <key>insurance-claims.CarInsuranceClaimCase</key>\n   \
            \                     <value xsi:type=\"xs:string\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
            >insurance-claims.CarInsuranceClaimCase2</value>\n                   \
            \ </entry>\n                </entries>\n            </value>\n       \
            \ </entry>\n        <entry>\n            <key>NodeMapping</key>\n    \
            \        <value xsi:type=\"jaxbMap\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
            >\n                <entries/>\n            </value>\n        </entry>\n\
            \    </entries>\n</map-type>"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Case instance or Container Id not found"
        "201":
          description: "Successful response"
          examples:
            application/json:
              case-id: "IT-0000000006"
              case-migration-successful: true
              case-migration-start:
                java.util.Date: 1540526940760
              case-migration-end:
                java.util.Date: 1540526940867
              case-migration-reports:
              - migration-successful: true
                migration-start:
                  java.util.Date: 1540526940760
                migration-end:
                  java.util.Date: 1540526940863
                migration-logs:
                - "INFO Fri Oct 26 00:09:00 EDT 2018 Variable instances updated =\
                  \ 2 for process instance id 27"
                - "INFO Fri Oct 26 00:09:00 EDT 2018 Node instances updated = 4 for\
                  \ process instance id 27"
                - "INFO Fri Oct 26 00:09:00 EDT 2018 Process instances updated = 1\
                  \ for process instance id 27"
                - "INFO Fri Oct 26 00:09:00 EDT 2018 Task variables updated = 6 for\
                  \ process instance id 27"
                - "INFO Fri Oct 26 00:09:00 EDT 2018 Task audit updated = 1 for process\
                  \ instance id 27"
                - "INFO Fri Oct 26 00:09:00 EDT 2018 Tasks updated = 1 for process\
                  \ instance id 27"
                - "INFO Fri Oct 26 00:09:00 EDT 2018 Context info updated = 1 for\
                  \ process instance id 27"
                - "INFO Fri Oct 26 00:09:00 EDT 2018 Mapping: Node instance logs to\
                  \ be updated  = [0]"
                - "INFO Fri Oct 26 00:09:00 EDT 2018 Mapping: Node instance logs updated\
                  \ = 1 for node instance id 0"
                - "INFO Fri Oct 26 00:09:00 EDT 2018 Mapping: Task audit updated =\
                  \ 1 for task id 33"
                - "INFO Fri Oct 26 00:09:00 EDT 2018 Mapping: Task updated = 1 for\
                  \ task id 33"
                - "INFO Fri Oct 26 00:09:00 EDT 2018 Mapping: Node instance logs to\
                  \ be updated  = [1]"
                - "INFO Fri Oct 26 00:09:00 EDT 2018 Mapping: Node instance logs updated\
                  \ = 1 for node instance id 1"
                - "INFO Fri Oct 26 00:09:00 EDT 2018 Mapping: Node instance logs to\
                  \ be updated  = [2]"
                - "INFO Fri Oct 26 00:09:00 EDT 2018 Mapping: Node instance logs updated\
                  \ = 1 for node instance id 2"
                - "INFO Fri Oct 26 00:09:00 EDT 2018 Mapping: Node instance logs to\
                  \ be updated  = [3]"
                - "INFO Fri Oct 26 00:09:00 EDT 2018 Mapping: Node instance logs updated\
                  \ = 1 for node instance id 3"
                - "INFO Fri Oct 26 00:09:00 EDT 2018 Migration of process instance\
                  \ (27) completed successfully to process itorders.orderhardware2"
                migration-process-instance: 27
          schema:
            $ref: "#/definitions/case-migration-report-instance"
  /server/queries/cases/instances:
    get:
      tags:
      - "Case queries"
      summary: "Returns cases instances with authentication checks."
      description: ""
      operationId: "getCaseInstances_1"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "dataItemName"
        in: "query"
        description: "data item name that case instances will be filtered by"
        required: false
        type: "string"
      - name: "dataItemValue"
        in: "query"
        description: "data item value that case instances will be filtered by"
        required: false
        type: "string"
      - name: "owner"
        in: "query"
        description: "case instance owner that case instances will be filtered by"
        required: false
        type: "string"
      - name: "status"
        in: "query"
        description: "optional case instance status (open, closed, canceled) - defaults\
          \ ot open (1) only"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "open"
          - "closed"
          - "cancelled"
        collectionFormat: "multi"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      - name: "sort"
        in: "query"
        description: "optional sort column, no default"
        required: false
        type: "string"
      - name: "sortOrder"
        in: "query"
        description: "optional sort direction (asc, desc) - defaults to asc"
        required: false
        type: "boolean"
        default: true
      - name: "withData"
        in: "query"
        description: "optional flag to load data when loading case instance"
        required: false
        type: "boolean"
        default: false
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              instances:
              - case-id: "IT-0000000006"
                case-description: "Order for IT hardware"
                case-owner: "baAdmin"
                case-status: 1
                case-definition-id: "itorders.orderhardware"
                container-id: "itorders_1.0.0-SNAPSHOT"
                case-started-at: 1540474204152
                case-completed-at: null
                case-completion-msg: ""
                case-sla-compliance: 0
                case-sla-due-date: null
                case-file: null
                case-milestones: null
                case-stages: null
                case-roles: null
              - case-id: "IT-0000000011"
                case-description: "Order for IT hardware"
                case-owner: "baAdmin"
                case-status: 1
                case-definition-id: "itorders.orderhardware"
                container-id: "itorders_1.0.0-SNAPSHOT6"
                case-started-at: 1540496734746
                case-completed-at: null
                case-completion-msg: ""
                case-sla-compliance: 0
                case-sla-due-date: null
                case-file: null
                case-milestones: null
                case-stages: null
                case-roles: null
          schema:
            $ref: "#/definitions/case-instance-list"
  /server/queries/cases/{caseRoleName}/instances:
    get:
      tags:
      - "Case queries"
      summary: "Returns cases instances that involve the querying user in a specified\
        \ role."
      description: ""
      operationId: "getCaseInstancesByRole"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "caseRoleName"
        in: "path"
        description: "case role that instances should be found for"
        required: true
        type: "string"
        x-example: "owner"
      - name: "status"
        in: "query"
        description: "optional case instance status (open, closed, canceled) - defaults\
          \ ot open (1) only"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "open"
          - "closed"
          - "cancelled"
        collectionFormat: "multi"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      - name: "sort"
        in: "query"
        description: "optional sort column, no default"
        required: false
        type: "string"
      - name: "sortOrder"
        in: "query"
        description: "optional sort direction (asc, desc) - defaults to asc"
        required: false
        type: "boolean"
        default: true
      - name: "withData"
        in: "query"
        description: "optional flag to load data when loading case instance"
        required: false
        type: "boolean"
        default: false
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              instances:
              - case-id: "IT-0000000006"
                case-description: "Order for IT hardware"
                case-owner: "baAdmin"
                case-status: 1
                case-definition-id: "itorders.orderhardware"
                container-id: "itorders_1.0.0-SNAPSHOT"
                case-started-at: 1540474204152
                case-completed-at: null
                case-completion-msg: ""
                case-sla-compliance: 0
                case-sla-due-date: null
                case-file: null
                case-milestones: null
                case-stages: null
                case-roles: null
              - case-id: "IT-0000000011"
                case-description: "Order for IT hardware"
                case-owner: "baAdmin"
                case-status: 1
                case-definition-id: "itorders.orderhardware"
                container-id: "itorders_1.0.0-SNAPSHOT6"
                case-started-at: 1540496734746
                case-completed-at: null
                case-completion-msg: ""
                case-sla-compliance: 0
                case-sla-due-date: null
                case-file: null
                case-milestones: null
                case-stages: null
                case-roles: null
          schema:
            $ref: "#/definitions/case-instance-list"
  /server/queries/cases:
    get:
      tags:
      - "Case queries"
      summary: "Returns a specified case definition from all KIE containers."
      description: ""
      operationId: "getCaseDefinitions"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "filter"
        in: "query"
        description: "case definition id or name that case definitions will be filtered\
          \ by"
        required: true
        type: "string"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      - name: "sort"
        in: "query"
        description: "optional sort column, no default"
        required: false
        type: "string"
      - name: "sortOrder"
        in: "query"
        description: "optional sort direction (asc, desc) - defaults to asc"
        required: false
        type: "boolean"
        default: true
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              definitions:
              - name: "Order for IT hardware"
                id: "itorders.orderhardware"
                version: "1.0"
                case-id-prefix: "IT"
                container-id: "itorders_1.0.0-SNAPSHOT2"
                adhoc-fragments:
                - name: "Prepare hardware spec"
                  type: "HumanTaskNode"
                - name: "Milestone 1: Order placed"
                  type: "MilestoneNode"
                - name: "Milestone 2: Order shipped"
                  type: "MilestoneNode"
                - name: "Milestone 3: Delivered to customer"
                  type: "MilestoneNode"
                - name: "Hardware spec ready"
                  type: "MilestoneNode"
                - name: "Manager decision"
                  type: "MilestoneNode"
                roles:
                  owner: 1
                  manager: 1
                  supplier: 2
                milestones:
                - milestone-name: "Milestone 1: Order placed"
                  milestone-id: "_DCD97847-6E3C-4C5E-9EE3-221C04BE42ED"
                  milestone-mandatory: false
                - milestone-name: "Milestone 2: Order shipped"
                  milestone-id: "_343B90CD-AA19-4894-B63C-3CE1906E6FD1"
                  milestone-mandatory: false
                - milestone-name: "Milestone 3: Delivered to customer"
                  milestone-id: "_52AFA23F-C087-4519-B8F2-BABCC31D68A6"
                  milestone-mandatory: false
                - milestone-name: "Hardware spec ready"
                  milestone-id: "_483CF785-96DD-40C1-9148-4CFAFAE5778A"
                  milestone-mandatory: false
                - milestone-name: "Manager decision"
                  milestone-id: "_79953D58-25DB-4FD6-94A0-DFC6EA2D0339"
                  milestone-mandatory: false
                stages: []
              - name: "Order for IT hardware"
                id: "itorders.orderhardware"
                version: "1.0"
                case-id-prefix: "IT"
                container-id: "itorders_1.0.0-SNAPSHOT3"
                adhoc-fragments:
                - name: "Prepare hardware spec"
                  type: "HumanTaskNode"
                - name: "Milestone 1: Order placed"
                  type: "MilestoneNode"
                - name: "Milestone 2: Order shipped"
                  type: "MilestoneNode"
                - name: "Milestone 3: Delivered to customer"
                  type: "MilestoneNode"
                - name: "Hardware spec ready"
                  type: "MilestoneNode"
                - name: "Manager decision"
                  type: "MilestoneNode"
                roles:
                  owner: 1
                  manager: 1
                  supplier: 2
                milestones:
                - milestone-name: "Milestone 1: Order placed"
                  milestone-id: "_DCD97847-6E3C-4C5E-9EE3-221C04BE42ED"
                  milestone-mandatory: false
                - milestone-name: "Milestone 2: Order shipped"
                  milestone-id: "_343B90CD-AA19-4894-B63C-3CE1906E6FD1"
                  milestone-mandatory: false
                - milestone-name: "Milestone 3: Delivered to customer"
                  milestone-id: "_52AFA23F-C087-4519-B8F2-BABCC31D68A6"
                  milestone-mandatory: false
                - milestone-name: "Hardware spec ready"
                  milestone-id: "_483CF785-96DD-40C1-9148-4CFAFAE5778A"
                  milestone-mandatory: false
                - milestone-name: "Manager decision"
                  milestone-id: "_79953D58-25DB-4FD6-94A0-DFC6EA2D0339"
                  milestone-mandatory: false
                stages: []
          schema:
            $ref: "#/definitions/case-definition-list"
  /server/queries/cases/processes:
    get:
      tags:
      - "Case queries"
      summary: "Returns a specified process associated with case definitions from\
        \ all KIE containers."
      description: ""
      operationId: "getProcessDefinitions"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "filter"
        in: "query"
        description: "process definition id or name that process definitions will\
          \ be filtered by"
        required: true
        type: "string"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      - name: "sort"
        in: "query"
        description: "optional sort column, no default"
        required: false
        type: "string"
      - name: "sortOrder"
        in: "query"
        description: "optional sort direction (asc, desc) - defaults to asc"
        required: false
        type: "boolean"
        default: true
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              processes:
              - associatedEntities: null
                serviceTasks: null
                processVariables: null
                reusableSubProcesses: null
                process-id: "Employee_Rostering.Process1"
                process-name: "Process1"
                process-version: "1.0"
                package: "employeerostering.employeerostering"
                container-id: "employee-rostering"
                dynamic: false
          schema:
            $ref: "#/definitions/process-definitions"
  /server/queries/cases/{containerId}/processes:
    get:
      tags:
      - "Case queries"
      summary: "Returns processes associated with case definitions in a specified\
        \ KIE container."
      description: ""
      operationId: "getProcessDefinitionsByContainer"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that process definitions should be filtered by"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      - name: "sort"
        in: "query"
        description: "optional sort column, no default"
        required: false
        type: "string"
      - name: "sortOrder"
        in: "query"
        description: "optional sort direction (asc, desc) - defaults to asc"
        required: false
        type: "boolean"
        default: true
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              processes:
              - associatedEntities: null
                serviceTasks: null
                processVariables: null
                reusableSubProcesses: null
                process-id: "Employee_Rostering.Process1"
                process-name: "Process1"
                process-version: "1.0"
                package: "employeerostering.employeerostering"
                container-id: "employee-rostering"
                dynamic: false
          schema:
            $ref: "#/definitions/process-definitions"
  /server/queries/cases/instances/{caseId}/tasks/instances/pot-owners:
    get:
      tags:
      - "Case queries"
      summary: "Returns tasks for potential owners in a specified case instance."
      description: ""
      operationId: "getCaseInstanceTasksAsPotentialOwner"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "caseId"
        in: "path"
        description: "case instance identifier that tasks should belong to"
        required: true
        type: "string"
        x-example: "CASE-00000000011"
      - name: "user"
        in: "query"
        description: "optional user id to be used instead of authenticated user -\
          \ only when bypass authenticated user is enabled"
        required: false
        type: "string"
      - name: "status"
        in: "query"
        description: "optional task status (Created, Ready, Reserved, InProgress,\
          \ Suspended, Completed, Failed, Error, Exited, Obsolete)"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "Created"
          - "Ready"
          - "Reserved"
          - "InProgress"
          - "Suspended"
          - "Completed"
          - "Failed"
          - "Error"
          - "Exited"
          - "Obsolete"
        collectionFormat: "multi"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      - name: "sort"
        in: "query"
        description: "optional sort column, no default"
        required: false
        type: "string"
      - name: "sortOrder"
        in: "query"
        description: "optional sort direction (asc, desc) - defaults to asc"
        required: false
        type: "boolean"
        default: true
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              task-summary:
              - task-id: "2"
                task-name: "Self Evaluation"
                task-subject: ""
                task-description: "Please perform a self-evalutation."
                task-status: "Ready"
                task-priority: "0"
                task-is-skippable: "false"
                task-created-by: "John"
                task-created-on: "2016-04-05T15:09:14.206+02:00"
                task-activation-time: "2016-04-05T15:09:14.206+02:00"
                task-proc-inst-id: "2"
                task-proc-def-id: "evaluation"
                task-container-id: "myContainer"
                task-parent-id: "-1"
              - task-id: "1"
                task-name: "Self Evaluation"
                task-subject: ""
                task-description: "Please perform a self-evalutation."
                task-status: "InProgress"
                task-priority: "0"
                task-is-skippable: "false"
                task-actual-owner: "kiesu"
                task-created-by: "John"
                task-created-on: "2016-04-05T15:05:06.508+02:00"
                task-activation-time: "2016-04-05T15:05:06.508+02:00"
                task-proc-inst-id: "1"
                task-proc-def-id: "evaluation"
                task-container-id: "myContainer"
                task-parent-id: "-1"
          schema:
            $ref: "#/definitions/task-summary-list"
  /server/queries/cases/instances/{caseId}/tasks/instances/admins:
    get:
      tags:
      - "Case queries"
      summary: "Returns tasks for business administrators in a specified case instance."
      description: ""
      operationId: "getCaseInstanceTasksAsAdmin"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "caseId"
        in: "path"
        description: "case instance identifier that tasks should belong to"
        required: true
        type: "string"
        x-example: "CASE-00000000001"
      - name: "user"
        in: "query"
        description: "optional user id to be used instead of authenticated user -\
          \ only when bypass authenticated user is enabled"
        required: false
        type: "string"
      - name: "status"
        in: "query"
        description: "optional task status (Created, Ready, Reserved, InProgress,\
          \ Suspended, Completed, Failed, Error, Exited, Obsolete)"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "Created"
          - "Ready"
          - "Reserved"
          - "InProgress"
          - "Suspended"
          - "Completed"
          - "Failed"
          - "Error"
          - "Exited"
          - "Obsolete"
        collectionFormat: "multi"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      - name: "sort"
        in: "query"
        description: "optional sort column, no default"
        required: false
        type: "string"
      - name: "sortOrder"
        in: "query"
        description: "optional sort direction (asc, desc) - defaults to asc"
        required: false
        type: "boolean"
        default: true
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              task-summary:
              - task-id: "2"
                task-name: "Self Evaluation"
                task-subject: ""
                task-description: "Please perform a self-evalutation."
                task-status: "Ready"
                task-priority: "0"
                task-is-skippable: "false"
                task-created-by: "John"
                task-created-on: "2016-04-05T15:09:14.206+02:00"
                task-activation-time: "2016-04-05T15:09:14.206+02:00"
                task-proc-inst-id: "2"
                task-proc-def-id: "evaluation"
                task-container-id: "myContainer"
                task-parent-id: "-1"
              - task-id: "1"
                task-name: "Self Evaluation"
                task-subject: ""
                task-description: "Please perform a self-evalutation."
                task-status: "InProgress"
                task-priority: "0"
                task-is-skippable: "false"
                task-actual-owner: "kiesu"
                task-created-by: "John"
                task-created-on: "2016-04-05T15:05:06.508+02:00"
                task-activation-time: "2016-04-05T15:05:06.508+02:00"
                task-proc-inst-id: "1"
                task-proc-def-id: "evaluation"
                task-container-id: "myContainer"
                task-parent-id: "-1"
          schema:
            $ref: "#/definitions/task-summary-list"
  /server/queries/cases/instances/{caseId}/tasks/instances/stakeholders:
    get:
      tags:
      - "Case queries"
      summary: "Returns tasks for stakeholders in a specified case instance."
      description: ""
      operationId: "getCaseInstanceTasksAsStakeholder"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "caseId"
        in: "path"
        description: "case instance identifier that tasks should belong to"
        required: true
        type: "string"
        x-example: "CASE-0000000001"
      - name: "user"
        in: "query"
        description: "optional user id to be used instead of authenticated user -\
          \ only when bypass authenticated user is enabled"
        required: false
        type: "string"
      - name: "status"
        in: "query"
        description: "optional task status (Created, Ready, Reserved, InProgress,\
          \ Suspended, Completed, Failed, Error, Exited, Obsolete)"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "Created"
          - "Ready"
          - "Reserved"
          - "InProgress"
          - "Suspended"
          - "Completed"
          - "Failed"
          - "Error"
          - "Exited"
          - "Obsolete"
        collectionFormat: "multi"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      - name: "sort"
        in: "query"
        description: "optional sort column, no default"
        required: false
        type: "string"
      - name: "sortOrder"
        in: "query"
        description: "optional sort direction (asc, desc) - defaults to asc"
        required: false
        type: "boolean"
        default: true
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              task-summary:
              - task-id: "2"
                task-name: "Self Evaluation"
                task-subject: ""
                task-description: "Please perform a self-evalutation."
                task-status: "Ready"
                task-priority: "0"
                task-is-skippable: "false"
                task-created-by: "John"
                task-created-on: "2016-04-05T15:09:14.206+02:00"
                task-activation-time: "2016-04-05T15:09:14.206+02:00"
                task-proc-inst-id: "2"
                task-proc-def-id: "evaluation"
                task-container-id: "myContainer"
                task-parent-id: "-1"
              - task-id: "1"
                task-name: "Self Evaluation"
                task-subject: ""
                task-description: "Please perform a self-evalutation."
                task-status: "InProgress"
                task-priority: "0"
                task-is-skippable: "false"
                task-actual-owner: "kiesu"
                task-created-by: "John"
                task-created-on: "2016-04-05T15:05:06.508+02:00"
                task-activation-time: "2016-04-05T15:05:06.508+02:00"
                task-proc-inst-id: "1"
                task-proc-def-id: "evaluation"
                task-container-id: "myContainer"
                task-parent-id: "-1"
          schema:
            $ref: "#/definitions/task-summary-list"
  /server/queries/cases/instances/{caseId}/caseFile:
    get:
      tags:
      - "Case queries"
      summary: "Returns case file data items for a specified case instance."
      description: ""
      operationId: "getCaseInstanceDataItems"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "caseId"
        in: "path"
        description: "case instance identifier that data items should belong to"
        required: true
        type: "string"
        x-example: "CASE-0000000001"
      - name: "name"
        in: "query"
        description: "optionally filter by data item names"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "type"
        in: "query"
        description: "optionally filter by data item types"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              instances:
              - case-id: "IT-0000000006"
                name: "hwSpecNew"
                value: "New content for hardware specification."
                type: "java.lang.String"
                last-modified-by: "baAdmin"
                last-modified: 1540502077279
              - case-id: "IT-0000000006"
                name: "milestone-mandatory"
                value: "false"
                type: "java.lang.Boolean"
                last-modified-by: "baAdmin"
                last-modified: 1540499389943
          schema:
            $ref: "#/definitions/case-file-data-item-list"
  /server/queries/cases/variables/cases:
    post:
      tags:
      - "Case queries"
      summary: "Queries cases by variables and tasks"
      description: ""
      operationId: "queryCaseByVariables"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          type: "string"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/case-instance-vars-list"
  /server/queries/cases/variables/cases/tasks:
    post:
      tags:
      - "Case queries"
      summary: "Queries cases tasks by variables"
      description: ""
      operationId: "queryCaseUserTasksByVariables"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          type: "string"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/case-user-task-variable-instance-list"
  /server/containers/{containerId}/cases/instances/{caseId}:
    get:
      tags:
      - "Case instances"
      summary: "Returns information about a specified case instance."
      description: ""
      operationId: "getCaseInstance"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that case instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "caseId"
        in: "path"
        description: "identifier of the case instance"
        required: true
        type: "string"
        x-example: "CASE-00000000001"
      - name: "withData"
        in: "query"
        description: "optional flag to load data when loading case instance"
        required: false
        type: "boolean"
        default: false
      - name: "withRoles"
        in: "query"
        description: "optional flag to load roles when loading case instance"
        required: false
        type: "boolean"
        default: false
      - name: "withMilestones"
        in: "query"
        description: "optional flag to load milestones when loading case instance"
        required: false
        type: "boolean"
        default: false
      - name: "withStages"
        in: "query"
        description: "optional flag to load stages when loading case instance"
        required: false
        type: "boolean"
        default: false
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Case instance not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              case-id: "IT-0000000006"
              case-description: "Order for IT hardware"
              case-owner: "baAdmin"
              case-status: 1
              case-definition-id: "itorders.orderhardware"
              container-id: "itorders_1.0.0-SNAPSHOT"
              case-started-at: 1540474204152
              case-completed-at: null
              case-completion-msg: ""
              case-sla-compliance: 0
              case-sla-due-date: null
              case-file:
                case-data: {}
                case-user-assignments: {}
                case-group-assignments: {}
                case-data-restrictions: {}
              case-milestones: null
              case-stages: null
              case-roles:
              - name: "owner"
                users:
                - "baAdmin"
                groups: []
              - name: "manager"
                users:
                - "baAdmin"
                groups: []
              - name: "supplier"
                users: []
                groups:
                - "IT"
          schema:
            $ref: "#/definitions/case-instance"
    post:
      tags:
      - "Case instances"
      summary: "Closes a specified case instance."
      description: ""
      operationId: "closeCaseInstance"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that case instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "caseId"
        in: "path"
        description: "identifier of the case instance"
        required: true
        type: "string"
        x-example: "CASE-00000000001"
      - in: "body"
        name: "body"
        description: "optional comment when closing a case instance as String"
        required: false
        schema:
          type: "string"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Case instance not found"
    delete:
      tags:
      - "Case instances"
      summary: "Aborts or permanently destroys a specified case instance."
      description: ""
      operationId: "cancelCaseInstance"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that case instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "caseId"
        in: "path"
        description: "identifier of the case instance"
        required: true
        type: "string"
        x-example: "CASE-00000000001"
      - name: "destroy"
        in: "query"
        description: "allows to destroy (permanently) case instance as part of the\
          \ cancel operation, defaults to false"
        required: false
        type: "boolean"
        default: false
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Case instance not found"
  /server/containers/{containerId}/cases/definitions:
    get:
      tags:
      - "Case instances"
      summary: "Returns case definitions in a specified KIE container."
      description: ""
      operationId: "getCaseDefinitionsByContainer"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that should be used to filter case definitions"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      - name: "sort"
        in: "query"
        description: "optional sort column, no default"
        required: false
        type: "string"
      - name: "sortOrder"
        in: "query"
        description: "optional sort direction (asc, desc) - defaults to asc"
        required: false
        type: "boolean"
        default: true
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              definitions:
              - name: "Order for IT hardware"
                id: "itorders.orderhardware"
                version: "1.0"
                case-id-prefix: "IT"
                container-id: "itorders_1.0.0-SNAPSHOT2"
                adhoc-fragments:
                - name: "Prepare hardware spec"
                  type: "HumanTaskNode"
                - name: "Milestone 1: Order placed"
                  type: "MilestoneNode"
                - name: "Milestone 2: Order shipped"
                  type: "MilestoneNode"
                - name: "Milestone 3: Delivered to customer"
                  type: "MilestoneNode"
                - name: "Hardware spec ready"
                  type: "MilestoneNode"
                - name: "Manager decision"
                  type: "MilestoneNode"
                roles:
                  owner: 1
                  manager: 1
                  supplier: 2
                milestones:
                - milestone-name: "Milestone 1: Order placed"
                  milestone-id: "_DCD97847-6E3C-4C5E-9EE3-221C04BE42ED"
                  milestone-mandatory: false
                - milestone-name: "Milestone 2: Order shipped"
                  milestone-id: "_343B90CD-AA19-4894-B63C-3CE1906E6FD1"
                  milestone-mandatory: false
                - milestone-name: "Milestone 3: Delivered to customer"
                  milestone-id: "_52AFA23F-C087-4519-B8F2-BABCC31D68A6"
                  milestone-mandatory: false
                - milestone-name: "Hardware spec ready"
                  milestone-id: "_483CF785-96DD-40C1-9148-4CFAFAE5778A"
                  milestone-mandatory: false
                - milestone-name: "Manager decision"
                  milestone-id: "_79953D58-25DB-4FD6-94A0-DFC6EA2D0339"
                  milestone-mandatory: false
                stages: []
              - name: "Order for IT hardware"
                id: "itorders.orderhardware"
                version: "1.0"
                case-id-prefix: "IT"
                container-id: "itorders_1.0.0-SNAPSHOT3"
                adhoc-fragments:
                - name: "Prepare hardware spec"
                  type: "HumanTaskNode"
                - name: "Milestone 1: Order placed"
                  type: "MilestoneNode"
                - name: "Milestone 2: Order shipped"
                  type: "MilestoneNode"
                - name: "Milestone 3: Delivered to customer"
                  type: "MilestoneNode"
                - name: "Hardware spec ready"
                  type: "MilestoneNode"
                - name: "Manager decision"
                  type: "MilestoneNode"
                roles:
                  owner: 1
                  manager: 1
                  supplier: 2
                milestones:
                - milestone-name: "Milestone 1: Order placed"
                  milestone-id: "_DCD97847-6E3C-4C5E-9EE3-221C04BE42ED"
                  milestone-mandatory: false
                - milestone-name: "Milestone 2: Order shipped"
                  milestone-id: "_343B90CD-AA19-4894-B63C-3CE1906E6FD1"
                  milestone-mandatory: false
                - milestone-name: "Milestone 3: Delivered to customer"
                  milestone-id: "_52AFA23F-C087-4519-B8F2-BABCC31D68A6"
                  milestone-mandatory: false
                - milestone-name: "Hardware spec ready"
                  milestone-id: "_483CF785-96DD-40C1-9148-4CFAFAE5778A"
                  milestone-mandatory: false
                - milestone-name: "Manager decision"
                  milestone-id: "_79953D58-25DB-4FD6-94A0-DFC6EA2D0339"
                  milestone-mandatory: false
                stages: []
          schema:
            $ref: "#/definitions/case-definition-list"
  /server/containers/{containerId}/cases/definitions/{caseDefId}:
    get:
      tags:
      - "Case instances"
      summary: "Returns information about a specified case definition."
      description: ""
      operationId: "getCaseDefinitionsByDefinition"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that should be used to filter case definitions"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "caseDefId"
        in: "path"
        description: "case definition id that should be loaded"
        required: true
        type: "string"
        x-example: "CASE-00000000001"
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              name: "Order for IT hardware"
              id: "itorders.orderhardware"
              version: "1.0"
              case-id-prefix: "IT"
              container-id: "itorders_1.0.0-SNAPSHOT"
              adhoc-fragments:
              - name: "Prepare hardware spec"
                type: "HumanTaskNode"
              - name: "Milestone 1: Order placed"
                type: "MilestoneNode"
              - name: "Milestone 2: Order shipped"
                type: "MilestoneNode"
              - name: "Milestone 3: Delivered to customer"
                type: "MilestoneNode"
              - name: "Hardware spec ready"
                type: "MilestoneNode"
              - name: "Manager decision"
                type: "MilestoneNode"
              roles:
                owner: 1
                manager: 1
                supplier: 2
              milestones:
              - milestone-name: "Milestone 1: Order placed"
                milestone-id: "_DCD97847-6E3C-4C5E-9EE3-221C04BE42ED"
                milestone-mandatory: false
              - milestone-name: "Milestone 2: Order shipped"
                milestone-id: "_343B90CD-AA19-4894-B63C-3CE1906E6FD1"
                milestone-mandatory: false
              - milestone-name: "Milestone 3: Delivered to customer"
                milestone-id: "_52AFA23F-C087-4519-B8F2-BABCC31D68A6"
                milestone-mandatory: false
              - milestone-name: "Hardware spec ready"
                milestone-id: "_483CF785-96DD-40C1-9148-4CFAFAE5778A"
                milestone-mandatory: false
              - milestone-name: "Manager decision"
                milestone-id: "_79953D58-25DB-4FD6-94A0-DFC6EA2D0339"
                milestone-mandatory: false
              stages: []
          schema:
            $ref: "#/definitions/case-definition"
  /server/containers/{containerId}/cases/instances/{caseId}/stages:
    get:
      tags:
      - "Case instances"
      summary: "Returns stages for a specified case instance."
      description: ""
      operationId: "getCaseInstanceStages"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that case instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "caseId"
        in: "path"
        description: "identifier of the case instance"
        required: true
        type: "string"
        x-example: "CASE-00000000001"
      - name: "activeOnly"
        in: "query"
        description: "optional flag that allows to control which stages to load -\
          \ active only or completed ones too, defaults to true"
        required: false
        type: "boolean"
        default: true
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Case instance not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              stages:
              - stage-name: "string"
                stage-id: "string"
                stage-status: "string"
                adhoc-fragments:
                - name: "string"
                  type: "string"
                active-nodes:
                - node-instance-id: 0
                  node-name: "string"
                  process-instance-id: 0
                  work-item-id: 0
                  container-id: "string"
                  start-date: "2018-10-25T18:34:44.456Z"
                  node-id: "string"
                  node-type: "string"
                  node-connection: "string"
                  node-completed: true
                  reference-id: 0
                  sla-compliance: 0
                  sla-due-date: "2018-10-25T18:34:44.456Z"
          schema:
            $ref: "#/definitions/case-stage-list"
  /server/containers/{containerId}/cases/instances/{caseId}/adhocfragments:
    get:
      tags:
      - "Case instances"
      summary: "Returns ad hoc fragments for a specified case instance."
      description: ""
      operationId: "getCaseInstanceAdHocFragments"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that case instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "caseId"
        in: "path"
        description: "identifier of the case instance"
        required: true
        type: "string"
        x-example: "CASE-00000000001"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Case instance not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              fragments:
              - name: "Prepare hardware spec"
                type: "HumanTaskNode"
              - name: "Milestone 1: Order placed"
                type: "MilestoneNode"
              - name: "Milestone 2: Order shipped"
                type: "MilestoneNode"
              - name: "Milestone 3: Delivered to customer"
                type: "MilestoneNode"
              - name: "Hardware spec ready"
                type: "MilestoneNode"
              - name: "Manager decision"
                type: "MilestoneNode"
          schema:
            $ref: "#/definitions/case-adhoc-fragment-list"
  /server/containers/{containerId}/cases/instances/{caseId}/processes/instances:
    get:
      tags:
      - "Case instances"
      summary: "Returns process instances in a specified case instance."
      description: ""
      operationId: "getCaseInstanceProcessInstance"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that case instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "caseId"
        in: "path"
        description: "identifier of the case instance"
        required: true
        type: "string"
        x-example: "CASE-00000000001"
      - name: "status"
        in: "query"
        description: "optional process instance status (active, completed, aborted)\
          \ - defaults ot active (1) only"
        required: false
        type: "array"
        items:
          type: "integer"
          format: "int32"
          enum:
          - 1
          - 2
          - 3
        collectionFormat: "multi"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      - name: "sort"
        in: "query"
        description: "optional sort column, no default"
        required: false
        type: "string"
      - name: "sortOrder"
        in: "query"
        description: "optional sort direction (asc, desc) - defaults to asc"
        required: false
        type: "boolean"
        default: true
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Case instance not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              process-instance:
              - process-instance-id: 26
                process-id: "itorders.orderhardware"
                process-name: "Order for IT hardware"
                process-version: "1.0"
                process-instance-state: 1
                container-id: "itorders_1.0.0-SNAPSHOT"
                initiator: "baAdmin"
                start-date:
                  java.util.Date: 1540474204152
                process-instance-desc: "Order for IT hardware"
                correlation-key: "IT-0000000006"
                parent-instance-id: -1
                sla-compliance: 0
                sla-due-date: null
                active-user-tasks: null
                process-instance-variables: null
              - process-instance-id: 34
                process-id: "itorders-data.place-order"
                process-name: "place-order"
                process-version: "1.0"
                process-instance-state: 1
                container-id: "itorders_1.0.0-SNAPSHOT"
                initiator: "baAdmin"
                start-date:
                  java.util.Date: 1540504523492
                process-instance-desc: "Order IT-0000000006"
                correlation-key: "IT-0000000006:itorders-data.place-order:1540504523491"
                parent-instance-id: 26
                sla-compliance: 0
                sla-due-date: null
                active-user-tasks: null
                process-instance-variables: null
          schema:
            $ref: "#/definitions/process-instance-list"
  /server/containers/{containerId}/cases/instances/{caseId}/nodes/instances:
    get:
      tags:
      - "Case instances"
      summary: "Returns node instances for a specified case instance."
      description: ""
      operationId: "getCaseInstanceActiveNodes"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that case instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "caseId"
        in: "path"
        description: "identifier of the case instance"
        required: true
        type: "string"
        x-example: "CASE-00000000001"
      - name: "completed"
        in: "query"
        description: "optional flag that allows to control which node instances to\
          \ load - active or completed, defaults to false loading only active ones"
        required: false
        type: "boolean"
        default: false
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Case instance not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              node-instance:
              - node-instance-id: 0
                node-name: "Prepare hardware spec"
                process-instance-id: 26
                work-item-id: 35
                container-id: "itorders_1.0.0-SNAPSHOT"
                start-date:
                  java.util.Date: 1540474204152
                node-id: "_BFA6002D-0917-42CE-81AD-2A15EC814684"
                node-type: "HumanTaskNode"
                node-connection: null
                node-completed: false
                reference-id: null
                sla-compliance: 0
                sla-due-date: null
              - node-instance-id: 1
                node-name: "Milestone 1: Order placed"
                process-instance-id: 26
                work-item-id: null
                container-id: "itorders_1.0.0-SNAPSHOT"
                start-date:
                  java.util.Date: 1540474204156
                node-id: "_DCD97847-6E3C-4C5E-9EE3-221C04BE42ED"
                node-type: "MilestoneNode"
                node-connection: null
                node-completed: false
                reference-id: null
                sla-compliance: 0
                sla-due-date: null
              - node-instance-id: 1
                node-name: "Place order"
                process-instance-id: 34
                work-item-id: 46
                container-id: "itorders_1.0.0-SNAPSHOT"
                start-date:
                  java.util.Date: 1540504523493
                node-id: "_FCADC388-8A68-40E1-94A7-4F8A7D2B21C2"
                node-type: "HumanTaskNode"
                node-connection: "_384EFF84-BB14-4917-89C3-32DF4ACA1878"
                node-completed: false
                reference-id: null
                sla-compliance: 0
                sla-due-date: null
          schema:
            $ref: "#/definitions/node-instance-list"
  /server/containers/{containerId}/cases/instances/{caseId}/roles:
    get:
      tags:
      - "Case instances"
      summary: "Returns role assignments for a specified case instance."
      description: ""
      operationId: "getCaseInstanceRoleAssignments"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that case instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "caseId"
        in: "path"
        description: "identifier of the case instance"
        required: true
        type: "string"
        x-example: "CASE-00000000001"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Case instance not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              role-assignments:
              - name: "owner"
                users:
                - "baAdmin"
                groups: []
              - name: "manager"
                users:
                - "baAdmin"
                groups: []
              - name: "supplier"
                users: []
                groups:
                - "IT"
          schema:
            $ref: "#/definitions/case-role-assignment-list"
  /server/containers/{containerId}/cases/instances/{caseId}/roles/{caseRoleName}:
    put:
      tags:
      - "Case instances"
      summary: "Assigns a specified case role to a specified user and group for a\
        \ specified case instance."
      description: ""
      operationId: "addRoleAssignment"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that case instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "caseId"
        in: "path"
        description: "identifier of the case instance"
        required: true
        type: "string"
        x-example: "CASE-00000000001"
      - name: "caseRoleName"
        in: "path"
        description: "name of the case role the assignment should be set"
        required: true
        type: "string"
        x-example: "owner"
      - name: "user"
        in: "query"
        description: "user to be aded to case role for given case instance"
        required: true
        type: "string"
      - name: "group"
        in: "query"
        description: "group to be aded to case role for given case instance"
        required: true
        type: "string"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Case instance not found"
    delete:
      tags:
      - "Case instances"
      summary: "Removes an assigned case role from a specified user and group for\
        \ a specified case instance."
      description: ""
      operationId: "removeRoleAssignment"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that case instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "caseId"
        in: "path"
        description: "identifier of the case instance"
        required: true
        type: "string"
        x-example: "CASE-00000000001"
      - name: "caseRoleName"
        in: "path"
        description: "name of the case role the assignment should be removed"
        required: true
        type: "string"
        x-example: "owner"
      - name: "user"
        in: "query"
        description: "user to be removed from case role for given case instance"
        required: true
        type: "string"
      - name: "group"
        in: "query"
        description: "group to be removed from case role for given case instance"
        required: true
        type: "string"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Case instance not found"
  /server/containers/{containerId}/cases/instances/{caseId}/comments:
    get:
      tags:
      - "Case instances"
      summary: "Returns comments from a specified case instance."
      description: ""
      operationId: "getCaseInstanceComments"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that case instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "caseId"
        in: "path"
        description: "identifier of the case instance"
        required: true
        type: "string"
        x-example: "CASE-00000000001"
      - name: "sort"
        in: "query"
        description: "optional sort column, no default"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Case instance not found"
        "200":
          description: "Successful response"
          examples:
            application/json: "{\n  \"comments\": [\n    {\n      \"id\": \"f15419b6-1967-479b-8509-066f579c59e1\"\
              ,\n      \"author\": \"baAdmin\",\n      \"text\": \"Updated case with\
              \ new ad hoc fragment.\",\n      \"added-at\": {\n        \"java.util.Date\"\
              : 1540494739762\n      },\n      \"restricted-to\": [\n        \"owner\"\
              \n      ]\n    }\n      {\n        \"id\": \"2b072823-7448-4819-9560-01165bc7e805\"\
              ,\n        \"author\": \"baAdmin\",\n        \"text\": \"Removed hardware\
              \ preparation requirement.\",\n        \"added-at\": {\n          \"\
              java.util.Date\": 1540494802456\n        },\n        \"restricted-to\"\
              : [\n          \"supplier\"\n        ]\n    }\n  ]\n}"
          schema:
            $ref: "#/definitions/case-comment-list"
    post:
      tags:
      - "Case instances"
      summary: "Adds a comment to a specified case instance."
      description: ""
      operationId: "addComment"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that case instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "caseId"
        in: "path"
        description: "identifier of the case instance"
        required: true
        type: "string"
        x-example: "CASE-00000000001"
      - name: "author"
        in: "query"
        description: "optional user id to be used instead of authenticated user -\
          \ only when bypass authenticated user is enabled"
        required: false
        type: "string"
      - name: "restrictedTo"
        in: "query"
        description: "optional role name(s) that given comment should be restricted\
          \ to"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - in: "body"
        name: "body"
        description: "actual content of the comment to be added as String"
        required: true
        schema:
          type: "string"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Case instance not found"
  /server/containers/{containerId}/cases/instances/{caseId}/comments/{caseCommentId}:
    put:
      tags:
      - "Case instances"
      summary: "Updates a specified comment in a specified case instance."
      description: ""
      operationId: "updateComment"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that case instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "caseId"
        in: "path"
        description: "identifier of the case instance"
        required: true
        type: "string"
        x-example: "CASE-00000000001"
      - name: "caseCommentId"
        in: "path"
        description: "identifier of the comment to be updated"
        required: true
        type: "string"
        x-example: "xxx-yyy-zzz"
      - name: "author"
        in: "query"
        description: "optional user id to be used instead of authenticated user -\
          \ only when bypass authenticated user is enabled"
        required: false
        type: "string"
      - name: "restrictedTo"
        in: "query"
        description: "optional role name(s) that given comment should be restricted\
          \ to"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - in: "body"
        name: "body"
        description: "actual content of the comment to be updated to as String"
        required: true
        schema:
          type: "string"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Case instance not found"
    delete:
      tags:
      - "Case instances"
      summary: "Deletes a specified comment in a specified case instance."
      description: ""
      operationId: "removeComment"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that case instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "caseId"
        in: "path"
        description: "identifier of the case instance"
        required: true
        type: "string"
        x-example: "CASE-00000000001"
      - name: "caseCommentId"
        in: "path"
        description: "identifier of the comment to be removed"
        required: true
        type: "string"
        x-example: "xxx-yyy-zzz"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Case instance not found"
  /server/containers/{containerId}/cases/instances:
    get:
      tags:
      - "Case instances"
      summary: "Returns case instances in a specified KIE container."
      description: ""
      operationId: "getCaseInstancesByContainer"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that should be used to filter case instances"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "status"
        in: "query"
        description: "optional case instance status (open, closed, canceled) - defaults\
          \ ot open (1) only"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "open"
          - "closed"
          - "cancelled"
        collectionFormat: "multi"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      - name: "sort"
        in: "query"
        description: "optional sort column, no default"
        required: false
        type: "string"
      - name: "sortOrder"
        in: "query"
        description: "optional sort direction (asc, desc) - defaults to asc"
        required: false
        type: "boolean"
        default: true
      - name: "withData"
        in: "query"
        description: "optional flag to load data when loading case instance"
        required: false
        type: "boolean"
        default: false
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              instances:
              - case-id: "IT-0000000006"
                case-description: "Order for IT hardware"
                case-owner: "baAdmin"
                case-status: 1
                case-definition-id: "itorders.orderhardware"
                container-id: "itorders_1.0.0-SNAPSHOT"
                case-started-at: 1540474204152
                case-completed-at: null
                case-completion-msg: ""
                case-sla-compliance: 0
                case-sla-due-date: null
                case-file: null
                case-milestones: null
                case-stages: null
                case-roles: null
              - case-id: "IT-0000000011"
                case-description: "Order for IT hardware"
                case-owner: "baAdmin"
                case-status: 1
                case-definition-id: "itorders.orderhardware"
                container-id: "itorders_1.0.0-SNAPSHOT6"
                case-started-at: 1540496734746
                case-completed-at: null
                case-completion-msg: ""
                case-sla-compliance: 0
                case-sla-due-date: null
                case-file: null
                case-milestones: null
                case-stages: null
                case-roles: null
          schema:
            $ref: "#/definitions/case-instance-list"
  /server/containers/{containerId}/cases/{caseDefId}/instances:
    get:
      tags:
      - "Case instances"
      summary: "Returns case instances for a specified case definition."
      description: ""
      operationId: "getCaseInstancesByDefinition"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that should be used to filter case instances"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "caseDefId"
        in: "path"
        description: "case definition id that should be used to filter case instances"
        required: true
        type: "string"
        x-example: "CASE-00000000001"
      - name: "status"
        in: "query"
        description: "optional case instance status (open, closed, canceled) - defaults\
          \ ot open (1) only"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "open"
          - "closed"
          - "cancelled"
        collectionFormat: "multi"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      - name: "sort"
        in: "query"
        description: "optional sort column, no default"
        required: false
        type: "string"
      - name: "sortOrder"
        in: "query"
        description: "optional sort direction (asc, desc) - defaults to asc"
        required: false
        type: "boolean"
        default: true
      - name: "withData"
        in: "query"
        description: "optional flag to load data when loading case instance"
        required: false
        type: "boolean"
        default: false
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              instances:
              - case-id: "IT-0000000006"
                case-description: "Order for IT hardware"
                case-owner: "baAdmin"
                case-status: 1
                case-definition-id: "itorders.orderhardware"
                container-id: "itorders_1.0.0-SNAPSHOT"
                case-started-at: 1540474204152
                case-completed-at: null
                case-completion-msg: ""
                case-sla-compliance: 0
                case-sla-due-date: null
                case-file: null
                case-milestones: null
                case-stages: null
                case-roles: null
              - case-id: "IT-0000000011"
                case-description: "Order for IT hardware"
                case-owner: "baAdmin"
                case-status: 1
                case-definition-id: "itorders.orderhardware"
                container-id: "itorders_1.0.0-SNAPSHOT6"
                case-started-at: 1540496734746
                case-completed-at: null
                case-completion-msg: ""
                case-sla-compliance: 0
                case-sla-due-date: null
                case-file: null
                case-milestones: null
                case-stages: null
                case-roles: null
          schema:
            $ref: "#/definitions/case-instance-list"
    post:
      tags:
      - "Case instances"
      summary: "Starts a new case instance for a specified case definition."
      description: ""
      operationId: "startCase"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id where the case definition resides"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "caseDefId"
        in: "path"
        description: "case definition id that new instance should be created from"
        required: true
        type: "string"
        x-example: "CASE-0000000001"
      - in: "body"
        name: "body"
        description: "optional CaseFile with variables and/or case role assignments"
        required: false
        schema:
          type: "string"
        x-examples:
          application/json: "{\n  \"case-data\" : {\n    \"car\" : \"ford\"\n  },\n\
            \  \"case-user-assignments\" : {\n    \"insured\" : \"yoda\",\n    \"\
            insuranceRepresentative\" : \"john\"\n  },\n  \"case-group-assignments\"\
            \ : { },\n  \"case-data-restrictions\" : { }\n}"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<case-file>\n    <data>\n        <entry>\n            <key>car</key>\n\
            \            <value xsi:type=\"xs:string\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
            \ xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">ford</value>\n\
            \        </entry>\n    </data>\n    <userAssignments>\n        <entry>\n\
            \            <key>insured</key>\n            <value>yoda</value>\n   \
            \     </entry>\n        <entry>\n            <key>insuranceRepresentative</key>\n\
            \            <value>john</value>\n        </entry>\n    </userAssignments>\n\
            \    <groupAssignments/>\n    <accessRestrictions/>\n</case-file>"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Case definition or Container Id not found"
        "201":
          description: "Successful response"
          examples:
            application/json: "CASE-0000000012"
          schema:
            type: "string"
  /server/containers/{containerId}/cases/{caseDefId}/instances/{caseId}:
    put:
      tags:
      - "Case instances"
      summary: "Reopens a closed case instance for a specified case definition."
      description: ""
      operationId: "reopenCase"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id where the case definition resides"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "caseDefId"
        in: "path"
        description: "case definition id that new instance should be created from"
        required: true
        type: "string"
        x-example: "evaluation"
      - name: "caseId"
        in: "path"
        description: "identifier of the case instance"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "optional CaseFile with variables and/or case role assignments"
        required: false
        schema:
          type: "string"
        x-examples:
          application/json: "{\n  \"case-data\" : {\n    \"car\" : \"ford\"\n  },\n\
            \  \"case-user-assignments\" : {\n    \"insured\" : \"yoda\",\n    \"\
            insuranceRepresentative\" : \"john\"\n  },\n  \"case-group-assignments\"\
            \ : { },\n  \"case-data-restrictions\" : { }\n}"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<case-file>\n    <data>\n        <entry>\n            <key>car</key>\n\
            \            <value xsi:type=\"xs:string\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
            \ xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">ford</value>\n\
            \        </entry>\n    </data>\n    <userAssignments>\n        <entry>\n\
            \            <key>insured</key>\n            <value>yoda</value>\n   \
            \     </entry>\n        <entry>\n            <key>insuranceRepresentative</key>\n\
            \            <value>john</value>\n        </entry>\n    </userAssignments>\n\
            \    <groupAssignments/>\n    <accessRestrictions/>\n</case-file>"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Case instance not found"
  /server/containers/{containerId}/cases/instances/{caseId}/caseFile:
    get:
      tags:
      - "Case instances"
      summary: "Returns data from the case files of a specified case instance."
      description: ""
      operationId: "getCaseInstanceData"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that case instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "caseId"
        in: "path"
        description: "identifier of the case instance"
        required: true
        type: "string"
        x-example: "CASE-00000000001"
      - name: "name"
        in: "query"
        description: "optional name(s) of the data items to retrieve"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Case instance not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              age: 25
              person:
                Person:
                  name: "john"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
    post:
      tags:
      - "Case instances"
      summary: "Adds data as case files in a specified case instance."
      description: ""
      operationId: "putCaseInstanceData"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that case instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "caseId"
        in: "path"
        description: "identifier of the case instance"
        required: true
        type: "string"
        x-example: "CASE-00000000001"
      - name: "restrictedTo"
        in: "query"
        description: "optional role name(s) that given data should be restricted to"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - in: "body"
        name: "body"
        description: "map of data to be placed in case file as Map"
        required: true
        schema:
          type: "string"
        x-examples:
          application/json: "{\n    \"age\": 25,\n    \"person\": {\n        \"Person\"\
            : {\n            \"name\": \"john\"\n        }\n    }\n}"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<map-type>\n    <entries>\n        <entry>\n            <key>age</key>\n\
            \            <value xsi:type=\"xs:int\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
            \n                    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
            >25</value>\n        </entry>\n        <entry>\n            <key>person</key>\n\
            \            <value xsi:type=\"person\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
            >\n                <name>john</name>\n            </value>\n        </entry>\n\
            \    </entries>\n</map-type>"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Case instance not found"
    delete:
      tags:
      - "Case instances"
      summary: "Deletes one or more specified case file data items from a specified\
        \ case instance."
      description: ""
      operationId: "deleteCaseInstanceData"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that case instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "caseId"
        in: "path"
        description: "identifier of the case instance"
        required: true
        type: "string"
        x-example: "CASE-00000000001"
      - name: "dataId"
        in: "query"
        description: "one or more names of the data items to be removed from case\
          \ file"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Case instance not found"
  /server/containers/{containerId}/cases/instances/{caseId}/caseFile/{dataId}:
    get:
      tags:
      - "Case instances"
      summary: "Returns the value of a specified case file data item in a specified\
        \ case instance."
      description: ""
      operationId: "getCaseInstanceDataByName"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that case instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "caseId"
        in: "path"
        description: "identifier of the case instance"
        required: true
        type: "string"
        x-example: "CASE-00000000001"
      - name: "dataId"
        in: "path"
        description: "name of the data item within case file to retrieve"
        required: true
        type: "string"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Case instance not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              Person:
                name: "john"
          schema:
            type: "object"
    post:
      tags:
      - "Case instances"
      summary: "Adds a single data item as a case file in a specified case instance."
      description: ""
      operationId: "putCaseInstanceDataByName"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that case instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "caseId"
        in: "path"
        description: "identifier of the case instance"
        required: true
        type: "string"
        x-example: "CASE-00000000001"
      - name: "dataId"
        in: "path"
        description: "name of the data item to be added to case file"
        required: true
        type: "string"
      - name: "restrictedTo"
        in: "query"
        description: "optional role name(s) that given data should be restricted to"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - in: "body"
        name: "body"
        description: "data to be placed in case file, any type can be provided"
        required: true
        schema:
          type: "string"
        x-examples:
          application/json: "{\n    \"Person\": {\n        \"name\": \"john\"\n  \
            \  }\n}"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<person>\n    <name>john</name>\n</person>"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Case instance not found"
  /server/containers/{containerId}/cases/instances/{caseId}/tasks:
    post:
      tags:
      - "Case instances"
      summary: "Adds a dynamic user task or service task to the specified case instance."
      description: ""
      operationId: "addDynamicTaskToCase"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that case instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "caseId"
        in: "path"
        description: "identifier of the case instance"
        required: true
        type: "string"
        x-example: "CASE-00000000001"
      - in: "body"
        name: "body"
        description: "data for dynamic task (it represents task specification that\
          \ drives the selection of the type of task)"
        required: true
        schema:
          type: "string"
        x-examples:
          application/json: "{\n    \"age\": 25,\n    \"person\": {\n        \"Person\"\
            : {\n            \"name\": \"john\"\n        }\n    }\n}"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<map-type>\n    <entries>\n        <entry>\n            <key>age</key>\n\
            \            <value xsi:type=\"xs:int\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
            \n                    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
            >25</value>\n        </entry>\n        <entry>\n            <key>person</key>\n\
            \            <value xsi:type=\"person\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
            >\n                <name>john</name>\n            </value>\n        </entry>\n\
            \    </entries>\n</map-type>"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Case instance not found"
  /server/containers/{containerId}/cases/instances/{caseId}/stages/{caseStageId}/tasks:
    post:
      tags:
      - "Case instances"
      summary: "Adds a dynamic user task or service task to the specified stage in\
        \ a specified case instance."
      description: ""
      operationId: "addDynamicTaskToCase_1"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that case instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "caseId"
        in: "path"
        description: "identifier of the case instance"
        required: true
        type: "string"
        x-example: "CASE-00000000001"
      - name: "caseStageId"
        in: "path"
        description: "identifier of the stage within case instance where dynamic task\
          \ should be added"
        required: true
        type: "string"
        x-example: "stageOne"
      - in: "body"
        name: "body"
        description: "data for dynamic task (it represents task specification that\
          \ drives the selection of the type of task)"
        required: true
        schema:
          type: "string"
        x-examples:
          application/json: "{\n    \"age\": 25,\n    \"person\": {\n        \"Person\"\
            : {\n            \"name\": \"john\"\n        }\n    }\n}"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<map-type>\n    <entries>\n        <entry>\n            <key>age</key>\n\
            \            <value xsi:type=\"xs:int\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
            \n                    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
            >25</value>\n        </entry>\n        <entry>\n            <key>person</key>\n\
            \            <value xsi:type=\"person\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
            >\n                <name>john</name>\n            </value>\n        </entry>\n\
            \    </entries>\n</map-type>"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Case instance not found"
  /server/containers/{containerId}/cases/instances/{caseId}/stages/{caseStageId}/processes/{processId}:
    post:
      tags:
      - "Case instances"
      summary: "Adds dynamic subprocess identified by process id to stage within case\
        \ instance"
      description: ""
      operationId: "addDynamicProcessToCase"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that case instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "caseId"
        in: "path"
        description: "identifier of the case instance"
        required: true
        type: "string"
        x-example: "CASE-00000000001"
      - name: "caseStageId"
        in: "path"
        description: "identifier of the stage within case instance where dynamic subprocess\
          \ should be added"
        required: true
        type: "string"
        x-example: "stageOne"
      - name: "processId"
        in: "path"
        description: "process id of the subprocess to be added"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "data for dynamic subprocess"
        required: true
        schema:
          type: "string"
        x-examples:
          application/json: "{\n    \"age\": 25,\n    \"person\": {\n        \"Person\"\
            : {\n            \"name\": \"john\"\n        }\n    }\n}"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<map-type>\n    <entries>\n        <entry>\n            <key>age</key>\n\
            \            <value xsi:type=\"xs:int\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
            \n                    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
            >25</value>\n        </entry>\n        <entry>\n            <key>person</key>\n\
            \            <value xsi:type=\"person\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
            >\n                <name>john</name>\n            </value>\n        </entry>\n\
            \    </entries>\n</map-type>"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Case instance not found"
  /server/containers/{containerId}/cases/instances/{caseId}/processes/{processId}:
    post:
      tags:
      - "Case instances"
      summary: "Adds a dynamic subprocess to a specified case instance."
      description: ""
      operationId: "addDynamicProcessToCase_1"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that case instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "caseId"
        in: "path"
        description: "identifier of the case instance"
        required: true
        type: "string"
        x-example: "CASE-00000000001"
      - name: "processId"
        in: "path"
        description: "process id of the subprocess to be added"
        required: true
        type: "string"
        x-example: "placeOrder"
      - in: "body"
        name: "body"
        description: "data for dynamic subprocess"
        required: true
        schema:
          type: "string"
        x-examples:
          application/json: "{\n    \"age\": 25,\n    \"person\": {\n        \"Person\"\
            : {\n            \"name\": \"john\"\n        }\n    }\n}"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<map-type>\n    <entries>\n        <entry>\n            <key>age</key>\n\
            \            <value xsi:type=\"xs:int\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
            \n                    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
            >25</value>\n        </entry>\n        <entry>\n            <key>person</key>\n\
            \            <value xsi:type=\"person\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
            >\n                <name>john</name>\n            </value>\n        </entry>\n\
            \    </entries>\n</map-type>"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Case instance not found"
  /server/containers/{containerId}/cases/instances/{caseId}/stages/{caseStageId}/tasks/{nodeName}:
    put:
      tags:
      - "Case instances"
      summary: "Triggers a specified ad hoc fragment in the specified stage of a specified\
        \ case instance."
      description: ""
      operationId: "triggerAdHocNodeInStage"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that case instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "caseId"
        in: "path"
        description: "identifier of the case instance"
        required: true
        type: "string"
        x-example: "CASE-00000000001"
      - name: "caseStageId"
        in: "path"
        description: "identifier of the stage within case instance where adhoc fragment\
          \ should be triggered"
        required: true
        type: "string"
        x-example: "stageOne"
      - name: "nodeName"
        in: "path"
        description: "name of the adhoc fragment to be triggered"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "optional data to be given when triggering adhoc fragment"
        required: false
        schema:
          type: "string"
        x-examples:
          application/json: "{\n    \"age\": 25,\n    \"person\": {\n        \"Person\"\
            : {\n            \"name\": \"john\"\n        }\n    }\n}"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<map-type>\n    <entries>\n        <entry>\n            <key>age</key>\n\
            \            <value xsi:type=\"xs:int\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
            \n                    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
            >25</value>\n        </entry>\n        <entry>\n            <key>person</key>\n\
            \            <value xsi:type=\"person\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
            >\n                <name>john</name>\n            </value>\n        </entry>\n\
            \    </entries>\n</map-type>"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Case instance not found"
  /server/containers/{containerId}/cases/instances/{caseId}/tasks/{nodeName}:
    put:
      tags:
      - "Case instances"
      summary: "Triggers a specified ad hoc fragment in a specified case instance."
      description: ""
      operationId: "triggerAdHocNode"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that case instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "caseId"
        in: "path"
        description: "identifier of the case instance"
        required: true
        type: "string"
        x-example: "CASE-00000000001"
      - name: "nodeName"
        in: "path"
        description: "name of the adhoc fragment to be triggered"
        required: true
        type: "string"
        x-example: "sampleTask"
      - in: "body"
        name: "body"
        description: "optional data to be given when triggering adhoc fragment"
        required: false
        schema:
          type: "string"
        x-examples:
          application/json: "{\n    \"age\": 25,\n    \"person\": {\n        \"Person\"\
            : {\n            \"name\": \"john\"\n        }\n    }\n}"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<map-type>\n    <entries>\n        <entry>\n            <key>age</key>\n\
            \            <value xsi:type=\"xs:int\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
            \n                    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
            >25</value>\n        </entry>\n        <entry>\n            <key>person</key>\n\
            \            <value xsi:type=\"person\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
            >\n                <name>john</name>\n            </value>\n        </entry>\n\
            \    </entries>\n</map-type>"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Case instance not found"
  /server/containers/{containerId}/cases/instances/{caseId}/milestones:
    get:
      tags:
      - "Case instances"
      summary: "Returns milestones for a specified case instance."
      description: ""
      operationId: "getCaseInstanceMilestones"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that case instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "caseId"
        in: "path"
        description: "identifier of the case instance"
        required: true
        type: "string"
        x-example: "CASE-00000000001"
      - name: "achievedOnly"
        in: "query"
        description: "optional flag that allows to control which milestones to load\
          \ - achieved only or actives ones too, defaults to true"
        required: false
        type: "boolean"
        default: true
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Case instance not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              milestones:
              - milestone-name: "Milestone 1: Order placed"
                milestone-id: "1"
                milestone-achieved: false
                milestone-achieved-at: null
                milestone-status: "Available"
              - milestone-name: "Hardware spec ready"
                milestone-id: "2"
                milestone-achieved: false
                milestone-achieved-at: null
                milestone-status: "Available"
              - milestone-name: "Manager decision"
                milestone-id: "3"
                milestone-achieved: false
                milestone-achieved-at: null
                milestone-status: "Available"
              - milestone-name: "Milestone 2: Order shipped"
                milestone-id: "_343B90CD-AA19-4894-B63C-3CE1906E6FD1"
                milestone-achieved: false
                milestone-achieved-at: null
                milestone-status: "Available"
              - milestone-name: "Milestone 3: Delivered to customer"
                milestone-id: "_52AFA23F-C087-4519-B8F2-BABCC31D68A6"
                milestone-achieved: false
                milestone-achieved-at: null
                milestone-status: "Available"
          schema:
            $ref: "#/definitions/case-milestone-list"
  /server/config:
    post:
      tags:
      - "KIE Server and KIE containers"
      summary: "Executes one or more KIE Server commands for server-related or container-related\
        \ operations"
      description: ""
      operationId: "executeCommands"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "command script payload"
        required: true
        schema:
          type: "string"
        x-examples:
          application/json: "{\n  \"commands\": [\n    {\n      \"create-container\"\
            : {\n        \"container\": {\n          \"status\": \"STARTED\",\n  \
            \        \"container-id\": \"command-script-container\",\n          \"\
            release-id\": {\n            \"version\": \"1.0\",\n            \"group-id\"\
            : \"com.redhat\",\n            \"artifact-id\": \"Project1\"\n       \
            \   }\n        }\n      }\n    },\n    {\n      \"call-container\": {\n\
            \        \"payload\": \"{\\n  \\\"commands\\\" : [ {\\n    \\\"fire-all-rules\\\
            \" : {\\n      \\\"max\\\" : -1,\\n      \\\"out-identifier\\\" : null\\\
            n    }\\n  } ]\\n}\",\n        \"container-id\": \"command-script-container\"\
            \n      }\n    },\n    {\n      \"dispose-container\": {\n        \"container-id\"\
            : \"command-script-container\"\n      }\n    }\n  ]\n}"
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              response:
              - type: "SUCCESS"
                msg: "Container command-script-container successfully deployed with\
                  \ module com.redhat:Project1:1.0."
                result:
                  kie-container:
                    container-id: "command-script-container"
                    release-id:
                      group-id: "com.redhat"
                      artifact-id: "Project1"
                      version: "1.0"
                    resolved-release-id:
                      group-id: "com.redhat"
                      artifact-id: "Project1"
                      version: "1.0"
                    status: "DISPOSING"
                    scanner:
                      status: "DISPOSED"
                      poll-interval: null
                    config-items: []
                    messages:
                    - severity: "INFO"
                      timestamp:
                        java.util.Date: 1538768011150
                      content:
                      - "Container command-script-container successfully created with\
                        \ module com.redhat:Project1:1.0."
                    container-alias: null
              - type: "SUCCESS"
                msg: "Container command-script-container successfully called."
                result: "{\n  \"results\" : [ ],\n  \"facts\" : [ ]\n}"
              - type: "SUCCESS"
                msg: "Container command-script-container successfully disposed."
                result: null
          schema:
            $ref: "#/definitions/responses"
  /server/containers/{containerId}:
    get:
      tags:
      - "KIE Server and KIE containers"
      summary: "Returns information about a specified KIE container."
      description: ""
      operationId: "getContainerInfo"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "Container id to be retrieved"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json: "⁠{\n  \"response\": [\n    {\n      \"type\": \"SUCCESS\"\
              ,\n      \"msg\": \"Info for container MyProjectContainer\",\n     \
              \ \"result\": {\n        \"kie-containers\": {\n          \"kie-container\"\
              : [\n            {\n              \"container-id\": \"MyProjectContainer\"\
              ,\n              \"release-id\": {\n                \"group-id\": \"\
              com.redhat\",\n                \"artifact-id\": \"Project1\",\n    \
              \            \"version\": \"1.0\"\n              },\n              \"\
              resolved-release-id\": {\n                \"group-id\": \"com.redhat\"\
              ,\n                \"artifact-id\": \"Project1\",\n                \"\
              version\": \"1.0\"\n              },\n              \"status\": \"STARTED\"\
              ,\n              \"scanner\": {\n                \"status\": \"DISPOSED\"\
              ,\n                \"poll-interval\": null\n              },\n     \
              \         \"config-items\": [\n                {\n                 \
              \ \"itemName\": \"KBase\",\n                  \"itemValue\": \"\",\n\
              \                  \"itemType\": \"BPM\"\n                },\n     \
              \           {\n                  \"itemName\": \"KSession\",\n     \
              \             \"itemValue\": \"\",\n                  \"itemType\":\
              \ \"BPM\"\n                },\n                {\n                 \
              \ \"itemName\": \"MergeMode\",\n                  \"itemValue\": \"\
              MERGE_COLLECTIONS\",\n                  \"itemType\": \"BPM\"\n    \
              \            },\n                {\n                  \"itemName\":\
              \ \"RuntimeStrategy\",\n                  \"itemValue\": \"SINGLETON\"\
              ,\n                  \"itemType\": \"BPM\"\n                }\n    \
              \          ],\n              \"messages\": [\n                {\n  \
              \                \"severity\": \"INFO\",\n                  \"timestamp\"\
              : {\n                    \"java.util.Date\": 1538996205681\n       \
              \           },\n                  \"content\": [\n                 \
              \   \"Container MyProjectContainer successfully created with module\
              \ com.redhat:Project1:1.0.\"\n                  ]\n                }\n\
              \              ],\n              \"container-alias\": \"MyProjectContainer\"\
              \n            }\n          ]\n        }\n      }\n    }\n  ]\n}"
          schema:
            $ref: "#/definitions/response"
    put:
      tags:
      - "KIE Server and KIE containers"
      summary: "Creates a new KIE container in the KIE Server with a specified KIE\
        \ container ID"
      description: ""
      operationId: "createContainer"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "Container id to be assigned to deployed KIE Container"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - in: "body"
        name: "body"
        description: "KIE Container resource to be deployed as KieContainerResource"
        required: true
        schema:
          type: "string"
        x-examples:
          application/json: "{\n    \"container-id\" : \"baz\",\n    \"release-id\"\
            \ : {\n        \"group-id\" : \"foo\",\n        \"artifact-id\" : \"bar\"\
            ,\n        \"version\" : \"1.0\"\n    }\n}"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<kie-container container-id=\"baz\">\n    <release-id>\n    \
            \    <group-id>foo</group-id>\n        <artifact-id>bar</artifact-id>\n\
            \        <version>1.0</version>\n    </release-id>\n</kie-container>"
      responses:
        "201":
          description: "Successful response"
          examples:
            application/json:
              response:
              - type: "SUCCESS"
                msg: "Container MyProjectContainer successfully deployed with module\
                  \ com.redhat:Project1:1.0."
                result:
                  kie-container:
                    container-id: "MyProjectContainer"
                    release-id:
                      artifact-id: "Project1"
                      group-id: "com.redhat"
                      version: "1.0"
                    resolved-release-id:
                      artifact-id: "Project1"
                      group-id: "com.redhat"
                      version: "1.0"
                    status: "STARTED"
                    scanner:
                      status: "DISPOSED"
                      poll-interval: null
                    config-items: []
                    messages:
                    - severity: "INFO"
                      timestamp:
                        java.util.Date: 1538756503852
                      content:
                      - "Container MyProjectContainer successfully created with module\
                        \ com.redhat:Project1:1.0."
                    container-alias: null
        "500":
          description: "Unexpected error"
        "400":
          description: "container could not be created"
    delete:
      tags:
      - "KIE Server and KIE containers"
      summary: "Disposes a specified KIE container."
      description: ""
      operationId: "disposeContainer"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "Container id to be disposed (undeployed)"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "abortProcessInstances"
        in: "query"
        description: "optional abortProcessInstances flag to abort process instances\
          \ when container is disposed"
        required: false
        type: "boolean"
      responses:
        "200":
          description: "Successful response"
          examples:
            application/json:
              response:
              - type: "SUCCESS"
                msg: "Container MyProjectContainer successfully disposed."
                result: null
        "500":
          description: "Unexpected error"
  /server/readycheck:
    get:
      tags:
      - "KIE Server and KIE containers"
      summary: "Readiness check for KIE Server that indicates that server is fully\
        \ booted and ready to accept requests"
      description: ""
      operationId: "readycheck"
      produces:
      - "text/plain"
      parameters: []
      responses:
        "503":
          description: "Service not yet available"
  /server/healthcheck:
    get:
      tags:
      - "KIE Server and KIE containers"
      summary: "Liveness check for KIE Server that validates both kie server and all\
        \ extensions, optionally produces report"
      description: ""
      operationId: "healthcheck"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "report"
        in: "query"
        description: "optional report flag to return detailed report of the check,\
          \ defaults to false"
        required: false
        type: "boolean"
        default: false
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/kie-message"
        "503":
          description: "If any of the checks failed"
  /server/containers/{containerId}/scanner:
    get:
      tags:
      - "KIE Server and KIE containers"
      summary: "Returns information about the KIE scanner used for automatic updates\
        \ in a specified KIE container, if applicable."
      description: ""
      operationId: "getScannerInfo"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "Container id for scanner to be loaded"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              response:
              - type: "SUCCESS"
                msg: "Scanner info successfully retrieved"
                result:
                  kie-scanner:
                    status: "DISPOSED"
                    poll-interval: null
          schema:
            $ref: "#/definitions/response"
    post:
      tags:
      - "KIE Server and KIE containers"
      summary: "Starts or stops a KIE scanner that controls polling for updated KIE\
        \ container deployments, if applicable."
      description: ""
      operationId: "updateScanner"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "Container id for scanner to be updated"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - in: "body"
        name: "body"
        description: "Scanner information given as KieScannerResource type"
        required: true
        schema:
          type: "string"
        x-examples:
          application/json: "{\n    \"status\" : \"STARTED\",\n    \"poll-interval\"\
            \ : \"10000\"\n}"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<kie-scanner poll-interval=\"10000\" status=\"STARTED\"/>"
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              response:
              - type: "SUCCESS"
                msg: "Kie scanner successfully created."
                result:
                  kie-scanner:
                    status: "STARTED"
                    poll-interval: 20
          schema:
            $ref: "#/definitions/response"
  /server/containers/{containerId}/release-id:
    get:
      tags:
      - "KIE Server and KIE containers"
      summary: "Returns release ID information (group ID, artifact ID, version) for\
        \ a specified KIE container."
      description: ""
      operationId: "getReleaseId"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "Container id that release id should be loaded from"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              response:
              - type: "SUCCESS"
                msg: "ReleaseId for container MyProjectContainer"
                result:
                  release-id:
                    group-id: "com.redhat"
                    artifact-id: "Project1"
                    version: "1.0"
          schema:
            $ref: "#/definitions/response"
    post:
      tags:
      - "KIE Server and KIE containers"
      summary: "Updates release ID information (group ID, artifact ID, version) for\
        \ a specified KIE container."
      description: ""
      operationId: "updateReleaseId"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "Container id that release id should be upgraded"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - in: "body"
        name: "body"
        description: "Release Id to be upgraded to as ReleaseId type"
        required: true
        schema:
          type: "string"
        x-examples:
          application/json: "{\n    \"group-id\" : \"foo\",\n    \"artifact-id\" :\
            \ \"bar\",\n    \"version\" : \"1.0\"\n}"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<release-id>\n    <group-id>foo</group-id>\n    <artifact-id>bar</artifact-id>\n\
            \    <version>1.0</version>\n</release-id>"
      - name: "resetBeforeUpdate"
        in: "query"
        description: "Determines whether active processes are aborted (reset) before\
          \ updating when the server runs in development mode"
        required: false
        type: "boolean"
        default: false
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              response:
              - "-type": "SUCCESS"
                "-msg": "Release id successfully updated."
                release-id:
                  artifact-id: "Project1"
                  group-id: "com.redhat"
                  version: "1.1"
          schema:
            $ref: "#/definitions/response"
  /server/containers/{containerId}/status/activated:
    put:
      tags:
      - "KIE Server and KIE containers"
      summary: "Activates (previously deactivated) KIE container on this server"
      description: ""
      operationId: "activateContainer"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "Container id of deployed KIE Container"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      responses:
        "201":
          description: "Successful response"
          examples:
            application/json:
              response:
              - type: "SUCCESS"
                msg: "Container MyProjectContainer successfully deployed with module\
                  \ com.redhat:Project1:1.0."
                result:
                  kie-container:
                    container-id: "MyProjectContainer"
                    release-id:
                      artifact-id: "Project1"
                      group-id: "com.redhat"
                      version: "1.0"
                    resolved-release-id:
                      artifact-id: "Project1"
                      group-id: "com.redhat"
                      version: "1.0"
                    status: "STARTED"
                    scanner:
                      status: "DISPOSED"
                      poll-interval: null
                    config-items: []
                    messages:
                    - severity: "INFO"
                      timestamp:
                        java.util.Date: 1538756503852
                      content:
                      - "Container MyProjectContainer successfully created with module\
                        \ com.redhat:Project1:1.0."
                    container-alias: null
        "500":
          description: "Unexpected error"
        "400":
          description: "container could not be activated"
  /server/containers/{containerId}/status/deactivated:
    put:
      tags:
      - "KIE Server and KIE containers"
      summary: "Deactivates (previously started) KIE container on this server"
      description: ""
      operationId: "deactivateContainer"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "Container id of deployed KIE Container"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      responses:
        "201":
          description: "Successful response"
          examples:
            application/json:
              response:
              - type: "SUCCESS"
                msg: "Container MyProjectContainer successfully deployed with module\
                  \ com.redhat:Project1:1.0."
                result:
                  kie-container:
                    container-id: "MyProjectContainer"
                    release-id:
                      artifact-id: "Project1"
                      group-id: "com.redhat"
                      version: "1.0"
                    resolved-release-id:
                      artifact-id: "Project1"
                      group-id: "com.redhat"
                      version: "1.0"
                    status: "DEACTIVATED"
                    scanner:
                      status: "DISPOSED"
                      poll-interval: null
                    config-items: []
                    messages:
                    - severity: "INFO"
                      timestamp:
                        java.util.Date: 1538756503852
                      content:
                      - "Container MyProjectContainer successfully created with module\
                        \ com.redhat:Project1:1.0."
                    container-alias: null
        "500":
          description: "Unexpected error"
        "400":
          description: "container could not be deactivated"
  /server/containers:
    get:
      tags:
      - "KIE Server and KIE containers"
      summary: "Returns a list of KIE containers on the KIE Server."
      description: ""
      operationId: "listContainers"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "groupId"
        in: "query"
        description: "optional groupId to filter containers by"
        required: false
        type: "string"
      - name: "artifactId"
        in: "query"
        description: "optional artifactId to filter containers by"
        required: false
        type: "string"
      - name: "version"
        in: "query"
        description: "optional version to filter containers by"
        required: false
        type: "string"
      - name: "status"
        in: "query"
        description: "optional status to filter containers by"
        required: false
        type: "string"
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              response:
              - type: "SUCCESS"
                msg: "List of created containers"
                result:
                  kie-containers:
                    kie-container:
                    - container-id: "MyProjectContainer"
                      release-id:
                        group-id: "com.redhat"
                        artifact-id: "Project1"
                        version: "1.0"
                      resolved-release-id:
                        group-id: "com.redhat"
                        artifact-id: "Project1"
                        version: "1.0"
                      status: "STARTED"
                      scanner:
                        status: "DISPOSED"
                        poll-interval: null
                      config-items:
                      - itemName: "KBase"
                        itemValue: ""
                        itemType: "BPM"
                      - itemName: "KSession"
                        itemValue: ""
                        itemType: "BPM"
                      - itemName: "MergeMode"
                        itemValue: "MERGE_COLLECTIONS"
                        itemType: "BPM"
                      - itemName: "RuntimeStrategy"
                        itemValue: "SINGLETON"
                        itemType: "BPM"
                      messages:
                      - severity: "INFO"
                        timestamp:
                          java.util.Date: 1538996205681
                        content:
                        - "Container MyProjectContainer successfully created with\
                          \ module com.redhat:Project1:1.0."
                      container-alias: "MyProjectContainer"
                    - container-id: "employe-rostering"
                      release-id:
                        group-id: "employeerostering"
                        artifact-id: "employeerostering"
                        version: "1.0.0-SNAPSHOT"
                      resolved-release-id:
                        group-id: "employeerostering"
                        artifact-id: "employeerostering"
                        version: "1.0.0-SNAPSHOT"
                      status: "STARTED"
                      scanner:
                        status: "DISPOSED"
                        poll-interval: null
                      config-items:
                      - itemName: "KBase"
                        itemValue: ""
                        itemType: "BPM"
                      - itemName: "KSession"
                        itemValue: ""
                        itemType: "BPM"
                      - itemName: "MergeMode"
                        itemValue: "MERGE_COLLECTIONS"
                        itemType: "BPM"
                      - itemName: "RuntimeStrategy"
                        itemValue: "SINGLETON"
                        itemType: "BPM"
                      messages:
                      - severity: "INFO"
                        timestamp:
                          java.util.Date: 1539029260330
                        content:
                        - "Container employee-rostering successfully created with\
                          \ module employeerostering:employeerostering:1.0.0-SNAPSHOT."
                      container-alias: "employeerostering"
          schema:
            $ref: "#/definitions/response"
  /server/state:
    get:
      tags:
      - "KIE Server and KIE containers"
      summary: "Returns information about the current state and configurations of\
        \ the KIE Server."
      description: ""
      operationId: "getServerState"
      produces:
      - "application/json"
      - "application/xml"
      parameters: []
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              response:
              - type: "SUCCESS"
                msg: "Successfully loaded server state for server id default-kieserver"
                result:
                  kie-server-state-info:
                    controller:
                    - "http://localhost:8080/business-central/rest/controller"
                    config:
                      config-items:
                      - itemName: "org.kie.server.location"
                        itemValue: "http://localhost:8080/kie-server/services/rest/server"
                        itemType: "java.lang.String"
                      - itemName: "org.kie.server.controller.user"
                        itemValue: "controllerUser"
                        itemType: "java.lang.String"
                      - itemName: "org.kie.server.controller"
                        itemValue: "http://localhost:8080/business-central/rest/controller"
                        itemType: "java.lang.String"
                    containers:
                    - container-id: "employee-rostering"
                      release-id:
                        group-id: "employeerostering"
                        artifact-id: "employeerostering"
                        version: "1.0.0-SNAPSHOT"
                      resolved-release-id: null
                      status: "STARTED"
                      scanner:
                        status: "STOPPED"
                        poll-interval: null
                      config-items:
                      - itemName: "KBase"
                        itemValue: ""
                        itemType: "BPM"
                      - itemName: "KSession"
                        itemValue: ""
                        itemType: "BPM"
                      - itemName: "MergeMode"
                        itemValue: "MERGE_COLLECTIONS"
                        itemType: "BPM"
                      - itemName: "RuntimeStrategy"
                        itemValue: "SINGLETON"
                        itemType: "BPM"
                      messages: []
                      container-alias: "employeerostering"
          schema:
            $ref: "#/definitions/response"
  /server:
    get:
      tags:
      - "KIE Server and KIE containers"
      summary: "Returns information about the KIE Server. The endpoint for this request\
        \ is the base URL for the REST API."
      description: ""
      operationId: "getInfo"
      produces:
      - "application/json"
      - "application/xml"
      parameters: []
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              response:
              - type: "SUCCESS"
                msg: "Kie Server info"
                result:
                  kie-server-info:
                    id: "default-kieserver"
                    version: "7.11.0.Final-redhat-00001"
                    name: "default-kieserver"
                    location: "http://localhost:8080/kie-server/services/rest/server"
                    capabilities:
                    - "KieServer"
                    - "BRM"
                    - "BPM"
                    - "CaseMgmt"
                    - "BPM-UI"
                    - "BRP"
                    - "DMN"
                    - "Swagger"
                    messages:
                    - severity: "INFO"
                      timestamp:
                        java.util.Date: 1538996199184
                      content:
                      - "Server KieServerInfo{serverId='default-kieserver', version='7.11.0.Final-redhat-00001',\
                        \ name='default-kieserver', location='http://localhost:8080/kie-server/services/rest/server',\
                        \ capabilities=[KieServer, BRM, BPM, CaseMgmt, BPM-UI, BRP,\
                        \ DMN, Swagger], messages=null}started successfully at Mon\
                        \ Oct 08 06:56:39 EDT 2018"
          schema:
            $ref: "#/definitions/response"
  /server/containers/{containerId}/dmn/models/{modelId}:
    get:
      tags:
      - "DMN models"
      summary: "Model-specific definitions"
      description: "This is a techincal endpoint not directly documented here; this\
        \ endpoint instead is documented in another Swagger/OAS definitions. Please\
        \ reference container-specific generated Swagger/OAS definitions, as described\
        \ in the documentation (doc ref: \"REST endpoints for specific DMN models\"\
        , req refs: BAPL-1787, DROOLS-6047)."
      operationId: "getModel"
      produces:
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "Container id to retrieve the Model-specific definitions"
        required: true
        type: "string"
      - name: "modelId"
        in: "path"
        description: "Reference container-specific Swagger/OAS definitions"
        required: true
        type: "string"
      responses:
        default:
          description: "successful operation"
    post:
      tags:
      - "DMN models"
      summary: "Model-specific DMN evaluation"
      description: "This is a techincal endpoint not directly documented here; this\
        \ endpoint instead is documented in another Swagger/OAS definitions. Please\
        \ reference container-specific generated Swagger/OAS definitions, as described\
        \ in the documentation (doc ref: \"REST endpoints for specific DMN models\"\
        , req refs: BAPL-1787, DROOLS-6047)."
      operationId: "evaluateModel"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "containerId"
        in: "path"
        description: "Container id to be used to evaluate decisions on"
        required: true
        type: "string"
      - name: "modelId"
        in: "path"
        description: "Reference container-specific Swagger/OAS definitions"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Reference container-specific Swagger/OAS definitions"
        required: true
        schema:
          type: "string"
      responses:
        default:
          description: "successful operation"
  /server/containers/{containerId}/dmn/models/{modelId}/{decisionServiceId}/dmnresult:
    post:
      tags:
      - "DMN models"
      summary: "Model-specific DMN evaluation"
      description: "This is a techincal endpoint not directly documented here; this\
        \ endpoint instead is documented in another Swagger/OAS definitions. Please\
        \ reference container-specific generated Swagger/OAS definitions, as described\
        \ in the documentation (doc ref: \"REST endpoints for specific DMN models\"\
        , req refs: BAPL-1787, DROOLS-6047)."
      operationId: "evaluateModelDSAsDmnResult"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "containerId"
        in: "path"
        description: "Container id to be used to evaluate decisions on"
        required: true
        type: "string"
      - name: "modelId"
        in: "path"
        description: "Reference container-specific Swagger/OAS definitions"
        required: true
        type: "string"
      - name: "decisionServiceId"
        in: "path"
        description: "Reference container-specific Swagger/OAS definitions"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Reference container-specific Swagger/OAS definitions"
        required: true
        schema:
          type: "string"
      responses:
        default:
          description: "successful operation"
  /server/containers/{containerId}/dmn/models/{modelId}/dmnresult:
    post:
      tags:
      - "DMN models"
      summary: "Model-specific DMN evaluation"
      description: "This is a techincal endpoint not directly documented here; this\
        \ endpoint instead is documented in another Swagger/OAS definitions. Please\
        \ reference container-specific generated Swagger/OAS definitions, as described\
        \ in the documentation (doc ref: \"REST endpoints for specific DMN models\"\
        , req refs: BAPL-1787, DROOLS-6047)."
      operationId: "evaluateModelAsDmnResult"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "containerId"
        in: "path"
        description: "Container id to be used to evaluate decisions on"
        required: true
        type: "string"
      - name: "modelId"
        in: "path"
        description: "Reference container-specific Swagger/OAS definitions"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Reference container-specific Swagger/OAS definitions"
        required: true
        schema:
          type: "string"
      responses:
        default:
          description: "successful operation"
  /server/containers/{containerId}/dmn:
    get:
      tags:
      - "DMN models"
      summary: "Retrieves DMN model for given container"
      description: "Please reference the documentation for usage of the KIE Server\
        \ REST API for DMN (doc ref: \"Executing a DMN service using the KIE Server\
        \ REST API\" section in the Getting started with decision services)."
      operationId: "getModels"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "containerId"
        in: "path"
        description: "Container id that models should be loaded from"
        required: true
        type: "string"
        x-example: "traffic-violation_1.0.0-SNAPSHOT"
      responses:
        "200":
          description: "Successful response"
          examples:
            application/json:
              type: "SUCCESS"
              msg: "OK models successfully retrieved from container 'Traffic-Violation_1.0.0-SNAPSHOT'"
              result:
                dmn-model-info-list:
                  models:
                  - model-namespace: "https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8"
                    model-name: "Traffic Violation"
                    model-id: "_2CD7D1AA-BD84-4B43-AD21-B0342ADE655A"
                    decisions:
                    - decision-id: "_23428EE8-DC8B-4067-8E67-9D7C53EC975F"
                      decision-name: "Fine"
                    - decision-id: "_B5EEE2B1-915C-44DC-BE43-C244DC066FD8"
                      decision-name: "Should the driver be suspended?"
                    inputs:
                    - inputdata-id: "_CEB959CD-3638-4A87-93BA-03CD0FB63AE3"
                      inputdata-name: "Violation"
                      inputdata-typeRef:
                        namespace-uri: "https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8"
                        local-part: "tViolation"
                        prefix: ""
                    - inputdata-id: "_B0E810E6-7596-430A-B5CF-67CE16863B6C"
                      inputdata-name: "Driver"
                      inputdata-typeRef:
                        namespace-uri: "https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8"
                        local-part: "tDriver"
                        prefix: ""
                    itemDefinitions:
                    - itemdefinition-id: "_13C7EFD8-B85C-43BF-94D3-14FABE39A4A0"
                      itemdefinition-name: "tDriver"
                      itemdefinition-typeRef: null
                      itemdefinition-itemComponent:
                      - itemdefinition-id: "_EC11744C-4160-4549-9610-2C757F40DFE8"
                        itemdefinition-name: "Name"
                        itemdefinition-typeRef:
                          namespace-uri: "https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8"
                          local-part: "string"
                          prefix: ""
                        itemdefinition-itemComponent: []
                        itemdefinition-isCollection: false
                      - itemdefinition-id: "_E95BE3DB-4A51-4658-A166-02493EAAC9D2"
                        itemdefinition-name: "Age"
                        itemdefinition-typeRef:
                          namespace-uri: "https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8"
                          local-part: "number"
                          prefix: ""
                        itemdefinition-itemComponent: []
                        itemdefinition-isCollection: false
                      - itemdefinition-id: "_7B3023E2-BC44-4BF3-BF7E-773C240FB9AD"
                        itemdefinition-name: "State"
                        itemdefinition-typeRef:
                          namespace-uri: "https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8"
                          local-part: "string"
                          prefix: ""
                        itemdefinition-itemComponent: []
                        itemdefinition-isCollection: false
                      - itemdefinition-id: "_3D4B49DD-700C-4925-99A7-3B2B873F7800"
                        itemdefinition-name: "City"
                        itemdefinition-typeRef:
                          namespace-uri: "https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8"
                          local-part: "string"
                          prefix: ""
                        itemdefinition-itemComponent: []
                        itemdefinition-isCollection: false
                      - itemdefinition-id: "_B37C49E8-B0D9-4B20-9DC6-D655BB1CA7B1"
                        itemdefinition-name: "Points"
                        itemdefinition-typeRef:
                          namespace-uri: "https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8"
                          local-part: "number"
                          prefix: ""
                        itemdefinition-itemComponent: []
                        itemdefinition-isCollection: false
                      itemdefinition-isCollection: false
                    - itemdefinition-id: "_A4077C7E-B57A-4DEE-9C65-7769636316F3"
                      itemdefinition-name: "tFine"
                      itemdefinition-typeRef: null
                      itemdefinition-itemComponent:
                      - itemdefinition-id: "_79B152A8-DE83-4001-B88B-52DFF0D73B2D"
                        itemdefinition-name: "Amount"
                        itemdefinition-typeRef:
                          namespace-uri: "https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8"
                          local-part: "number"
                          prefix: ""
                        itemdefinition-itemComponent: []
                        itemdefinition-isCollection: false
                      - itemdefinition-id: "_D7CB5F9C-9D55-48C2-83EE-D47045EC90D0"
                        itemdefinition-name: "Points"
                        itemdefinition-typeRef:
                          namespace-uri: "https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8"
                          local-part: "number"
                          prefix: ""
                        itemdefinition-itemComponent: []
                        itemdefinition-isCollection: false
                      itemdefinition-isCollection: false
                    - itemdefinition-id: "_9C758F4A-7D72-4D0F-B63F-2F5B8405980E"
                      itemdefinition-name: "tViolation"
                      itemdefinition-typeRef: null
                      itemdefinition-itemComponent:
                      - itemdefinition-id: "_0B6FF1E2-ACE9-4FB3-876B-5BB30B88009B"
                        itemdefinition-name: "Code"
                        itemdefinition-typeRef:
                          namespace-uri: "https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8"
                          local-part: "string"
                          prefix: ""
                        itemdefinition-itemComponent: []
                        itemdefinition-isCollection: false
                      - itemdefinition-id: "_27A5DA18-3CA7-4C06-81B7-CF7F2F050E29"
                        itemdefinition-name: "Date"
                        itemdefinition-typeRef:
                          namespace-uri: "https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8"
                          local-part: "date"
                          prefix: ""
                        itemdefinition-itemComponent: []
                        itemdefinition-isCollection: false
                      - itemdefinition-id: "_8961969A-8A80-4F12-B568-346920C0F038"
                        itemdefinition-name: "Type"
                        itemdefinition-typeRef:
                          namespace-uri: "https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8"
                          local-part: "string"
                          prefix: ""
                        itemdefinition-itemComponent: []
                        itemdefinition-isCollection: false
                      - itemdefinition-id: "_7450F12A-3E95-4D5E-8DCE-2CB1FAC2BDD4"
                        itemdefinition-name: "Speed Limit"
                        itemdefinition-typeRef:
                          namespace-uri: "https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8"
                          local-part: "number"
                          prefix: ""
                        itemdefinition-itemComponent: []
                        itemdefinition-isCollection: false
                      - itemdefinition-id: "_0A9A6F26-6C14-414D-A9BF-765E5850429A"
                        itemdefinition-name: "Actual Speed"
                        itemdefinition-typeRef:
                          namespace-uri: "https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8"
                          local-part: "number"
                          prefix: ""
                        itemdefinition-itemComponent: []
                        itemdefinition-isCollection: false
                      itemdefinition-isCollection: false
                    decisionServices: []
            application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
              yes\"?>\n<response type=\"SUCCESS\" msg=\"Ok models successfully retrieved\
              \ from container 'traffic-violation_1.0.0-SNAPSHOT'\">\n    <dmn-model-info-list>\n\
              \        <model>\n            <model-namespace>https://github.com/kiegroup/drools/kie-dmn/_60b01f4d-e407-43f7-848e-258723b5fac8</model-namespace>\n\
              \            <model-name>Traffic Violation</model-name>\n          \
              \  <model-id>_2CD7D1AA-BD84-4B43-AD21-B0342ADE655A</model-id>\n    \
              \        <decisions>\n                <dmn-decision-info>\n        \
              \            <decision-id>_23428EE8-DC8B-4067-8E67-9D7C53EC975F</decision-id>\n\
              \                    <decision-name>Fine</decision-name>\n         \
              \       </dmn-decision-info>\n                <dmn-decision-info>\n\
              \                    <decision-id>_B5EEE2B1-915C-44DC-BE43-C244DC066FD8</decision-id>\n\
              \                    <decision-name>Should the driver be suspended?</decision-name>\n\
              \                </dmn-decision-info>\n            </decisions>\n  \
              \          <inputs>\n                <dmn-inputdata-info>\n        \
              \            <inputdata-id>_CEB959CD-3638-4A87-93BA-03CD0FB63AE3</inputdata-id>\n\
              \                    <inputdata-name>Violation</inputdata-name>\n  \
              \                  <inputdata-typeref>\n                        <namespace-uri>https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8</namespace-uri>\n\
              \                        <local-part>tViolation</local-part>\n     \
              \                   <prefix></prefix>\n                    </inputdata-typeref>\n\
              \                </dmn-inputdata-info>\n                <dmn-inputdata-info>\n\
              \                    <inputdata-id>_B0E810E6-7596-430A-B5CF-67CE16863B6C</inputdata-id>\n\
              \                    <inputdata-name>Driver</inputdata-name>\n     \
              \               <inputdata-typeref>\n                        <namespace-uri>https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8</namespace-uri>\n\
              \                        <local-part>tDriver</local-part>\n        \
              \                <prefix></prefix>\n                    </inputdata-typeref>\n\
              \                </dmn-inputdata-info>\n            </inputs>\n    \
              \        <itemdefinitions>\n                <dmn-itemdefinition-info>\n\
              \                    <itemdefinition-id>_9C758F4A-7D72-4D0F-B63F-2F5B8405980E</itemdefinition-id>\n\
              \                    <itemdefinition-name>tViolation</itemdefinition-name>\n\
              \                    <itemdefinition-itemcomponent>\n              \
              \          <dmn-itemdefinition-info>\n                            <itemdefinition-id>_0B6FF1E2-ACE9-4FB3-876B-5BB30B88009B</itemdefinition-id>\n\
              \                            <itemdefinition-name>Code</itemdefinition-name>\n\
              \                            <itemdefinition-typeref>\n            \
              \                    <namespace-uri>https://github.com/kiegroup/drools/kie-dmn/_60b01f4d-e407-43f7-848e-258723b5fac8</namespace-uri>\n\
              \                                <local-part>string</local-part>\n \
              \                               <prefix></prefix>\n                \
              \            </itemdefinition-typeref>\n                           \
              \ <itemdefinition-itemcomponent/>\n                            <itemdefinition-iscollection>false</itemdefinition-iscollection>\n\
              \                        </dmn-itemdefinition-info>\n              \
              \          <dmn-itemdefinition-info>\n                            <itemdefinition-id>_27A5DA18-3CA7-4C06-81B7-CF7F2F050E29</itemdefinition-id>\n\
              \                            <itemdefinition-name>date</itemdefinition-name>\n\
              \                            <itemdefinition-typeref>\n            \
              \                    <namespace-uri>https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8</namespace-uri>\n\
              \                                <local-part>date</local-part>\n   \
              \                             <prefix></prefix>\n                  \
              \          </itemdefinition-typeref>\n                            <itemdefinition-itemcomponent/>\n\
              \                            <itemdefinition-iscollection>false</itemdefinition-iscollection>\n\
              \                        </dmn-itemdefinition-info>\n              \
              \          <dmn-itemdefinition-info>\n                            <itemdefinition-id>_8961969A-8A80-4F12-B568-346920C0F038</itemdefinition-id>\n\
              \                            <itemdefinition-name>type</itemdefinition-name>\n\
              \                            <itemdefinition-typeref>\n            \
              \                    <namespace-uri>https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8</namespace-uri>\n\
              \                                <local-part>string</local-part>\n \
              \                               <prefix></prefix>\n                \
              \            </itemdefinition-typeref>\n                           \
              \ <itemdefinition-itemcomponent/>\n                            <itemdefinition-iscollection>false</itemdefinition-iscollection>\n\
              \                        </dmn-itemdefinition-info>\n              \
              \          <dmn-itemdefinition-info>\n                            <itemdefinition-id>_7450F12A-3E95-4D5E-8DCE-2CB1FAC2BDD4</itemdefinition-id>\n\
              \                            <itemdefinition-name>speed limit</itemdefinition-name>\n\
              \                            <itemdefinition-typeref>\n            \
              \                    <namespace-uri>https://github.com/kiegroup/drools/kie-dmn/_60b01f4d-e407-43f7-848e-258723b5fac8</namespace-uri>\n\
              \                                <local-part>number</local-part>\n \
              \                               <prefix></prefix>\n                \
              \            </itemdefinition-typeref>\n                           \
              \ <itemdefinition-itemcomponent/>\n                            <itemdefinition-iscollection>false</itemdefinition-iscollection>\n\
              \                        </dmn-itemdefinition-info>\n              \
              \          <dmn-itemdefinition-info>\n                            <itemdefinition-id>_0A9A6F26-6C14-414D-A9BF-765E5850429A</itemdefinition-id>\n\
              \                            <itemdefinition-name>Actual Speed</itemdefinition-name>\n\
              \                            <itemdefinition-typeref>\n            \
              \                    <namespace-uri>https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8</namespace-uri>\n\
              \                                <local-part>number</local-part>\n \
              \                               <prefix></prefix>\n                \
              \            </itemdefinition-typeref>\n                           \
              \ <itemdefinition-itemcomponent/>\n                            <itemdefinition-iscollection>false</itemdefinition-iscollection>\n\
              \                        </dmn-itemdefinition-info>\n              \
              \      </itemdefinition-itemcomponent>\n                    <itemdefinition-iscollection>false</itemdefinition-iscollection>\n\
              \                </dmn-itemdefinition-info>\n                <dmn-itemdefinition-info>\n\
              \                    <itemdefinition-id>_13C7EFD8-B85C-43BF-94D3-14FABE39A4A0</itemdefinition-id>\n\
              \                    <itemdefinition-name>tDriver</itemdefinition-name>\n\
              \                    <itemdefinition-itemcomponent>\n              \
              \          <dmn-itemdefinition-info>\n                            <itemdefinition-id>_EC11744C-4160-4549-9610-2C757F40DFE8</itemdefinition-id>\n\
              \                            <itemdefinition-name>Name</itemdefinition-name>\n\
              \                            <itemdefinition-typeref>\n            \
              \                    <namespace-uri>https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8</namespace-uri>\n\
              \                                <local-part>string</local-part>\n \
              \                               <prefix></prefix>\n                \
              \            </itemdefinition-typeref>\n                           \
              \ <itemdefinition-itemcomponent/>\n                            <itemdefinition-iscollection>false</itemdefinition-iscollection>\n\
              \                        </dmn-itemdefinition-info>\n              \
              \          <dmn-itemdefinition-info>\n                            <itemdefinition-id>_E95BE3DB-4A51-4658-A166-02493EAAC9D2</itemdefinition-id>\n\
              \                            <itemdefinition-name>Age</itemdefinition-name>\n\
              \                            <itemdefinition-typeref>\n            \
              \                    <namespace-uri>https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8</namespace-uri>\n\
              \                                <local-part>number</local-part>\n \
              \                               <prefix></prefix>\n                \
              \            </itemdefinition-typeref>\n                           \
              \ <itemdefinition-itemcomponent/>\n                            <itemdefinition-iscollection>false</itemdefinition-iscollection>\n\
              \                        </dmn-itemdefinition-info>\n              \
              \          <dmn-itemdefinition-info>\n                            <itemdefinition-id>_7B3023E2-BC44-4BF3-BF7E-773C240FB9AD</itemdefinition-id>\n\
              \                            <itemdefinition-name>State</itemdefinition-name>\n\
              \                            <itemdefinition-typeref>\n            \
              \                    <namespace-uri>https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8</namespace-uri>\n\
              \                                <local-part>string</local-part>\n \
              \                               <prefix></prefix>\n                \
              \            </itemdefinition-typeref>\n                           \
              \ <itemdefinition-itemcomponent/>\n                            <itemdefinition-iscollection>false</itemdefinition-iscollection>\n\
              \                        </dmn-itemdefinition-info>\n              \
              \          <dmn-itemdefinition-info>\n                            <itemdefinition-id>_3D4B49DD-700C-4925-99A7-3B2B873F7800</itemdefinition-id>\n\
              \                            <itemdefinition-name>city</itemdefinition-name>\n\
              \                            <itemdefinition-typeref>\n            \
              \                    <namespace-uri>https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8</namespace-uri>\n\
              \                                <local-part>string</local-part>\n \
              \                               <prefix></prefix>\n                \
              \            </itemdefinition-typeref>\n                           \
              \ <itemdefinition-itemcomponent/>\n                            <itemdefinition-iscollection>false</itemdefinition-iscollection>\n\
              \                        </dmn-itemdefinition-info>\n              \
              \          <dmn-itemdefinition-info>\n                            <itemdefinition-id>_B37C49E8-B0D9-4B20-9DC6-D655BB1CA7B1</itemdefinition-id>\n\
              \                            <itemdefinition-name>Points</itemdefinition-name>\n\
              \                            <itemdefinition-typeref>\n            \
              \                    <namespace-uri>https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8</namespace-uri>\n\
              \                                <local-part>number</local-part>\n \
              \                               <prefix></prefix>\n                \
              \            </itemdefinition-typeref>\n                           \
              \ <itemdefinition-itemcomponent/>\n                            <itemdefinition-iscollection>false</itemdefinition-iscollection>\n\
              \                        </dmn-itemdefinition-info>\n              \
              \      </itemdefinition-itemcomponent>\n                    <itemdefinition-iscollection>false</itemdefinition-iscollection>\n\
              \                </dmn-itemdefinition-info>\n                <dmn-itemdefinition-info>\n\
              \                    <itemdefinition-id>_A4077C7E-B57A-4DEE-9C65-7769636316F3</itemdefinition-id>\n\
              \                    <itemdefinition-name>tFine</itemdefinition-name>\n\
              \                    <itemdefinition-itemcomponent>\n              \
              \          <dmn-itemdefinition-info>\n                            <itemdefinition-id>_79B152A8-DE83-4001-B88B-52DFF0D73B2D</itemdefinition-id>\n\
              \                            <itemdefinition-name>Amount</itemdefinition-name>\n\
              \                            <itemdefinition-typeref>\n            \
              \                    <namespace-uri>https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8</namespace-uri>\n\
              \                                <local-part>number</local-part>\n \
              \                               <prefix></prefix>\n                \
              \            </itemdefinition-typeref>\n                           \
              \ <itemdefinition-itemcomponent/>\n                            <itemdefinition-iscollection>false</itemdefinition-iscollection>\n\
              \                        </dmn-itemdefinition-info>\n              \
              \          <dmn-itemdefinition-info>\n                            <itemdefinition-id>_D7CB5F9C-9D55-48C2-83EE-D47045EC90D0</itemdefinition-id>\n\
              \                            <itemdefinition-name>Points</itemdefinition-name>\n\
              \                            <itemdefinition-typeref>\n            \
              \                    <namespace-uri>https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8</namespace-uri>\n\
              \                                <local-part>number</local-part>\n \
              \                               <prefix></prefix>\n                \
              \            </itemdefinition-typeref>\n                           \
              \ <itemdefinition-itemcomponent/>\n                            <itemdefinition-iscollection>false</itemdefinition-iscollection>\n\
              \                        </dmn-itemdefinition-info>\n              \
              \      </itemdefinition-itemcomponent>\n                    <itemdefinition-iscollection>false</itemdefinition-iscollection>\n\
              \                </dmn-itemdefinition-info>\n            </itemdefinitions>\n\
              \            <decisionservices/>\n        </model>\n    </dmn-model-info-list>\n\
              </response>"
          schema:
            type: "string"
        "500":
          description: "Unexpected error"
        "404":
          description: "Models or container not found"
    post:
      tags:
      - "DMN models"
      summary: "Evaluates decisions for given input"
      description: "Please reference the documentation for usage of the KIE Server\
        \ REST API for DMN (doc ref: \"Executing a DMN service using the KIE Server\
        \ REST API\" section in the Getting started with decision services)."
      operationId: "evaluateDecisions"
      consumes:
      - "application/xml"
      - "application/json"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "containerId"
        in: "path"
        description: "Container id to be used to evaluate decisions on"
        required: true
        type: "string"
        x-example: "traffic-violation_1.0.0-SNAPSHOT"
      - in: "body"
        name: "body"
        description: "DMN context to be used while evaluation decisions as DMNContextKS\
          \ type"
        required: true
        schema:
          type: "string"
        x-examples:
          application/json: "{\n  \"model-namespace\" : \"https://github.com/kiegroup/drools/kie-dmn/_60B01F4D-E407-43F7-848E-258723B5FAC8\"\
            ,\n  \"model-name\" : \"Traffic Violation\",\n  \"dmn-context\" :\n  {\n\
            \    \"Driver\" :\n    {\n       \"Points\" : 15\n    },\n    \"Violation\"\
            \ :\n    {\n        \"Type\" : \"speed\",\n        \"Actual Speed\" :\
            \ 135,\n        \"Speed Limit\" : 100\n    }\n  }\n}"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<dmn-evaluation-context>\n    <dmn-context xsi:type=\"jaxbListWrapper\"\
            \ xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n        <type>MAP</type>\n\
            \        <element xsi:type=\"jaxbStringObjectPair\" key=\"Violation\"\
            >\n            <value xsi:type=\"jaxbListWrapper\">\n                <type>MAP</type>\n\
            \                <element xsi:type=\"jaxbStringObjectPair\" key=\"Type\"\
            >\n                    <value xsi:type=\"xs:string\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
            >speed</value>\n                </element>\n                <element xsi:type=\"\
            jaxbStringObjectPair\" key=\"Speed Limit\">\n                    <value\
            \ xsi:type=\"xs:decimal\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
            >100</value>\n                </element>\n                <element xsi:type=\"\
            jaxbStringObjectPair\" key=\"Actual Speed\">\n                    <value\
            \ xsi:type=\"xs:decimal\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
            >135</value>\n                </element>\n            </value>\n     \
            \   </element>\n        <element xsi:type=\"jaxbStringObjectPair\" key=\"\
            Driver\">\n            <value xsi:type=\"jaxbListWrapper\">\n        \
            \        <type>MAP</type>\n                <element xsi:type=\"jaxbStringObjectPair\"\
            \ key=\"Points\">\n                    <value xsi:type=\"xs:decimal\"\
            \ xmlns:xs=\"http://www.w3.org/2001/XMLSchema\">15</value>\n         \
            \       </element>\n            </value>\n        </element>\n    </dmn-context>\n\
            </dmn-evaluation-context>"
      responses:
        "200":
          description: "Successful response"
          examples:
            application/json:
              type: "SUCCESS"
              msg: "OK from container 'Traffic-Violation_1.0.0-SNAPSHOT'"
              result:
                dmn-evaluation-result:
                  messages: []
                  model-namespace: "https://github.com/kiegroup/drools/kie-dmn/_7D8116DE-ADF5-4560-A116-FE1A2EAFFF48"
                  model-name: "Traffic Violation"
                  decision-name: []
                  dmn-context:
                    Violation:
                      Type: "speed"
                      Speed Limit: 100
                      Actual Speed: 135
                    Should Driver be Suspended?: "Yes"
                    Driver:
                      Points: 15
                    Fine:
                      Points: 7
                      Amount: 1000
                  decision-results:
                    _E1AF5AC2-E259-455C-96E4-596E30D3BC86:
                      messages: []
                      decision-id: "_E1AF5AC2-E259-455C-96E4-596E30D3BC86"
                      decision-name: "Should the Driver be Suspended?"
                      result: "Yes"
                      status: "SUCCEEDED"
                    _D7F02CE0-AF50-4505-AB80-C7D6DE257920:
                      messages: []
                      decision-id: "_D7F02CE0-AF50-4505-AB80-C7D6DE257920"
                      decision-name: "Fine"
                      result:
                        Points: 7
                        Amount: 1000
                      status: "SUCCEEDED"
            application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
              yes\"?>\n<response type=\"SUCCESS\" msg=\"OK from container 'Traffic_1.0.0-SNAPSHOT'\"\
              >\n    <dmn-evaluation-result>\n        <model-namespace>https://github.com/kiegroup/drools/kie-dmn/_A4BCA8B8-CF08-433F-93B2-A2598F19ECFF</model-namespace>\n\
              \        <model-name>Traffic Violation</model-name>\n        <dmn-context\
              \ xsi:type=\"jaxbListWrapper\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
              >\n            <type>MAP</type>\n            <element xsi:type=\"jaxbStringObjectPair\"\
              \ key=\"Violation\">\n                <value xsi:type=\"jaxbListWrapper\"\
              >\n                    <type>MAP</type>\n                    <element\
              \ xsi:type=\"jaxbStringObjectPair\" key=\"Type\">\n                \
              \        <value xsi:type=\"xs:string\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
              >speed</value>\n                    </element>\n                   \
              \ <element xsi:type=\"jaxbStringObjectPair\" key=\"Speed Limit\">\n\
              \                        <value xsi:type=\"xs:decimal\" xmlns:xs=\"\
              http://www.w3.org/2001/XMLSchema\">100</value>\n                   \
              \ </element>\n                    <element xsi:type=\"jaxbStringObjectPair\"\
              \ key=\"Actual Speed\">\n                        <value xsi:type=\"\
              xs:decimal\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\">135</value>\n\
              \                    </element>\n                </value>\n        \
              \    </element>\n            <element xsi:type=\"jaxbStringObjectPair\"\
              \ key=\"Driver\">\n                <value xsi:type=\"jaxbListWrapper\"\
              >\n                    <type>MAP</type>\n                    <element\
              \ xsi:type=\"jaxbStringObjectPair\" key=\"Points\">\n              \
              \          <value xsi:type=\"xs:decimal\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
              >15</value>\n                    </element>\n                </value>\n\
              \            </element>\n            <element xsi:type=\"jaxbStringObjectPair\"\
              \ key=\"Fine\">\n                <value xsi:type=\"jaxbListWrapper\"\
              >\n                    <type>MAP</type>\n                    <element\
              \ xsi:type=\"jaxbStringObjectPair\" key=\"Points\">\n              \
              \          <value xsi:type=\"xs:decimal\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
              >7</value>\n                    </element>\n                    <element\
              \ xsi:type=\"jaxbStringObjectPair\" key=\"Amount\">\n              \
              \          <value xsi:type=\"xs:decimal\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
              >1000</value>\n                    </element>\n                </value>\n\
              \            </element>\n            <element xsi:type=\"jaxbStringObjectPair\"\
              \ key=\"Should the driver be suspended?\">\n                <value xsi:type=\"\
              xs:string\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\">Yes</value>\n\
              \            </element>\n        </dmn-context>\n        <messages/>\n\
              \        <decisionResults>\n            <entry>\n                <key>_4055D956-1C47-479C-B3F4-BAEB61F1C929</key>\n\
              \                <value>\n                    <decision-id>_4055D956-1C47-479C-B3F4-BAEB61F1C929</decision-id>\n\
              \                    <decision-name>Fine</decision-name>\n         \
              \           <result xsi:type=\"jaxbListWrapper\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
              >\n                        <type>MAP</type>\n                      \
              \  <element xsi:type=\"jaxbStringObjectPair\" key=\"Points\">\n    \
              \                        <value xsi:type=\"xs:decimal\" xmlns:xs=\"\
              http://www.w3.org/2001/XMLSchema\">7</value>\n                     \
              \   </element>\n                        <element xsi:type=\"jaxbStringObjectPair\"\
              \ key=\"Amount\">\n                            <value xsi:type=\"xs:decimal\"\
              \ xmlns:xs=\"http://www.w3.org/2001/XMLSchema\">1000</value>\n     \
              \                   </element>\n                    </result>\n    \
              \                <messages/>\n                    <status>SUCCEEDED</status>\n\
              \                </value>\n            </entry>\n            <entry>\n\
              \                <key>_8A408366-D8E9-4626-ABF3-5F69AA01F880</key>\n\
              \                <value>\n                    <decision-id>_8A408366-D8E9-4626-ABF3-5F69AA01F880</decision-id>\n\
              \                    <decision-name>Should the driver be suspended?</decision-name>\n\
              \                    <result xsi:type=\"xs:string\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
              \ xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">Yes</result>\n\
              \                    <messages/>\n                    <status>SUCCEEDED</status>\n\
              \                </value>\n            </entry>\n        </decisionResults>\n\
              \    </dmn-evaluation-result>\n</response>"
          schema:
            type: "string"
        "500":
          description: "Unexpected error"
        "404":
          description: "Container not found"
  /server/containers/{containerId}/dmn/openapi:
    get:
      tags:
      - "DMN models"
      summary: "Model-specific definitions"
      description: "Retrieves the Model-specific Swagger/OAS definitions, for the\
        \ given Container id. Please reference container-specific generated Swagger/OAS\
        \ definitions, as described in the documentation (doc ref: \"REST endpoints\
        \ for specific DMN models\", req refs: BAPL-1787, DROOLS-6047)."
      operationId: "getOAS"
      produces:
      - "application/json"
      - "application/yaml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "Container id to retrieve the Model-specific definitions"
        required: true
        type: "string"
      responses:
        default:
          description: "successful operation"
  /server/containers/{containerId}/dmn/openapi.{type}:
    get:
      tags:
      - "DMN models"
      summary: "Model-specific definitions"
      description: "Retrieves the Model-specific Swagger/OAS definitions, for the\
        \ given Container id. Please reference container-specific generated Swagger/OAS\
        \ definitions, as described in the documentation (doc ref: \"REST endpoints\
        \ for specific DMN models\", req refs: BAPL-1787, DROOLS-6047)."
      operationId: "getOASType"
      produces:
      - "application/json"
      - "application/yaml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "Container id to retrieve the Model-specific definitions"
        required: true
        type: "string"
      - name: "type"
        in: "path"
        required: true
        type: "string"
        pattern: "json|yaml"
      responses:
        default:
          description: "successful operation"
  /server/containers/{containerId}/dmn/models/{modelId}/{decisionServiceId}:
    post:
      tags:
      - "DMN models"
      summary: "Model-specific DMN evaluation"
      description: "This is a techincal endpoint not directly documented here; this\
        \ endpoint instead is documented in another Swagger/OAS definitions. Please\
        \ reference container-specific generated Swagger/OAS definitions, as described\
        \ in the documentation (doc ref: \"REST endpoints for specific DMN models\"\
        , req refs: BAPL-1787, DROOLS-6047)."
      operationId: "evaluateModelDS"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "containerId"
        in: "path"
        description: "Container id to be used to evaluate decisions on"
        required: true
        type: "string"
      - name: "modelId"
        in: "path"
        description: "Reference container-specific Swagger/OAS definitions"
        required: true
        type: "string"
      - name: "decisionServiceId"
        in: "path"
        description: "Reference container-specific Swagger/OAS definitions"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Reference container-specific Swagger/OAS definitions"
        required: true
        schema:
          type: "string"
      responses:
        default:
          description: "successful operation"
  /server/containers/instances/{containerId}:
    post:
      tags:
      - "KIE session assets"
      summary: "Executes one or more runtime commands"
      description: ""
      operationId: "manageContainer"
      consumes:
      - "application/xml"
      - "application/json"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "containerId"
        in: "path"
        description: "Container id where rules should be evaluated on"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "Commands to be executed on rule engine given as BatchExecutionCommand\
          \ type"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Successful execution"
          schema:
            $ref: "#/definitions/response"
        "500":
          description: "Unexpected error"
          schema:
            $ref: "#/definitions/response"
        "204":
          description: "Command execute successfully, but without response"
          schema:
            $ref: "#/definitions/response"
  /server/containers/{containerId}/processes/definitions/{processId}/tasks/users/{taskName}/outputs:
    get:
      tags:
      - "Process and task definitions"
      summary: "Retrieves output variables defined on a given user task"
      description: ""
      operationId: "getTaskOutputMappings"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id where the process definition resides"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "processId"
        in: "path"
        description: "process id that given task belongs to"
        required: true
        type: "string"
        x-example: "evaluation"
      - name: "taskName"
        in: "path"
        description: "task name that output variable definitions should be retrieved\
          \ for"
        required: true
        type: "string"
        x-example: "Review"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Process or Container Id not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              taskOutputs:
                application: "com.myspace.mortgage_app.Application"
          schema:
            $ref: "#/definitions/process-task-outputs"
  /server/containers/{containerId}/processes/definitions/{processId}:
    get:
      tags:
      - "Process and task definitions"
      summary: "Returns entity and task information for a specified process."
      description: ""
      operationId: "getProcessDefinition"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id where the process definition resides"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "processId"
        in: "path"
        description: "process id that the definition should be retrieved for"
        required: true
        type: "string"
        x-example: "evaluation"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Process or Container Id not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              associatedEntities:
                Qualify:
                - "approver"
                Final Approval:
                - "manager"
                Correct Data:
                - "broker"
                Increase Down Payment:
                - "broker"
              serviceTasks: {}
              processVariables:
                inlimit: "Boolean"
                application: "com.myspace.mortgage_app.Application"
                incdownpayment: "Boolean"
              reusableSubProcesses: []
              process-id: "Mortgage_Process.MortgageApprovalProcess"
              process-name: "MortgageApprovalProcess"
              process-version: "1.0"
              package: "com.myspace.mortgage_app"
              container-id: "mortgage-process_1.0.0-SNAPSHOT"
              dynamic: false
          schema:
            $ref: "#/definitions/process-definition"
  /server/containers/{containerId}/processes/definitions/{processId}/subprocesses:
    get:
      tags:
      - "Process and task definitions"
      summary: "Retrieves sub process definitions that are defined in given process\
        \ within given container"
      description: ""
      operationId: "getReusableSubProcesses"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id where the process definition resides"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "processId"
        in: "path"
        description: "process id that subprocesses should be retrieved from"
        required: true
        type: "string"
        x-example: "evaluation"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Process or Container Id not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              subProcesses:
              - "evaluation"
          schema:
            $ref: "#/definitions/process-subprocesses"
  /server/containers/{containerId}/processes/definitions/{processId}/variables:
    get:
      tags:
      - "Process and task definitions"
      summary: "Retrieves process variables definitions that are present in given\
        \ process and container"
      description: ""
      operationId: "getProcessVariables"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id where the process definition resides"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "processId"
        in: "path"
        description: "process id that the variable definitions should be retrieved\
          \ from"
        required: true
        type: "string"
        x-example: "evaluation"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Process or Container Id not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              variables:
                inlimit: "Boolean"
                application: "com.myspace.mortgage_app.Application"
                incdownpayment: "Boolean"
          schema:
            $ref: "#/definitions/process-variables"
  /server/containers/{containerId}/processes/definitions/{processId}/tasks/service:
    get:
      tags:
      - "Process and task definitions"
      summary: "Retrieves service tasks definitions that are present in given process\
        \ and container"
      description: ""
      operationId: "getServiceTasks"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id where the process definition resides"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "processId"
        in: "path"
        description: "process id that the service task definitions should be retrieved\
          \ from"
        required: true
        type: "string"
        x-example: "evaluation"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Process or Container Id not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              serviceTasks:
                Email results: "Email"
          schema:
            $ref: "#/definitions/process-service-tasks"
  /server/containers/{containerId}/processes/definitions/{processId}/entities:
    get:
      tags:
      - "Process and task definitions"
      summary: "Retrieves actors and groups that are involved in given process and\
        \ container"
      description: ""
      operationId: "getAssociatedEntities"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id where the process definition resides"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "processId"
        in: "path"
        description: "process id that the involved actors and groups should be retrieved\
          \ from"
        required: true
        type: "string"
        x-example: "evaluation"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Process or Container Id not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              associatedEntities:
                Qualify:
                - "approver"
                Final Approval:
                - "manager"
                Correct Data:
                - "broker"
                Increase Down Payment:
                - "broker"
          schema:
            $ref: "#/definitions/process-associated-entities"
  /server/containers/{containerId}/processes/definitions/{processId}/tasks/users:
    get:
      tags:
      - "Process and task definitions"
      summary: "Retrieves user tasks definitions that are present in given process\
        \ and container"
      description: ""
      operationId: "getTasksDefinitions"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id where the process definition resides"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "processId"
        in: "path"
        description: "process id that the user task definitions should be retrieved\
          \ from"
        required: true
        type: "string"
        x-example: "evaluation"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Process or Container Id not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              task:
              - associatedEntities:
                - "broker"
                taskInputMappings:
                  application: "com.myspace.mortgage_app.Application"
                  TaskName: "String"
                  Skippable: "Object"
                  GroupId: "Object"
                taskOutputMappings:
                  application: "com.myspace.mortgage_app.Application"
                task-id: "6"
                task-name: "Correct Data"
                task-priority: 0
                task-comment: ""
                task-created-by: ""
                task-skippable: false
                task-form-name: "CorrectData"
              - associatedEntities:
                - "approver"
                taskInputMappings:
                  application: "com.myspace.mortgage_app.Application"
                  TaskName: "String"
                  Skippable: "Object"
                  GroupId: "Object"
                taskOutputMappings:
                  inlimit: "Boolean"
                task-id: "8"
                task-name: "Qualify"
                task-priority: 0
                task-comment: ""
                task-created-by: ""
                task-skippable: false
                task-form-name: "Qualify"
              - associatedEntities:
                - "manager"
                taskInputMappings:
                  inlimit: "Boolean"
                  application: "com.myspace.mortgage_app.Application"
                  TaskName: "String"
                  Skippable: "Object"
                  GroupId: "Object"
                taskOutputMappings: {}
                task-id: "10"
                task-name: "Final Approval"
                task-priority: 0
                task-comment: ""
                task-created-by: ""
                task-skippable: false
                task-form-name: "FinalApproval"
          schema:
            $ref: "#/definitions/user-task-definitions"
  /server/containers/{containerId}/processes/definitions/{processId}/tasks/users/{taskName}/inputs:
    get:
      tags:
      - "Process and task definitions"
      summary: "Retrieves input variables defined on a given user task"
      description: ""
      operationId: "getTaskInputMappings"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id where the process definition resides"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "processId"
        in: "path"
        description: "process id that given task belongs to"
        required: true
        type: "string"
        x-example: "evaluation"
      - name: "taskName"
        in: "path"
        description: "task name that input variable definitions should be retrieved\
          \ for"
        required: true
        type: "string"
        x-example: "Review"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Process or Container Id not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              taskInputs:
                inlimit: "Boolean"
                application: "com.myspace.mortgage_app.Application"
                TaskName: "String"
                Skippable: "Object"
                GroupId: "Object"
          schema:
            $ref: "#/definitions/process-task-inputs"
  /server/documents/{documentId}:
    get:
      tags:
      - "Documents"
      summary: "Returns information about a specified document."
      description: ""
      operationId: "getDocument"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "documentId"
        in: "path"
        description: "document id of a document that should be retruned"
        required: true
        type: "string"
        x-example: "xxx-yyy-zzz"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Document with given id not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              document-id: "651a7035-3a90-4a25-bffb-bb09ea14fdac"
              document-name: "MyDocument"
              document-link: ""
              document-size: 18
              document-last-mod:
                java.util.Date: 1539936629000
              document-content: "VGhpcyBpcyBhIGRvY3VtZW50"
          schema:
            $ref: "#/definitions/document-instance"
    put:
      tags:
      - "Documents"
      summary: "Updates a specified document in KIE Server."
      description: ""
      operationId: "updateDocument"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "documentId"
        in: "path"
        description: "document id of a document that should be updated"
        required: true
        type: "string"
        x-example: "xxx-yyy-zzz"
      - in: "body"
        name: "body"
        description: "document content represented as DocumentInstance"
        required: true
        schema:
          type: "string"
        x-examples:
          application/json: "{\n  \"document-name\" : \"first document\",\n  \"document-link\"\
            \ : null,\n  \"document-size\" : 17,\n  \"document-last-mod\" : {\n  \
            \  \"java.util.Date\" : 1539936629148\n  },\n  \"document-content\" :\
            \ \"anVzdCB0ZXh0IGNvbnRlbnQ=\"\n}"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<document-instance>\n    <document-name>first document</document-name>\n\
            \    <document-size>17</document-size>\n    <document-last-mod>2018-10-19T10:10:28.914+02:00</document-last-mod>\n\
            \    <document-content>anVzdCB0ZXh0IGNvbnRlbnQ=</document-content>\n</document-instance>"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Document with given id not found"
    delete:
      tags:
      - "Documents"
      summary: "Deletes a specified document from KIE Server."
      description: ""
      operationId: "deleteDocument"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "documentId"
        in: "path"
        description: "document id of a document that should be deleted"
        required: true
        type: "string"
        x-example: "xxxx-yyy-zzz"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Document with given id not found"
  /server/documents:
    get:
      tags:
      - "Documents"
      summary: "Returns all documents from KIE Server."
      description: ""
      operationId: "listDocuments"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              document-instances:
              - document-id: "001df463-2482-4dd5-abec-4622d16edaee"
                document-name: "MyDocument"
                document-link: ""
                document-size: 18
                document-last-mod:
                  java.util.Date: 1539936629000
                document-content: null
              - document-id: "651a7035-3a90-4a25-bffb-bb09ea14fdac"
                document-name: "MyDocument2"
                document-link: ""
                document-size: 18
                document-last-mod:
                  java.util.Date: 1539936629000
                document-content: null
              - document-id: "c10153e3-dfe7-41a9-811b-edd72c48f5d3"
                document-name: "MyDocument3"
                document-link: ""
                document-size: 18
                document-last-mod:
                  java.util.Date: 1539936629000
                document-content: null
          schema:
            $ref: "#/definitions/document-instance-list"
    post:
      tags:
      - "Documents"
      summary: "Uploads a new document to KIE Server."
      description: ""
      operationId: "createDocument"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        description: "document content represented as DocumentInstance"
        required: true
        schema:
          type: "string"
        x-examples:
          application/json: "{\n  \"document-name\" : \"first document\",\n  \"document-link\"\
            \ : null,\n  \"document-size\" : 17,\n  \"document-last-mod\" : {\n  \
            \  \"java.util.Date\" : 1539936629148\n  },\n  \"document-content\" :\
            \ \"anVzdCB0ZXh0IGNvbnRlbnQ=\"\n}"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<document-instance>\n    <document-name>first document</document-name>\n\
            \    <document-size>17</document-size>\n    <document-last-mod>2018-10-19T10:10:28.914+02:00</document-last-mod>\n\
            \    <document-content>anVzdCB0ZXh0IGNvbnRlbnQ=</document-content>\n</document-instance>"
      responses:
        "500":
          description: "Unexpected error"
        "201":
          description: "Successful response"
          examples:
            application/json: "a03672e8-8671-4d84-bd14-0ab5a341b80d"
          schema:
            type: "string"
  /server/documents/{documentId}/content:
    get:
      tags:
      - "Documents"
      summary: "Retrieves document's content identified by given documentId"
      description: ""
      operationId: "getDocumentContent"
      produces:
      - "application/octet-stream"
      parameters:
      - name: "documentId"
        in: "path"
        description: "document id of a document that content should be retruned from"
        required: true
        type: "string"
        x-example: "xxx-yyy-zzz"
      responses:
        "200":
          description: "successful operation"
          headers: {}
          schema:
            type: "array"
            items:
              type: "string"
              format: "byte"
        "500":
          description: "Unexpected error"
        "404":
          description: "Document with given id not found"
  /server/jobs/containers/{containerId}:
    get:
      tags:
      - "Jobs"
      summary: "Returns jobs for specified KIE container."
      description: ""
      operationId: "getRequestsByContainer"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "identifier of the container that asynchornous jobs should be\
          \ found for"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "status"
        in: "query"
        description: "optional job status (QUEUED, DONE, CANCELLED, ERROR, RETRYING,\
          \ RUNNING)"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "QUEUED"
          - "DONE"
          - "CANCELLED"
          - "ERROR"
          - "RETRYING"
          - "RUNNING"
        collectionFormat: "multi"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              request-info-instance:
              - request-instance-id: 1
                request-status: "DONE"
                request-business-key: "job1"
                request-message: "Ready to execute"
                request-retries: 2
                request-executions: 1
                request-command: "org.jbpm.executor.commands.LogCleanupCommand"
                request-scheduled-date:
                  java.util.Date: 1540299058209
                request-data: null
                response-data: null
                request-errors: null
                request-container-id: null
              - request-instance-id: 2
                request-status: "DONE"
                request-business-key: "job2"
                request-message: "Ready to execute"
                request-retries: 0
                request-executions: 0
                request-command: "java.lang.String"
                request-scheduled-date:
                  java.util.Date: 1540328449419
                request-data: null
                response-data: null
                request-errors: null
                request-container-id: null
          schema:
            $ref: "#/definitions/request-info-instance-list"
  /server/jobs/{jobId}:
    get:
      tags:
      - "Jobs"
      summary: "Returns information about a specified job."
      description: ""
      operationId: "getRequestById"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "jobId"
        in: "path"
        description: "identifier of the asynchronous job to be retrieved"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "withErrors"
        in: "query"
        description: "optional flag that indicats if errors should be loaded as well"
        required: false
        type: "boolean"
      - name: "withData"
        in: "query"
        description: "optional flag that indicats if input/output data should be loaded\
          \ as well"
        required: false
        type: "boolean"
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              request-instance-id: 6
              request-status: "DONE"
              request-business-key: "job3"
              request-message: "Ready to execute"
              request-retries: 5
              request-executions: 1
              request-command: "org.jbpm.executor.commands.LogCleanupCommand"
              request-scheduled-date:
                java.util.Date: 1540385144520
              request-data:
                retries: "5"
                businessKey: "job3"
              response-data:
                RequestInfoLogsRemoved: 2
                BAMLogRemoved: 0
                VariableInstanceLogRemoved: 0
                ProcessInstanceLogRemoved: 0
                TaskAuditLogRemoved: 0
                ErrorInfoLogsRemoved: 0
                TaskEventLogRemoved: 0
                TaskVariableLogRemoved: 0
                NodeInstanceLogRemoved: 0
              request-errors:
                error-info-instance: []
              request-container-id: null
          schema:
            $ref: "#/definitions/request-info-instance"
    put:
      tags:
      - "Jobs"
      summary: "Re-queues a specified job."
      description: ""
      operationId: "requeueRequest"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "jobId"
        in: "path"
        description: "identifier of the asynchronous job to be requeued"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      responses:
        "500":
          description: "Unexpected error"
    delete:
      tags:
      - "Jobs"
      summary: "Deletes a specified job."
      description: ""
      operationId: "cancelRequest"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "jobId"
        in: "path"
        description: "identifier of the asynchronous job to be canceled"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      responses:
        "500":
          description: "Unexpected error"
  /server/jobs:
    get:
      tags:
      - "Jobs"
      summary: "Retrieves asynchronous jobs filtered by status"
      description: ""
      operationId: "getRequestsByStatus"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "status"
        in: "query"
        description: "optional job status (QUEUED, DONE, CANCELLED, ERROR, RETRYING,\
          \ RUNNING)"
        required: true
        type: "array"
        items:
          type: "string"
          enum:
          - "QUEUED"
          - "DONE"
          - "CANCELLED"
          - "ERROR"
          - "RETRYING"
          - "RUNNING"
        collectionFormat: "multi"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              request-info-instance:
              - request-instance-id: 1
                request-status: "DONE"
                request-business-key: "job1"
                request-message: "Ready to execute"
                request-retries: 2
                request-executions: 1
                request-command: "org.jbpm.executor.commands.LogCleanupCommand"
                request-scheduled-date:
                  java.util.Date: 1540299058209
                request-data: null
                response-data: null
                request-errors: null
                request-container-id: null
              - request-instance-id: 2
                request-status: "DONE"
                request-business-key: "job2"
                request-message: "Ready to execute"
                request-retries: 0
                request-executions: 0
                request-command: "java.lang.String"
                request-scheduled-date:
                  java.util.Date: 1540328449419
                request-data: null
                response-data: null
                request-errors: null
                request-container-id: null
          schema:
            $ref: "#/definitions/request-info-instance-list"
    post:
      tags:
      - "Jobs"
      summary: "Schedules a job and returns the ID for the new job."
      description: ""
      operationId: "scheduleRequest"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "query"
        description: "optional container id that the job should be associated with"
        required: false
        type: "string"
      - in: "body"
        name: "body"
        description: "asynchronous job definition represented as JobRequestInstance"
        required: true
        schema:
          type: "string"
        x-examples:
          application/json: "{\n  \"job-command\" : \"org.jbpm.executor.commands.PrintOutCommand\"\
            ,\n  \"scheduled-date\" : {\n    \"java.util.Date\" : 1540023411655\n\
            \  },\n  \"request-data\" : {\n    \"businessKey\" : \"test key\"\n  }\n\
            }"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<job-request-instance>\n    <job-command>org.jbpm.executor.commands.PrintOutCommand</job-command>\n\
            \    <scheduled-date>2018-10-20T10:16:51.326+02:00</scheduled-date>\n\
            \    <data>\n        <entry>\n            <key>businessKey</key>\n   \
            \         <value xsi:type=\"xs:string\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
            \ xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">test key</value>\n\
            \        </entry>\n    </data>\n</job-request-instance>"
      responses:
        "500":
          description: "Unexpected error"
        "201":
          description: "Successful response"
          examples:
            application/json: 123
          schema:
            type: "integer"
            format: "int64"
  /server/jobs/{jobId}/data:
    post:
      tags:
      - "Jobs"
      summary: "Updates parameters for job commands, if used."
      description: ""
      operationId: "updateRequestData"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "jobId"
        in: "path"
        description: "identifier of the asynchronous job to be updated"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "containerId"
        in: "query"
        description: "optional container id that the job should be associated with"
        required: false
        type: "string"
      - in: "body"
        name: "body"
        description: "data to be updated on the asynchronous job represented as Map"
        required: true
        schema:
          type: "string"
        x-examples:
          application/json: "{\n    \"age\": 25,\n    \"person\": {\n        \"Person\"\
            : {\n            \"name\": \"john\"\n        }\n    }\n}"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<map-type>\n    <entries>\n        <entry>\n            <key>age</key>\n\
            \            <value xsi:type=\"xs:int\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
            \n                    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
            >25</value>\n        </entry>\n        <entry>\n            <key>person</key>\n\
            \            <value xsi:type=\"person\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
            >\n                <name>john</name>\n            </value>\n        </entry>\n\
            \    </entries>\n</map-type>"
      responses:
        "500":
          description: "Unexpected error"
  /server/jobs/commands/{cmd}:
    get:
      tags:
      - "Jobs"
      summary: "Returns jobs configured to run job commands, such as a job type org.jbpm.executor.commands.LogCleanupCommand."
      description: ""
      operationId: "getRequestsByCommand"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "cmd"
        in: "path"
        description: "name of the command that asynchornous jobs should be found for"
        required: true
        type: "string"
        x-example: "com.sample.CommandImpl"
      - name: "status"
        in: "query"
        description: "optional job status (QUEUED, DONE, CANCELLED, ERROR, RETRYING,\
          \ RUNNING)"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "QUEUED"
          - "DONE"
          - "CANCELLED"
          - "ERROR"
          - "RETRYING"
          - "RUNNING"
        collectionFormat: "multi"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              request-info-instance:
              - request-instance-id: 1
                request-status: "DONE"
                request-business-key: "job1"
                request-message: "Ready to execute"
                request-retries: 2
                request-executions: 1
                request-command: "org.jbpm.executor.commands.LogCleanupCommand"
                request-scheduled-date:
                  java.util.Date: 1540299058209
                request-data: null
                response-data: null
                request-errors: null
                request-container-id: null
              - request-instance-id: 2
                request-status: "DONE"
                request-business-key: "job2"
                request-message: "Ready to execute"
                request-retries: 0
                request-executions: 0
                request-command: "java.lang.String"
                request-scheduled-date:
                  java.util.Date: 1540328449419
                request-data: null
                response-data: null
                request-errors: null
                request-container-id: null
          schema:
            $ref: "#/definitions/request-info-instance-list"
  /server/jobs/processes/instances/{processInstanceId}:
    get:
      tags:
      - "Jobs"
      summary: "Returns jobs for specified process instance."
      description: ""
      operationId: "getRequestsByProcessInstance"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "processInstanceId"
        in: "path"
        description: "identifier of the process instance that asynchornous jobs should\
          \ be found for"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "status"
        in: "query"
        description: "optional job status (QUEUED, DONE, CANCELLED, ERROR, RETRYING,\
          \ RUNNING)"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "QUEUED"
          - "DONE"
          - "CANCELLED"
          - "ERROR"
          - "RETRYING"
          - "RUNNING"
        collectionFormat: "multi"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              request-info-instance:
              - request-instance-id: 1
                request-status: "DONE"
                request-business-key: "job1"
                request-message: "Ready to execute"
                request-retries: 2
                request-executions: 1
                request-command: "org.jbpm.executor.commands.LogCleanupCommand"
                request-scheduled-date:
                  java.util.Date: 1540299058209
                request-data: null
                response-data: null
                request-errors: null
                request-container-id: null
              - request-instance-id: 2
                request-status: "DONE"
                request-business-key: "job2"
                request-message: "Ready to execute"
                request-retries: 0
                request-executions: 0
                request-command: "java.lang.String"
                request-scheduled-date:
                  java.util.Date: 1540328449419
                request-data: null
                response-data: null
                request-errors: null
                request-container-id: null
          schema:
            $ref: "#/definitions/request-info-instance-list"
  /server/jobs/keys/{key}:
    get:
      tags:
      - "Jobs"
      summary: "Returns information about a job with a specified business key."
      description: ""
      operationId: "getRequestsByBusinessKey"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "key"
        in: "path"
        description: "identifier of the business key that asynchornous jobs should\
          \ be found for"
        required: true
        type: "string"
        x-example: "custom-job"
      - name: "status"
        in: "query"
        description: "optional job status (QUEUED, DONE, CANCELLED, ERROR, RETRYING,\
          \ RUNNING)"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "QUEUED"
          - "DONE"
          - "CANCELLED"
          - "ERROR"
          - "RETRYING"
          - "RUNNING"
        collectionFormat: "multi"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              request-info-instance:
              - request-instance-id: 1
                request-status: "DONE"
                request-business-key: "job1"
                request-message: "Ready to execute"
                request-retries: 2
                request-executions: 1
                request-command: "org.jbpm.executor.commands.LogCleanupCommand"
                request-scheduled-date:
                  java.util.Date: 1540299058209
                request-data: null
                response-data: null
                request-errors: null
                request-container-id: null
              - request-instance-id: 2
                request-status: "DONE"
                request-business-key: "job2"
                request-message: "Ready to execute"
                request-retries: 0
                request-executions: 0
                request-command: "java.lang.String"
                request-scheduled-date:
                  java.util.Date: 1540328449419
                request-data: null
                response-data: null
                request-errors: null
                request-container-id: null
          schema:
            $ref: "#/definitions/request-info-instance-list"
  /server/containers/{containerId}/processes/instances/{processInstanceId}/signal/{signalName}:
    post:
      tags:
      - "Process instances"
      summary: "Signals a specified process instance with a specified signal name\
        \ and optional signal data."
      description: ""
      operationId: "signalProcessInstance"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that process instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "processInstanceId"
        in: "path"
        description: "identifier of the process instance to be signaled"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "signalName"
        in: "path"
        description: "signal name to be send to process instance"
        required: true
        type: "string"
        x-example: "EventReceived"
      - in: "body"
        name: "body"
        description: "optional event data - any type can be provided"
        required: false
        schema:
          type: "string"
        x-examples:
          application/json: "{\n    \"Person\": {\n        \"name\": \"john\"\n  \
            \  }\n}"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<person>\n    <name>john</name>\n</person>"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Process instance or Container Id not found"
        "403":
          description: "User does not have permission to access this asset"
  /server/containers/{containerId}/processes/instances/correlation/{correlationKey}/signal/{signalName}:
    post:
      tags:
      - "Process instances"
      summary: "Signals a specified process instance by correlation key with a specified\
        \ signal name and optional signal data."
      description: ""
      operationId: "signalProcessInstanceByCorrelationKey"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that process instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "correlationKey"
        in: "path"
        description: "correlation key of the process instance to be signaled"
        required: true
        type: "string"
        x-example: "123"
      - name: "signalName"
        in: "path"
        description: "signal name to be sent to process instance"
        required: true
        type: "string"
        x-example: "EventReceived"
      - in: "body"
        name: "body"
        description: "optional event data - any type can be provided"
        required: false
        schema:
          type: "string"
        x-examples:
          application/json: "{\n    \"Person\": {\n        \"name\": \"john\"\n  \
            \  }\n}"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<person>\n    <name>john</name>\n</person>"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Process instance or Container Id not found"
        "403":
          description: "User does not have permission to access this asset"
  /server/containers/{containerId}/processes/instances/signal/{signalName}:
    post:
      tags:
      - "Process instances"
      summary: "Signals multiple process instances with a specified signal name."
      description: ""
      operationId: "signalProcessInstances"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that process instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "instanceId"
        in: "query"
        description: "list of identifiers of the process instances to be signaled"
        required: false
        type: "array"
        items:
          type: "integer"
          format: "int64"
        collectionFormat: "multi"
      - name: "correlationKey"
        in: "query"
        description: "list of correlationKeys of the process instances to be signaled"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "signalName"
        in: "path"
        description: "signal name to be send to process instance"
        required: true
        type: "string"
        x-example: "EventReceived"
      - in: "body"
        name: "body"
        description: "optional event data - any type can be provided"
        required: false
        schema:
          type: "string"
        x-examples:
          application/json: "{\n    \"Person\": {\n        \"name\": \"john\"\n  \
            \  }\n}"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<person>\n    <name>john</name>\n</person>"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Process instance or Container Id not found"
        "403":
          description: "User does not have permission to access this asset"
  /server/containers/{containerId}/processes/instances/{processInstanceId}:
    get:
      tags:
      - "Process instances"
      summary: "Returns information about a specified process instance in a specified\
        \ KIE container."
      description: ""
      operationId: "getProcessInstance"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that process instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "processInstanceId"
        in: "path"
        description: "identifier of the process instance to be fetched"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "withVars"
        in: "query"
        description: "indicates if process instance variables should be loaded or\
          \ not"
        required: false
        type: "boolean"
      responses:
        "200":
          description: "Successful response"
          examples:
            application/json:
              process-instance-id: 1
              process-id: "Employee_Rostering.Process1"
              process-name: "Process1"
              process-version: "1.0"
              process-instance-state: 1
              container-id: "employee-rostering"
              initiator: "baAdmin"
              start-date:
                java.util.Date: 1539184095041
              process-instance-desc: "Process1"
              correlation-key: "1"
              parent-instance-id: -1
              sla-compliance: 0
              sla-due-date: null
              active-user-tasks: null
              process-instance-variables:
                initiator: "baAdmin"
          schema:
            $ref: "#/definitions/process-instance"
        "500":
          description: "Unexpected error"
        "404":
          description: "Process instance or Container Id not found"
    delete:
      tags:
      - "Process instances"
      summary: "Aborts a specified process instance in a specified KIE container."
      description: ""
      operationId: "abortProcessInstance"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that process instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "processInstanceId"
        in: "path"
        description: "identifier of the process instance to be aborted"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Process instance or Container Id not found"
        "403":
          description: "User does not have permission to access this asset"
  /server/containers/{containerId}/processes/instances/{processInstanceId}/variable/{varName}:
    get:
      tags:
      - "Process instances"
      summary: "Returns the value of a specified variable in a specified process instance."
      description: ""
      operationId: "getProcessInstanceVariable"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that process instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "processInstanceId"
        in: "path"
        description: "identifier of the process instance that variable should be retrieved\
          \ from"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "varName"
        in: "path"
        description: "variable name to be retrieved"
        required: true
        type: "string"
        x-example: "person"
      responses:
        "200":
          description: "Successful response"
          examples:
            application/json:
              com.myspace.mortgage_app.Application:
                applicant:
                  com.myspace.mortgage_app.Applicant:
                    name: ""
                    annualincome: 0
                    address: null
                    ssn: 0
                    creditrating: null
                property:
                  com.myspace.mortgage_app.Property:
                    age: 0
                    address: ""
                    locale: ""
                    saleprice: 0
                downpayment: 0
                amortization: 0
                mortgageamount: null
          schema:
            type: "object"
        "500":
          description: "Unexpected error"
        "404":
          description: "Process instance or Container Id not found"
        "403":
          description: "User does not have permission to access this asset"
    put:
      tags:
      - "Process instances"
      summary: "Creates or updates a variable for a specified process instance."
      description: ""
      operationId: "setProcessVariable"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that process instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "processInstanceId"
        in: "path"
        description: "identifier of the process instance to be updated"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "varName"
        in: "path"
        description: "name of the variable to be set/updated"
        required: true
        type: "string"
        x-example: "name"
      - in: "body"
        name: "body"
        description: "variable data - any type can be provided"
        required: true
        schema:
          type: "string"
        x-examples:
          application/json: "{\n    \"Person\": {\n        \"name\": \"john\"\n  \
            \  }\n}"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<person>\n    <name>john</name>\n</person>"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Process instance or Container Id not found"
        "403":
          description: "User does not have permission to access this asset"
  /server/containers/{containerId}/processes/instances/{processInstanceId}/variables:
    get:
      tags:
      - "Process instances"
      summary: "Retrieves all variables for a specified process instance as a map\
        \ in which the key is the variable name and the value is the variable value."
      description: ""
      operationId: "getProcessInstanceVariables"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that process instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "processInstanceId"
        in: "path"
        description: "identifier of the process instance that variables should be\
          \ retrieved from"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Process instance or Container Id not found"
        "403":
          description: "User does not have permission to access this asset"
        "200":
          description: "Successful response"
          examples:
            application/json:
              application:
                com.myspace.mortgage_app.Application:
                  applicant:
                    com.myspace.mortgage_app.Applicant:
                      name: ""
                      annualincome: 0
                      address: null
                      ssn: 0
                      creditrating: null
                  property:
                    com.myspace.mortgage_app.Property:
                      age: 0
                      address: ""
                      locale: ""
                      saleprice: 0
                  downpayment: 0
                  amortization: 0
                  mortgageamount: null
              initiator: "baAdmin"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
    post:
      tags:
      - "Process instances"
      summary: "Updates the values of one or more variable for a specified process\
        \ instance. The request is a map in which the key is the variable name and\
        \ the value is the new variable value."
      description: ""
      operationId: "setProcessVariables"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that process instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "processInstanceId"
        in: "path"
        description: "identifier of the process instance to be updated"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - in: "body"
        name: "body"
        description: "variable data give as map"
        required: true
        schema:
          type: "string"
        x-examples:
          application/json: "{\n    \"age\": 25,\n    \"person\": {\n        \"Person\"\
            : {\n            \"name\": \"john\"\n        }\n    }\n}"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<map-type>\n    <entries>\n        <entry>\n            <key>age</key>\n\
            \            <value xsi:type=\"xs:int\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
            \n                    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
            >25</value>\n        </entry>\n        <entry>\n            <key>person</key>\n\
            \            <value xsi:type=\"person\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
            >\n                <name>john</name>\n            </value>\n        </entry>\n\
            \    </entries>\n</map-type>"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Process instance or Container Id not found"
        "403":
          description: "User does not have permission to access this asset"
  /server/containers/{containerId}/processes/instances/{processInstanceId}/workitems/{workItemId}/completed:
    put:
      tags:
      - "Process instances"
      summary: "Completes a specified work item for a specified process instance."
      description: ""
      operationId: "completeWorkItem"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that process instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "processInstanceId"
        in: "path"
        description: "identifier of the process instance that work item belongs to"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "workItemId"
        in: "path"
        description: "identifier of the work item to complete"
        required: true
        type: "integer"
        format: "int64"
        x-example: 567
      - in: "body"
        name: "body"
        description: "optional outcome data give as map"
        required: false
        schema:
          type: "string"
        x-examples:
          application/json: "{\n    \"age\": 25,\n    \"person\": {\n        \"Person\"\
            : {\n            \"name\": \"john\"\n        }\n    }\n}"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<map-type>\n    <entries>\n        <entry>\n            <key>age</key>\n\
            \            <value xsi:type=\"xs:int\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
            \n                    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
            >25</value>\n        </entry>\n        <entry>\n            <key>person</key>\n\
            \            <value xsi:type=\"person\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
            >\n                <name>john</name>\n            </value>\n        </entry>\n\
            \    </entries>\n</map-type>"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Process instance, Work Item or Container Id not found"
        "403":
          description: "User does not have permission to access this asset"
  /server/containers/{containerId}/processes/instances:
    get:
      tags:
      - "Process instances"
      summary: "Returns a list of process instances in a specified KIE container."
      description: ""
      operationId: "getProcessInstancesByDeploymentId"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that process instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "status"
        in: "query"
        description: "optional process instance status (active, completed, aborted)\
          \ - defaults ot active (1) only"
        required: false
        type: "array"
        items:
          type: "integer"
          format: "int32"
          enum:
          - 1
          - 2
          - 3
        collectionFormat: "multi"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      - name: "sort"
        in: "query"
        description: "optional sort column, no default"
        required: false
        type: "string"
      - name: "sortOrder"
        in: "query"
        description: "optional sort direction (asc, desc) - defaults to asc"
        required: false
        type: "boolean"
        default: true
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Container Id not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              process-instance:
              - process-instance-id: 1
                process-id: "Employee_Rostering.Process1"
                process-name: "Process1"
                process-version: "1.0"
                process-instance-state: 1
                container-id: "employee-rostering"
                initiator: "baAdmin"
                start-date:
                  java.util.Date: 1539184095041
                process-instance-desc: "Process1"
                correlation-key: "1"
                parent-instance-id: -1
                sla-compliance: 0
                sla-due-date: null
                active-user-tasks: null
                process-instance-variables: null
              - process-instance-id: 2
                process-id: "Employee_Rostering.Process2"
                process-name: "Process2"
                process-version: "1.0"
                process-instance-state: 1
                container-id: "employee-rostering"
                initiator: "baAdmin"
                start-date:
                  java.util.Date: 1539184303976
                process-instance-desc: "Process2"
                correlation-key: "2"
                parent-instance-id: -1
                sla-compliance: 0
                sla-due-date: null
                active-user-tasks: null
                process-instance-variables: null
          schema:
            $ref: "#/definitions/process-instance-list"
    delete:
      tags:
      - "Process instances"
      summary: "Aborts multiple specified process instances in a specified KIE container."
      description: ""
      operationId: "abortProcessInstances"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that process instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "instanceId"
        in: "query"
        description: "list of identifiers of the process instances to be aborted"
        required: true
        type: "array"
        items:
          type: "integer"
          format: "int64"
        collectionFormat: "multi"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Process instance or Container Id not found"
        "403":
          description: "User does not have permission to access this asset"
  /server/containers/{containerId}/processes/{processId}/instances:
    post:
      tags:
      - "Process instances"
      summary: "Starts a new process instance of a specified process."
      description: ""
      operationId: "startProcess"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id where the process definition resides"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "processId"
        in: "path"
        description: "process id that new instance should be created from"
        required: true
        type: "string"
        x-example: "evaluation"
      - in: "body"
        name: "body"
        description: "optional map of process variables"
        required: false
        schema:
          type: "string"
        x-examples:
          application/json: "{\n    \"age\": 25,\n    \"person\": {\n        \"Person\"\
            : {\n            \"name\": \"john\"\n        }\n    }\n}"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<map-type>\n    <entries>\n        <entry>\n            <key>age</key>\n\
            \            <value xsi:type=\"xs:int\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
            \n                    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
            >25</value>\n        </entry>\n        <entry>\n            <key>person</key>\n\
            \            <value xsi:type=\"person\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
            >\n                <name>john</name>\n            </value>\n        </entry>\n\
            \    </entries>\n</map-type>"
      responses:
        "201":
          description: "Process instance started"
          examples:
            application/json: 10
            application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
              yes\"?>\n<long-type>\n    <value>10</value>\n</long-type>"
          schema:
            type: "integer"
            format: "int64"
        "500":
          description: "Unexpected error"
        "404":
          description: "Process ID or Container Id not found"
        "403":
          description: "User does not have permission to access this asset"
  /server/containers/{containerId}/processes/instances/{processInstanceId}/variables/instances/{varName}:
    get:
      tags:
      - "Process instances"
      summary: "Returns the history of a specified variable in a specified process\
        \ instance."
      description: ""
      operationId: "getVariableHistory"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that process instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "processInstanceId"
        in: "path"
        description: "identifier of the process instance that variable history should\
          \ be collected for"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "varName"
        in: "path"
        description: "name of the variables that history should be collected for"
        required: true
        type: "string"
        x-example: "person"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Process Instance or Container Id not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              variable-instance:
              - name: "initiator"
                old-value: ""
                value: "baAdmin"
                process-instance-id: 2
                modification-date:
                  java.util.Date: 1539610491992
              - name: "application"
                old-value: "com.myspace.mortgage_app.Application@bd449b3"
                value: "com.myspace.mortgage_app.Application@bd449b3"
                process-instance-id: 2
                modification-date:
                  java.util.Date: 1539610492006
          schema:
            $ref: "#/definitions/variable-instance-list"
  /server/containers/{containerId}/processes:
    get:
      tags:
      - "Process instances"
      summary: "Returns a list of process definitions in a specified KIE container."
      description: ""
      operationId: "getProcessesByDeploymentId"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that process instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      - name: "sort"
        in: "query"
        description: "optional sort column, no default"
        required: false
        type: "string"
      - name: "sortOrder"
        in: "query"
        description: "optional sort direction (asc, desc) - defaults to asc"
        required: false
        type: "boolean"
        default: true
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Container Id not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              processes:
              - associatedEntities: null
                serviceTasks: null
                processVariables: null
                reusableSubProcesses: null
                process-id: "Employee_Rostering.Process1"
                process-name: "Process1"
                process-version: "1.0"
                package: "employeerostering.employeerostering"
                container-id: "employee-rostering"
                dynamic: false
          schema:
            $ref: "#/definitions/process-definitions"
  /server/containers/{containerId}/processes/instances/{processInstanceId}/variables/instances:
    get:
      tags:
      - "Process instances"
      summary: "Returns the current variable values of a specified process instance\
        \ in a specified KIE container."
      description: ""
      operationId: "getVariablesCurrentState"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that process instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "processInstanceId"
        in: "path"
        description: "identifier of the process instance that variables state should\
          \ be collected for"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Process Instance or Container Id not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              variable-instance:
              - name: "initiator"
                old-value: ""
                value: "baAdmin"
                process-instance-id: 2
                modification-date:
                  java.util.Date: 1539610491992
              - name: "application"
                old-value: "com.myspace.mortgage_app.Application@bd449b3"
                value: "com.myspace.mortgage_app.Application@bd449b3"
                process-instance-id: 2
                modification-date:
                  java.util.Date: 1539610492006
          schema:
            $ref: "#/definitions/variable-instance-list"
  /server/containers/{containerId}/processes/instances/{processInstanceId}/signals:
    get:
      tags:
      - "Process instances"
      summary: "Returns all available signal names for a specified process instance."
      description: ""
      operationId: "getAvailableSignals"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that process instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "processInstanceId"
        in: "path"
        description: "identifier of the process instance that signals should be collected\
          \ for"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Process instance or Container Id not found"
        "403":
          description: "User does not have permission to access this asset"
        "200":
          description: "Successful response"
          examples:
            application/json:
            - "wait"
            - "another"
          schema:
            type: "array"
            items:
              type: "string"
  /server/containers/{containerId}/processes/instances/{processInstanceId}/workitems/{workItemId}/aborted:
    put:
      tags:
      - "Process instances"
      summary: "Aborts a specified work item for a specified process instance."
      description: ""
      operationId: "abortWorkItem"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that process instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "processInstanceId"
        in: "path"
        description: "identifier of the process instance that work item belongs to"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "workItemId"
        in: "path"
        description: "identifier of the work item to abort"
        required: true
        type: "integer"
        format: "int64"
        x-example: 567
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Process instance, Work Item or Container Id not found"
        "403":
          description: "User does not have permission to access this asset"
  /server/containers/{containerId}/processes/instances/{processInstanceId}/workitems/{workItemId}:
    get:
      tags:
      - "Process instances"
      summary: "Returns information about a specified work item for a specified process\
        \ instance."
      description: ""
      operationId: "getWorkItem"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that process instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "processInstanceId"
        in: "path"
        description: "identifier of the process instance that work item belongs to"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "workItemId"
        in: "path"
        description: "identifier of the work item to retrieve"
        required: true
        type: "integer"
        format: "int64"
        x-example: 567
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Process instance, Work Item or Container Id not found"
        "403":
          description: "User does not have permission to access this asset"
        "200":
          description: "Successful response"
          examples:
            application/json:
              work-item-instance:
              - work-item-id: 4
                work-item-name: "Human Task"
                work-item-state: 0
                work-item-params:
                  application:
                    com.myspace.mortgage_app.Application:
                      applicant:
                        com.myspace.mortgage_app.Applicant:
                          name: "NewName"
                          annualincome: 0
                          address: null
                          ssn: 0
                          creditrating: null
                      property:
                        com.myspace.mortgage_app.Property:
                          age: 0
                          address: "NewAddress"
                          locale: ""
                          saleprice: 0
                      downpayment: 0
                      amortization: 0
                      mortgageamount: null
                  TaskName: "CorrectData"
                  NodeName: "Correct Data"
                  Skippable: "false"
                  GroupId: "broker"
                process-instance-id: 4
                container-id: "mortgage-process_1.0.0-SNAPSHOT"
                node-instance-id: 5
                node-id: 6
          schema:
            $ref: "#/definitions/work-item-instance"
  /server/containers/{containerId}/processes/instances/{processInstanceId}/workitems:
    get:
      tags:
      - "Process instances"
      summary: "Returns all work items for a specified process instance."
      description: ""
      operationId: "getWorkItemByProcessInstance"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that process instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "processInstanceId"
        in: "path"
        description: "identifier of the process instance that work items belong to"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Process instance, Work Item or Container Id not found"
        "403":
          description: "User does not have permission to access this asset"
        "200":
          description: "Successful response"
          examples:
            application/json:
              work-item-instance:
              - work-item-id: 4
                work-item-name: "Human Task"
                work-item-state: 0
                work-item-params:
                  application:
                    com.myspace.mortgage_app.Application:
                      applicant:
                        com.myspace.mortgage_app.Applicant:
                          name: "NewName"
                          annualincome: 0
                          address: null
                          ssn: 0
                          creditrating: null
                      property:
                        com.myspace.mortgage_app.Property:
                          age: 0
                          address: "NewAddress"
                          locale: ""
                          saleprice: 0
                      downpayment: 0
                      amortization: 0
                      mortgageamount: null
                  TaskName: "CorrectData"
                  NodeName: "Correct Data"
                  Skippable: "false"
                  GroupId: "broker"
                process-instance-id: 4
                container-id: "mortgage-process_1.0.0-SNAPSHOT"
                node-instance-id: 5
                node-id: 6
          schema:
            $ref: "#/definitions/work-item-instance-list"
  /server/containers/{containerId}/processes/{processId}/computedInstances:
    post:
      tags:
      - "Process instances"
      summary: "Starts a new synchronous process instance of a specified process."
      description: ""
      operationId: "startSynchronousProcess"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id where the process definition resides"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "processId"
        in: "path"
        description: "process id that new instance should be created from"
        required: true
        type: "string"
        x-example: "evaluation"
      - in: "body"
        name: "body"
        description: "optional map of process variables"
        required: false
        schema:
          type: "string"
        x-examples:
          application/json: "{\n    \"age\": 25,\n    \"person\": {\n        \"Person\"\
            : {\n            \"name\": \"john\"\n        }\n    }\n}"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<map-type>\n    <entries>\n        <entry>\n            <key>age</key>\n\
            \            <value xsi:type=\"xs:int\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
            \n                    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
            >25</value>\n        </entry>\n        <entry>\n            <key>person</key>\n\
            \            <value xsi:type=\"person\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
            >\n                <name>john</name>\n            </value>\n        </entry>\n\
            \    </entries>\n</map-type>"
      responses:
        "201":
          description: "Process instance started"
          examples:
            application/json:
              age: 25
              person:
                Person:
                  name: "john"
            application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
              yes\"?>\n<map-type>\n    <entries>\n        <entry>\n            <key>age</key>\n\
              \            <value xsi:type=\"xs:int\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
              \n                    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
              >25</value>\n        </entry>\n        <entry>\n            <key>person</key>\n\
              \            <value xsi:type=\"person\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
              >\n                <name>john</name>\n            </value>\n       \
              \ </entry>\n    </entries>\n</map-type>"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
        "500":
          description: "Unexpected error"
        "404":
          description: "Process ID or Container Id not found"
        "403":
          description: "User does not have permission to access this asset"
  /server/containers/{containerId}/processes/{processId}/instances/fromNodes:
    post:
      tags:
      - "Process instances"
      summary: "Starts a new process instance from the specific nodes"
      description: ""
      operationId: "startProcessFromNodeIds"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id where the process definition resides"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "processId"
        in: "path"
        description: "process instance id that new instance should be created from"
        required: true
        type: "string"
        x-example: "evaluation"
      - in: "body"
        name: "body"
        description: "optional map of process variables"
        required: false
        schema:
          type: "string"
      responses:
        "201":
          description: "Process instance created"
          examples:
            application/json: 10
            application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
              yes\"?>\n<long-type>\n    <value>10</value>\n</long-type>"
          schema:
            type: "integer"
            format: "int64"
        "500":
          description: "Unexpected error"
        "404":
          description: "Process ID or Container Id not found"
        "403":
          description: "User does not have permission to access this asset"
  /server/containers/{containerId}/processes/{processId}/instances/correlation/{correlationKey}/fromNodes:
    post:
      tags:
      - "Process instances"
      summary: "Starts a new process instance from the specific nodes"
      description: ""
      operationId: "startProcessWithCorrelationKeyFromNodeIds"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id where the process definition resides"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "processId"
        in: "path"
        description: "process instance id that new instance should be created from"
        required: true
        type: "string"
        x-example: "evaluation"
      - name: "correlationKey"
        in: "path"
        description: "correlation key that should be used for creating the process"
        required: true
        type: "string"
        x-example: "evaluation"
      - in: "body"
        name: "body"
        description: "start process specifications"
        required: false
        schema:
          type: "string"
      responses:
        "201":
          description: "Process instance created"
          examples:
            application/json: 10
            application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
              yes\"?>\n<long-type>\n    <value>10</value>\n</long-type>"
          schema:
            type: "integer"
            format: "int64"
        "500":
          description: "Unexpected error"
        "404":
          description: "Process ID or Container Id not found"
        "403":
          description: "User does not have permission to access this asset"
        "409":
          description: "Duplicate correlation key"
  /server/containers/{containerId}/processes/{processId}/instances/correlation/{correlationKey}:
    post:
      tags:
      - "Process instances"
      summary: "Starts a new process instance of a specified process and assigns a\
        \ new correlation key to the process instance."
      description: ""
      operationId: "startProcessWithCorrelation"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id where the process definition resides"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "processId"
        in: "path"
        description: "process id that new instance should be created from"
        required: true
        type: "string"
        x-example: "evaluation"
      - name: "correlationKey"
        in: "path"
        description: "correlation key to be assigned to process instance"
        required: true
        type: "string"
        x-example: "john-evaluation-2019"
      - in: "body"
        name: "body"
        description: "optional map of process variables"
        required: false
        schema:
          type: "string"
        x-examples:
          application/json: "{\n    \"age\": 25,\n    \"person\": {\n        \"Person\"\
            : {\n            \"name\": \"john\"\n        }\n    }\n}"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<map-type>\n    <entries>\n        <entry>\n            <key>age</key>\n\
            \            <value xsi:type=\"xs:int\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
            \n                    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
            >25</value>\n        </entry>\n        <entry>\n            <key>person</key>\n\
            \            <value xsi:type=\"person\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
            >\n                <name>john</name>\n            </value>\n        </entry>\n\
            \    </entries>\n</map-type>"
      responses:
        "201":
          description: "Process instance started"
          examples:
            application/json: 10
            application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
              yes\"?>\n<long-type>\n    <value>10</value>\n</long-type>"
          schema:
            type: "integer"
            format: "int64"
        "500":
          description: "Unexpected error"
        "404":
          description: "Process ID or Container Id not found"
        "403":
          description: "User does not have permission to access this asset"
        "409":
          description: "Duplicate correlation key"
  /server/containers/{containerId}/processes/instances/{processInstanceId}/nodes/instances:
    get:
      tags:
      - "Process instances"
      summary: "Returns node instances for the specified process instance."
      description: ""
      operationId: "getProcessInstanceHistory"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that process instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "processInstanceId"
        in: "path"
        description: "identifier of the process instance that history should be collected\
          \ for"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "activeOnly"
        in: "query"
        description: "instructs if active nodes only should be collected, defaults\
          \ to false"
        required: false
        type: "boolean"
      - name: "completedOnly"
        in: "query"
        description: "instructs if completed nodes only should be collected, defaults\
          \ to false"
        required: false
        type: "boolean"
      - name: "processInstanceHistoryType"
        in: "query"
        description: "entry type from the history"
        required: false
        type: "string"
        x-example: "123"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Process Instance or Container Id not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              node-instance:
              - node-instance-id: 1
                node-name: "Task"
                process-instance-id: 2
                work-item-id: 2
                container-id: "employee-rostering"
                start-date:
                  java.util.Date: 1539184095048
                node-id: "_5F8EED98-433C-4E7B-97BC-0E70615F13CB"
                node-type: "HumanTaskNode"
                node-connection: "_E89FEB0F-B8E1-4138-9DF0-397C9F9A6512"
                node-completed: false
                reference-id: null
                sla-compliance: 0
                sla-due-date: null
          schema:
            $ref: "#/definitions/node-instance-list"
  /server/containers/{containerId}/processes/instances/{processInstanceId}/processes:
    get:
      tags:
      - "Process instances"
      summary: "Returns a list of process instances for which a specified process\
        \ instance is a parent process instance"
      description: ""
      operationId: "getProcessInstances"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that process instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "processInstanceId"
        in: "path"
        description: "identifier of the parent process instance that process instances\
          \ should be collected for"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "status"
        in: "query"
        description: "optional process instance status (active, completed, aborted)\
          \ - defaults ot active (1) only"
        required: false
        type: "array"
        items:
          type: "integer"
          format: "int32"
          enum:
          - 1
          - 2
          - 3
        collectionFormat: "multi"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      - name: "sort"
        in: "query"
        description: "optional sort column, no default"
        required: false
        type: "string"
      - name: "sortOrder"
        in: "query"
        description: "optional sort direction (asc, desc) - defaults to asc"
        required: false
        type: "boolean"
        default: true
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              process-instance:
              - process-instance-id: 1
                process-id: "Employee_Rostering.Process1"
                process-name: "Process1"
                process-version: "1.0"
                process-instance-state: 1
                container-id: "employee-rostering"
                initiator: "baAdmin"
                start-date:
                  java.util.Date: 1539184095041
                process-instance-desc: "Process1"
                correlation-key: "1"
                parent-instance-id: -1
                sla-compliance: 0
                sla-due-date: null
                active-user-tasks: null
                process-instance-variables: null
              - process-instance-id: 2
                process-id: "Employee_Rostering.Process2"
                process-name: "Process2"
                process-version: "1.0"
                process-instance-state: 1
                container-id: "employee-rostering"
                initiator: "baAdmin"
                start-date:
                  java.util.Date: 1539184303976
                process-instance-desc: "Process2"
                correlation-key: "2"
                parent-instance-id: -1
                sla-compliance: 0
                sla-due-date: null
                active-user-tasks: null
                process-instance-variables: null
          schema:
            $ref: "#/definitions/process-instance-list"
  /server/queries/definitions/{queryName}:
    get:
      tags:
      - "Custom queries"
      summary: "Returns information about a specified custom query."
      description: ""
      operationId: "getQuery"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "queryName"
        in: "path"
        description: "identifier of the query definition to be retrieved"
        required: true
        type: "string"
        x-example: "customQuery"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Query definition with given name not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              query-name: "jbpmProcessInstancesWithVariables1"
              query-source: "java:jboss/datasources/ExampleDS"
              query-expression: "select vil.processInstanceId, vil.processId, vil.id,\
                \ vil.variableId, vil.value from VariableInstanceLog vil where vil.id\
                \ in (select MAX(v.id) from VariableInstanceLog v group by v.variableId,\
                \ v.processInstanceId)"
              query-target: "CUSTOM"
              query-columns:
                PROCESSINSTANCEID: "NUMBER"
                VARIABLEID: "LABEL"
                ID: "NUMBER"
                VALUE: "LABEL"
                PROCESSID: "LABEL"
          schema:
            $ref: "#/definitions/query-definition"
    post:
      tags:
      - "Custom queries"
      summary: "Registers a custom query definition."
      description: ""
      operationId: "createQueryDefinition"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "queryName"
        in: "path"
        description: "identifier of the query definition to be registered"
        required: true
        type: "string"
        x-example: "customQuery"
      - in: "body"
        name: "body"
        description: "query definition represented as QueryDefinition"
        required: true
        schema:
          type: "string"
        x-examples:
          application/json: "{\n  \"query-name\" : \"allProcessInstances\",\n  \"\
            query-source\" : \"jdbc/jbpm-ds\",\n  \"query-expression\" : \"select\
            \ * from ProcessInstanceLog where status = 1\",\n  \"query-target\" :\
            \ \"PROCESS\",\n  \"query-columns\" : null\n}"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<query-definition>\n    <query-name>allProcessInstances</query-name>\n\
            \    <query-source>jdbc/jbpm-ds</query-source>\n    <query-expression>select\
            \ * from ProcessInstanceLog where status = 1</query-expression>\n    <query-target>PROCESS</query-target>\n\
            \    <columns></columns>\n</query-definition>"
      responses:
        "500":
          description: "Unexpected error"
        "409":
          description: "Query with given name already exists"
        "201":
          description: "Successful response"
          examples:
            application/json:
              query-name: "jbpmProcessInstancesWithVariables1"
              query-source: "java:jboss/datasources/ExampleDS"
              query-expression: "select vil.processInstanceId, vil.processId, vil.id,\
                \ vil.variableId, vil.value from VariableInstanceLog vil where vil.id\
                \ in (select MAX(v.id) from VariableInstanceLog v group by v.variableId,\
                \ v.processInstanceId)"
              query-target: "CUSTOM"
              query-columns:
                PROCESSINSTANCEID: "NUMBER"
                VARIABLEID: "LABEL"
                ID: "NUMBER"
                VALUE: "LABEL"
                PROCESSID: "LABEL"
          schema:
            $ref: "#/definitions/query-definition"
    put:
      tags:
      - "Custom queries"
      summary: "Replaces existing custom query definition or registers it as new if\
        \ the query does not already exist."
      description: ""
      operationId: "replaceQueryDefinition"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "queryName"
        in: "path"
        description: "identifier of the query definition to be replaced"
        required: true
        type: "string"
        x-example: "customQuery"
      - in: "body"
        name: "body"
        description: "query definition represented as QueryDefinition"
        required: true
        schema:
          type: "string"
        x-examples:
          application/json: "{\n  \"query-name\" : \"allProcessInstances\",\n  \"\
            query-source\" : \"jdbc/jbpm-ds\",\n  \"query-expression\" : \"select\
            \ * from ProcessInstanceLog where status = 1\",\n  \"query-target\" :\
            \ \"PROCESS\",\n  \"query-columns\" : null\n}"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<query-definition>\n    <query-name>allProcessInstances</query-name>\n\
            \    <query-source>jdbc/jbpm-ds</query-source>\n    <query-expression>select\
            \ * from ProcessInstanceLog where status = 1</query-expression>\n    <query-target>PROCESS</query-target>\n\
            \    <columns></columns>\n</query-definition>"
      responses:
        "500":
          description: "Unexpected error"
        "201":
          description: "Successful response"
          examples:
            application/json:
              query-name: "jbpmProcessInstancesWithVariables1"
              query-source: "java:jboss/datasources/ExampleDS"
              query-expression: "select vil.processInstanceId, vil.processId, vil.id,\
                \ vil.variableId, vil.value from VariableInstanceLog vil where vil.id\
                \ in (select MAX(v.id) from VariableInstanceLog v group by v.variableId,\
                \ v.processInstanceId)"
              query-target: "CUSTOM"
              query-columns:
                PROCESSINSTANCEID: "NUMBER"
                VARIABLEID: "LABEL"
                ID: "NUMBER"
                VALUE: "LABEL"
                PROCESSID: "LABEL"
          schema:
            $ref: "#/definitions/query-definition"
    delete:
      tags:
      - "Custom queries"
      summary: "Deletes a specified custom query."
      description: ""
      operationId: "dropQueryDefinition"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "queryName"
        in: "path"
        description: "identifier of the query definition to be deleted"
        required: true
        type: "string"
        x-example: "customQuery"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Query definition with given name not found"
  /server/queries/definitions/{queryName}/data:
    get:
      tags:
      - "Custom queries"
      summary: "Returns the results of a specified custom query."
      description: ""
      operationId: "runQuery"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "queryName"
        in: "path"
        description: "identifier of the query definition to be used for query"
        required: true
        type: "string"
        x-example: "customQuery"
      - name: "mapper"
        in: "query"
        description: "identifier of the query mapper to be used when transforming\
          \ results"
        required: true
        type: "string"
      - name: "orderBy"
        in: "query"
        description: "optional sort order"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Query definition with given name not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              process-instance:
              - process-instance-id: 1
                process-id: "Employee_Rostering.Process1"
                process-name: "Process1"
                process-version: "1.0"
                process-instance-state: 1
                container-id: "employee-rostering"
                initiator: "baAdmin"
                start-date:
                  java.util.Date: 1539184095041
                process-instance-desc: "Process1"
                correlation-key: "1"
                parent-instance-id: -1
                sla-compliance: 0
                sla-due-date: null
                active-user-tasks: null
                process-instance-variables: null
              - process-instance-id: 2
                process-id: "Employee_Rostering.Process2"
                process-name: "Process2"
                process-version: "1.0"
                process-instance-state: 1
                container-id: "employee-rostering"
                initiator: "baAdmin"
                start-date:
                  java.util.Date: 1539184303976
                process-instance-desc: "Process2"
                correlation-key: "2"
                parent-instance-id: -1
                sla-compliance: 0
                sla-due-date: null
                active-user-tasks: null
                process-instance-variables: null
          schema:
            type: "array"
            items:
              type: "object"
  /server/queries/definitions/{queryName}/filtered-data:
    post:
      tags:
      - "Custom queries"
      summary: "Returns the results of a specified custom query and filters the results\
        \ based on a provided builder or filter request body."
      description: ""
      operationId: "runQueryFiltered"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "queryName"
        in: "path"
        description: "identifier of the query definition to be used for query"
        required: true
        type: "string"
        x-example: "customQuery"
      - name: "mapper"
        in: "query"
        description: "identifier of the query mapper to be used when transforming\
          \ results"
        required: true
        type: "string"
      - name: "builder"
        in: "query"
        description: "optional identifier of the query builder to be used for query\
          \ conditions"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      - in: "body"
        name: "body"
        description: "optional query filter specification represented as QueryFilterSpec"
        required: false
        schema:
          type: "string"
        x-examples:
          application/json: "{\n  \"order-by\" : null,\n  \"order-asc\" : false,\n\
            \  \"query-params\" : [ {\n    \"cond-column\" : \"processinstanceid\"\
            ,\n    \"cond-operator\" : \"GREATER_THAN\",\n    \"cond-values\" : [\
            \ 9 ]\n  } ],\n  \"result-column-mapping\" : null,\n  \"order-by-clause\"\
            \ : null\n}"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<query-filter-spec>\n    <order-asc>false</order-asc>\n    <query-params>\n\
            \        <cond-column>processinstanceid</cond-column>\n        <cond-operator>GREATER_THAN</cond-operator>\n\
            \        <cond-values xsi:type=\"xs:long\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
            \ xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">9</cond-values>\n\
            \    </query-params>\n</query-filter-spec>"
      responses:
        "500":
          description: "Unexpected error"
        "400":
          description: "Query parameters or filter spec provide invalid conditions"
        "200":
          description: "Successful response"
          examples:
            application/json:
              process-instance:
              - process-instance-id: 1
                process-id: "Employee_Rostering.Process1"
                process-name: "Process1"
                process-version: "1.0"
                process-instance-state: 1
                container-id: "employee-rostering"
                initiator: "baAdmin"
                start-date:
                  java.util.Date: 1539184095041
                process-instance-desc: "Process1"
                correlation-key: "1"
                parent-instance-id: -1
                sla-compliance: 0
                sla-due-date: null
                active-user-tasks: null
                process-instance-variables: null
              - process-instance-id: 2
                process-id: "Employee_Rostering.Process2"
                process-name: "Process2"
                process-version: "1.0"
                process-instance-state: 1
                container-id: "employee-rostering"
                initiator: "baAdmin"
                start-date:
                  java.util.Date: 1539184303976
                process-instance-desc: "Process2"
                correlation-key: "2"
                parent-instance-id: -1
                sla-compliance: 0
                sla-due-date: null
                active-user-tasks: null
                process-instance-variables: null
          schema:
            type: "object"
  /server/queries/definitions/containers/{containerId}/query/{queryName}/filtered-data:
    post:
      tags:
      - "Custom queries"
      summary: "Returns the results of a specified custom query on a specified KIE\
        \ container and filters the results based on a provided builder or filter\
        \ request body."
      description: ""
      operationId: "runQueryFilteredByDeploymentId"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id to filter queries"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "queryName"
        in: "path"
        description: "identifier of the query definition to be used for query"
        required: true
        type: "string"
        x-example: "customQuery"
      - name: "mapper"
        in: "query"
        description: "identifier of the query mapper to be used when transforming\
          \ results"
        required: true
        type: "string"
      - name: "builder"
        in: "query"
        description: "optional identifier of the query builder to be used for query\
          \ conditions"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      - in: "body"
        name: "body"
        description: "optional query filter specification represented as QueryFilterSpec"
        required: false
        schema:
          type: "string"
        x-examples:
          application/json: "{\n  \"order-by\" : null,\n  \"order-asc\" : false,\n\
            \  \"query-params\" : [ {\n    \"cond-column\" : \"processinstanceid\"\
            ,\n    \"cond-operator\" : \"GREATER_THAN\",\n    \"cond-values\" : [\
            \ 9 ]\n  } ],\n  \"result-column-mapping\" : null,\n  \"order-by-clause\"\
            \ : null\n}"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<query-filter-spec>\n    <order-asc>false</order-asc>\n    <query-params>\n\
            \        <cond-column>processinstanceid</cond-column>\n        <cond-operator>GREATER_THAN</cond-operator>\n\
            \        <cond-values xsi:type=\"xs:long\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
            \ xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">9</cond-values>\n\
            \    </query-params>\n</query-filter-spec>"
      responses:
        "500":
          description: "Unexpected error"
        "400":
          description: "Query parameters or filter spec provide invalid conditions"
        "200":
          description: "Successful response"
          examples:
            application/json:
              process-instance:
              - process-instance-id: 1
                process-id: "Employee_Rostering.Process1"
                process-name: "Process1"
                process-version: "1.0"
                process-instance-state: 1
                container-id: "employee-rostering"
                initiator: "baAdmin"
                start-date:
                  java.util.Date: 1539184095041
                process-instance-desc: "Process1"
                correlation-key: "1"
                parent-instance-id: -1
                sla-compliance: 0
                sla-due-date: null
                active-user-tasks: null
                process-instance-variables: null
              - process-instance-id: 2
                process-id: "Employee_Rostering.Process2"
                process-name: "Process2"
                process-version: "1.0"
                process-instance-state: 1
                container-id: "employee-rostering"
                initiator: "baAdmin"
                start-date:
                  java.util.Date: 1539184303976
                process-instance-desc: "Process2"
                correlation-key: "2"
                parent-instance-id: -1
                sla-compliance: 0
                sla-due-date: null
                active-user-tasks: null
                process-instance-variables: null
          schema:
            type: "object"
  /server/queries/definitions:
    get:
      tags:
      - "Custom queries"
      summary: "Returns all custom query definitions."
      description: ""
      operationId: "getQueries"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              queries:
              - query-name: "tasksMonitoring"
                query-source: "java:jboss/datasources/ExampleDS"
                query-expression: "select p.processName, p.externalId, t.taskId, t.taskName,\
                  \ t.status, t.createdDate, t.startDate, t.endDate, t.processInstanceId,\
                  \ t.userId, t.duration from ProcessInstanceLog p inner join BAMTaskSummary\
                  \ t on (t.processInstanceId = p.processInstanceId) inner join (select\
                  \ min(pk) as pk from BAMTaskSummary group by taskId) d on t.pk =\
                  \ d.pk"
                query-target: "CUSTOM"
                query-columns: {}
              - query-name: "jbpmExecutionErrorList"
                query-source: "java:jboss/datasources/ExampleDS"
                query-expression: "select eri.ERROR_ACK, eri.ERROR_ACK_BY, eri.ERROR_ACK_AT,\
                  \ eri.ACTIVITY_ID, eri.ACTIVITY_NAME, eri.DEPLOYMENT_ID, eri.ERROR_DATE,\
                  \ eri.ERROR_ID, eri.ERROR_MSG, eri.JOB_ID, eri.PROCESS_ID, eri.PROCESS_INST_ID,\
                  \ eri.ERROR_TYPE from ExecutionErrorInfo eri"
                query-target: "CUSTOM"
                query-columns: {}
              - query-name: "jbpmRequestList"
                query-source: "java:jboss/datasources/ExampleDS"
                query-expression: "select ri.id, ri.timestamp, ri.status, ri.commandName,\
                  \ ri.message, ri.businessKey, ri.retries, ri.executions, pil.processName,\
                  \ pil.processInstanceId, pil.processInstanceDescription, ri.deploymentId\
                  \ from RequestInfo ri left join ProcessInstanceLog pil on pil.processInstanceId=ri.processInstanceId"
                query-target: "CUSTOM"
                query-columns: {}
          schema:
            $ref: "#/definitions/query-definitions"
  /server/queries/tasks/instances/{taskInstanceId}/events:
    get:
      tags:
      - "Process queries"
      summary: "Returns events for a specified task instance."
      description: ""
      operationId: "getTaskEvents"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "taskInstanceId"
        in: "path"
        description: "task id to load task events for"
        required: true
        type: "integer"
        format: "int64"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      - name: "sort"
        in: "query"
        description: "optional sort column, no default"
        required: false
        type: "string"
      - name: "sortOrder"
        in: "query"
        description: "optional sort direction (asc, desc) - defaults to asc"
        required: false
        type: "boolean"
        default: true
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              task-event-instance:
              - task-event-id: 4
                task-id: 4
                task-event-type: "STARTED"
                task-event-user: "Mortgage_Process.MortgageApprovalProcess"
                task-event-date:
                  java.util.Date: 1539623679130
                task-process-instance-id: 4
                task-work-item-id: 4
                task-event-message: null
          schema:
            $ref: "#/definitions/task-event-instance-list"
  /server/queries/variables/processes/tasks:
    post:
      tags:
      - "Process queries"
      summary: "Queries process tasks by variables"
      description: ""
      operationId: "queryUserTasksByVariables"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          type: "string"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      - name: "orderBy"
        in: "query"
        description: "optional sort column"
        required: false
        type: "string"
      - name: "asc"
        in: "query"
        description: "optional sort direction - true ascending, false descending"
        required: false
        type: "boolean"
        default: true
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/user-task-variable-instance-list"
  /server/queries/processes/instances/{processInstanceId}/variables/instances/{varName}:
    get:
      tags:
      - "Process queries"
      summary: "Returns the history of a specified variable in a specified process\
        \ instance."
      description: ""
      operationId: "getVariableHistory_1"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "processInstanceId"
        in: "path"
        description: "process instance id to load variable history for"
        required: true
        type: "integer"
        format: "int64"
      - name: "varName"
        in: "path"
        description: "variable name that history should be loaded for"
        required: true
        type: "string"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              variable-instance:
              - name: "initiator"
                old-value: ""
                value: "baAdmin"
                process-instance-id: 2
                modification-date:
                  java.util.Date: 1539610491992
              - name: "application"
                old-value: "com.myspace.mortgage_app.Application@bd449b3"
                value: "com.myspace.mortgage_app.Application@bd449b3"
                process-instance-id: 2
                modification-date:
                  java.util.Date: 1539610492006
          schema:
            $ref: "#/definitions/variable-instance-list"
  /server/queries/containers/{containerId}/processes/definitions:
    get:
      tags:
      - "Process queries"
      summary: "Returns all process definitions in a specified KIE container."
      description: ""
      operationId: "getProcessesByDeploymentId_1"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id to filter process definitions"
        required: true
        type: "string"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      - name: "sort"
        in: "query"
        description: "optional sort column, no default"
        required: false
        type: "string"
      - name: "sortOrder"
        in: "query"
        description: "optional sort direction (asc, desc) - defaults to asc"
        required: false
        type: "boolean"
        default: true
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              processes:
              - associatedEntities: null
                serviceTasks: null
                processVariables: null
                reusableSubProcesses: null
                process-id: "Employee_Rostering.Process1"
                process-name: "Process1"
                process-version: "1.0"
                package: "employeerostering.employeerostering"
                container-id: "employee-rostering"
                dynamic: false
          schema:
            $ref: "#/definitions/process-definitions"
  /server/queries/processes/definitions:
    get:
      tags:
      - "Process queries"
      summary: "Returns all process definitions."
      description: ""
      operationId: "getProcessesByFilter"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "filter"
        in: "query"
        description: "process id or name to filter process definitions"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      - name: "sort"
        in: "query"
        description: "optional sort column, no default"
        required: false
        type: "string"
      - name: "sortOrder"
        in: "query"
        description: "optional sort direction (asc, desc) - defaults to asc"
        required: false
        type: "boolean"
        default: true
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              processes:
              - associatedEntities: null
                serviceTasks: null
                processVariables: null
                reusableSubProcesses: null
                process-id: "Employee_Rostering.Process1"
                process-name: "Process1"
                process-version: "1.0"
                package: "employeerostering.employeerostering"
                container-id: "employee-rostering"
                dynamic: false
          schema:
            $ref: "#/definitions/process-definitions"
  /server/queries/processes/definitions/{processId}:
    get:
      tags:
      - "Process queries"
      summary: "Returns all process definitions for a specified process."
      description: ""
      operationId: "getProcessesById"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "processId"
        in: "path"
        description: "process id to load process definition"
        required: true
        type: "string"
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              processes:
              - associatedEntities: null
                serviceTasks: null
                processVariables: null
                reusableSubProcesses: null
                process-id: "Employee_Rostering.Process1"
                process-name: "Process1"
                process-version: "1.0"
                package: "employeerostering.employeerostering"
                container-id: "employee-rostering"
                dynamic: false
          schema:
            $ref: "#/definitions/process-definitions"
  /server/queries/containers/{containerId}/processes/definitions/{processId}:
    get:
      tags:
      - "Process queries"
      summary: "Returns information about a specified process definition in a specified\
        \ KIE container."
      description: ""
      operationId: "getProcessesByDeploymentIdProcessId"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that process definition belongs to"
        required: true
        type: "string"
      - name: "processId"
        in: "path"
        description: "process id to load process definition"
        required: true
        type: "string"
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              associatedEntities:
                Qualify:
                - "approver"
                Final Approval:
                - "manager"
                Correct Data:
                - "broker"
                Increase Down Payment:
                - "broker"
              serviceTasks: {}
              processVariables:
                inlimit: "Boolean"
                application: "com.myspace.mortgage_app.Application"
                incdownpayment: "Boolean"
              reusableSubProcesses: []
              process-id: "Mortgage_Process.MortgageApprovalProcess"
              process-name: "MortgageApprovalProcess"
              process-version: "1.0"
              package: "com.myspace.mortgage_app"
              container-id: "mortgage-process_1.0.0-SNAPSHOT"
              dynamic: false
          schema:
            $ref: "#/definitions/process-definition"
  /server/queries/tasks/instances/workitem/{workItemId}:
    get:
      tags:
      - "Process queries"
      summary: "Returns task instances with a specified work item."
      description: ""
      operationId: "getTaskByWorkItemId"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "workItemId"
        in: "path"
        description: "work item id to load task associated with"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task not found for given work item id"
        "200":
          description: "Successful response"
          examples:
            application/json:
              task-id: 1
              task-priority: 0
              task-name: "Self Evaluation"
              task-subject: null
              task-description: "Please perform a self-evalutation."
              task-type: null
              task-form: null
              task-status: "Ready"
              task-actual-owner: "kiesu"
              task-created-by: "Jane"
              task-created-on:
                java.util.Date: 1539623679113
              task-activation-time:
                java.util.Date: 1539623679113
              task-expiration-time: null
              task-skippable: null
              task-workitem-id: null
              task-process-instance-id: 4
              task-parent-id: null
              task-process-id: "Mortgage_Process.MortgageApprovalProcess"
              task-container-id: "mortgage-process_1.0.0-SNAPSHOT"
              task-pot-owners: "Jane"
              task-excl-owners: null
              task-business-admins: "John"
              task-input-data: null
              task-output-data: null
          schema:
            $ref: "#/definitions/task-instance"
  /server/queries/tasks/instances/{taskInstanceId}:
    get:
      tags:
      - "Process queries"
      summary: "Returns information about a specified task instance."
      description: ""
      operationId: "getTaskById"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "taskInstanceId"
        in: "path"
        description: "task id to load task instance"
        required: true
        type: "integer"
        format: "int64"
      - name: "withSLA"
        in: "query"
        description: "optional include SLA data - defaults to false"
        required: false
        type: "boolean"
        default: false
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task not found for given id"
        "200":
          description: "Successful response"
          examples:
            application/json:
              task-id: 1
              task-priority: 0
              task-name: "Self Evaluation"
              task-subject: null
              task-description: "Please perform a self-evalutation."
              task-type: null
              task-form: null
              task-status: "Ready"
              task-actual-owner: "kiesu"
              task-created-by: "Jane"
              task-created-on:
                java.util.Date: 1539623679113
              task-activation-time:
                java.util.Date: 1539623679113
              task-expiration-time: null
              task-skippable: null
              task-workitem-id: null
              task-process-instance-id: 4
              task-parent-id: null
              task-process-id: "Mortgage_Process.MortgageApprovalProcess"
              task-container-id: "mortgage-process_1.0.0-SNAPSHOT"
              task-pot-owners: "Jane"
              task-excl-owners: null
              task-business-admins: "John"
              task-input-data: null
              task-output-data: null
          schema:
            $ref: "#/definitions/task-instance"
  /server/queries/tasks/instances/admins:
    get:
      tags:
      - "Process queries"
      summary: "Returns task instances assigned to business administrators."
      description: ""
      operationId: "getTasksAssignedAsBusinessAdministratorByStatus"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "status"
        in: "query"
        description: "optional task status (Created, Ready, Reserved, InProgress,\
          \ Suspended, Completed, Failed, Error, Exited, Obsolete)"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "Created"
          - "Ready"
          - "Reserved"
          - "InProgress"
          - "Suspended"
          - "Completed"
          - "Failed"
          - "Error"
          - "Exited"
          - "Obsolete"
        collectionFormat: "multi"
      - name: "user"
        in: "query"
        description: "optional user id to be used instead of authenticated user -\
          \ only when bypass authenticated user is enabled"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      - name: "sort"
        in: "query"
        description: "optional sort column, no default"
        required: false
        type: "string"
      - name: "sortOrder"
        in: "query"
        description: "optional sort direction (asc, desc) - defaults to asc"
        required: false
        type: "boolean"
        default: true
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              task-summary:
              - task-id: "2"
                task-name: "Self Evaluation"
                task-subject: ""
                task-description: "Please perform a self-evalutation."
                task-status: "Ready"
                task-priority: "0"
                task-is-skippable: "false"
                task-created-by: "John"
                task-created-on: "2016-04-05T15:09:14.206+02:00"
                task-activation-time: "2016-04-05T15:09:14.206+02:00"
                task-proc-inst-id: "2"
                task-proc-def-id: "evaluation"
                task-container-id: "myContainer"
                task-parent-id: "-1"
              - task-id: "1"
                task-name: "Self Evaluation"
                task-subject: ""
                task-description: "Please perform a self-evalutation."
                task-status: "InProgress"
                task-priority: "0"
                task-is-skippable: "false"
                task-actual-owner: "kiesu"
                task-created-by: "John"
                task-created-on: "2016-04-05T15:05:06.508+02:00"
                task-activation-time: "2016-04-05T15:05:06.508+02:00"
                task-proc-inst-id: "1"
                task-proc-def-id: "evaluation"
                task-container-id: "myContainer"
                task-parent-id: "-1"
          schema:
            $ref: "#/definitions/task-summary-list"
  /server/queries/processes/instances/{processInstanceId}/variables/instances:
    get:
      tags:
      - "Process queries"
      summary: "Returns current variable values of a specified process instance."
      description: ""
      operationId: "getVariablesCurrentState_1"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "processInstanceId"
        in: "path"
        description: "process instance id to load variables current state (latest\
          \ value) for"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              variable-instance:
              - name: "initiator"
                old-value: ""
                value: "baAdmin"
                process-instance-id: 2
                modification-date:
                  java.util.Date: 1539610491992
              - name: "application"
                old-value: "com.myspace.mortgage_app.Application@bd449b3"
                value: "com.myspace.mortgage_app.Application@bd449b3"
                process-instance-id: 2
                modification-date:
                  java.util.Date: 1539610492006
          schema:
            $ref: "#/definitions/variable-instance-list"
  /server/queries/tasks/instances/pot-owners:
    get:
      tags:
      - "Process queries"
      summary: "Returns tasks with a user defined as a potential owner."
      description: ""
      operationId: "getTasksAssignedAsPotentialOwner"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "status"
        in: "query"
        description: "optional task status (Created, Ready, Reserved, InProgress,\
          \ Suspended, Completed, Failed, Error, Exited, Obsolete)"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "Created"
          - "Ready"
          - "Reserved"
          - "InProgress"
          - "Suspended"
          - "Completed"
          - "Failed"
          - "Error"
          - "Exited"
          - "Obsolete"
        collectionFormat: "multi"
      - name: "groups"
        in: "query"
        description: "optional group names to include in the query"
        required: false
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      - name: "user"
        in: "query"
        description: "optional user id to be used instead of authenticated user -\
          \ only when bypass authenticated user is enabled"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      - name: "sort"
        in: "query"
        description: "optional sort column, no default"
        required: false
        type: "string"
      - name: "sortOrder"
        in: "query"
        description: "optional sort direction (asc, desc) - defaults to asc"
        required: false
        type: "boolean"
        default: true
      - name: "filter"
        in: "query"
        description: "optional custom filter for task data"
        required: false
        type: "string"
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              task-summary:
              - task-id: "2"
                task-name: "Self Evaluation"
                task-subject: ""
                task-description: "Please perform a self-evalutation."
                task-status: "Ready"
                task-priority: "0"
                task-is-skippable: "false"
                task-created-by: "John"
                task-created-on: "2016-04-05T15:09:14.206+02:00"
                task-activation-time: "2016-04-05T15:09:14.206+02:00"
                task-proc-inst-id: "2"
                task-proc-def-id: "evaluation"
                task-container-id: "myContainer"
                task-parent-id: "-1"
              - task-id: "1"
                task-name: "Self Evaluation"
                task-subject: ""
                task-description: "Please perform a self-evalutation."
                task-status: "InProgress"
                task-priority: "0"
                task-is-skippable: "false"
                task-actual-owner: "kiesu"
                task-created-by: "John"
                task-created-on: "2016-04-05T15:05:06.508+02:00"
                task-activation-time: "2016-04-05T15:05:06.508+02:00"
                task-proc-inst-id: "1"
                task-proc-def-id: "evaluation"
                task-container-id: "myContainer"
                task-parent-id: "-1"
          schema:
            $ref: "#/definitions/task-summary-list"
  /server/queries/tasks/instances/owners:
    get:
      tags:
      - "Process queries"
      summary: "Returns task instances that the querying user owns."
      description: ""
      operationId: "getTasksOwnedByStatus"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "status"
        in: "query"
        description: "optional task status (Created, Ready, Reserved, InProgress,\
          \ Suspended, Completed, Failed, Error, Exited, Obsolete)"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "Created"
          - "Ready"
          - "Reserved"
          - "InProgress"
          - "Suspended"
          - "Completed"
          - "Failed"
          - "Error"
          - "Exited"
          - "Obsolete"
        collectionFormat: "multi"
      - name: "user"
        in: "query"
        description: "optional user id to be used instead of authenticated user -\
          \ only when bypass authenticated user is enabled"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      - name: "sort"
        in: "query"
        description: "optional sort column, no default"
        required: false
        type: "string"
      - name: "sortOrder"
        in: "query"
        description: "optional sort direction (asc, desc) - defaults to asc"
        required: false
        type: "boolean"
        default: true
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              task-summary:
              - task-id: "2"
                task-name: "Self Evaluation"
                task-subject: ""
                task-description: "Please perform a self-evalutation."
                task-status: "Ready"
                task-priority: "0"
                task-is-skippable: "false"
                task-created-by: "John"
                task-created-on: "2016-04-05T15:09:14.206+02:00"
                task-activation-time: "2016-04-05T15:09:14.206+02:00"
                task-proc-inst-id: "2"
                task-proc-def-id: "evaluation"
                task-container-id: "myContainer"
                task-parent-id: "-1"
              - task-id: "1"
                task-name: "Self Evaluation"
                task-subject: ""
                task-description: "Please perform a self-evalutation."
                task-status: "InProgress"
                task-priority: "0"
                task-is-skippable: "false"
                task-actual-owner: "kiesu"
                task-created-by: "John"
                task-created-on: "2016-04-05T15:05:06.508+02:00"
                task-activation-time: "2016-04-05T15:05:06.508+02:00"
                task-proc-inst-id: "1"
                task-proc-def-id: "evaluation"
                task-container-id: "myContainer"
                task-parent-id: "-1"
          schema:
            $ref: "#/definitions/task-summary-list"
  /server/queries/tasks/instances/process/{processInstanceId}:
    get:
      tags:
      - "Process queries"
      summary: "Returns task instances associated with a specified process instance."
      description: ""
      operationId: "getTasksByStatusByProcessInstanceId"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "processInstanceId"
        in: "path"
        description: "process instance id to filter task instances"
        required: true
        type: "integer"
        format: "int64"
      - name: "status"
        in: "query"
        description: "optional task status (Created, Ready, Reserved, InProgress,\
          \ Suspended, Completed, Failed, Error, Exited, Obsolete)"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "Created"
          - "Ready"
          - "Reserved"
          - "InProgress"
          - "Suspended"
          - "Completed"
          - "Failed"
          - "Error"
          - "Exited"
          - "Obsolete"
        collectionFormat: "multi"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      - name: "sort"
        in: "query"
        description: "optional sort column, no default"
        required: false
        type: "string"
      - name: "sortOrder"
        in: "query"
        description: "optional sort direction (asc, desc) - defaults to asc"
        required: false
        type: "boolean"
        default: true
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              task-summary:
              - task-id: "2"
                task-name: "Self Evaluation"
                task-subject: ""
                task-description: "Please perform a self-evalutation."
                task-status: "Ready"
                task-priority: "0"
                task-is-skippable: "false"
                task-created-by: "John"
                task-created-on: "2016-04-05T15:09:14.206+02:00"
                task-activation-time: "2016-04-05T15:09:14.206+02:00"
                task-proc-inst-id: "2"
                task-proc-def-id: "evaluation"
                task-container-id: "myContainer"
                task-parent-id: "-1"
              - task-id: "1"
                task-name: "Self Evaluation"
                task-subject: ""
                task-description: "Please perform a self-evalutation."
                task-status: "InProgress"
                task-priority: "0"
                task-is-skippable: "false"
                task-actual-owner: "kiesu"
                task-created-by: "John"
                task-created-on: "2016-04-05T15:05:06.508+02:00"
                task-activation-time: "2016-04-05T15:05:06.508+02:00"
                task-proc-inst-id: "1"
                task-proc-def-id: "evaluation"
                task-container-id: "myContainer"
                task-parent-id: "-1"
          schema:
            $ref: "#/definitions/task-summary-list"
  /server/queries/tasks/instances:
    get:
      tags:
      - "Process queries"
      summary: "Returns all task instances."
      description: ""
      operationId: "getAllAuditTask"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "user"
        in: "query"
        description: "optional user id to be used instead of authenticated user -\
          \ only when bypass authenticated user is enabled"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      - name: "sort"
        in: "query"
        description: "optional sort column, no default"
        required: false
        type: "string"
      - name: "sortOrder"
        in: "query"
        description: "optional sort direction (asc, desc) - defaults to asc"
        required: false
        type: "boolean"
        default: true
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              task-summary:
              - task-id: "2"
                task-name: "Self Evaluation"
                task-subject: ""
                task-description: "Please perform a self-evalutation."
                task-status: "Ready"
                task-priority: "0"
                task-is-skippable: "false"
                task-created-by: "John"
                task-created-on: "2016-04-05T15:09:14.206+02:00"
                task-activation-time: "2016-04-05T15:09:14.206+02:00"
                task-proc-inst-id: "2"
                task-proc-def-id: "evaluation"
                task-container-id: "myContainer"
                task-parent-id: "-1"
              - task-id: "1"
                task-name: "Self Evaluation"
                task-subject: ""
                task-description: "Please perform a self-evalutation."
                task-status: "InProgress"
                task-priority: "0"
                task-is-skippable: "false"
                task-actual-owner: "kiesu"
                task-created-by: "John"
                task-created-on: "2016-04-05T15:05:06.508+02:00"
                task-activation-time: "2016-04-05T15:05:06.508+02:00"
                task-proc-inst-id: "1"
                task-proc-def-id: "evaluation"
                task-container-id: "myContainer"
                task-parent-id: "-1"
          schema:
            $ref: "#/definitions/task-summary-list"
  /server/queries/tasks/instances/variables/{varName}:
    get:
      tags:
      - "Process queries"
      summary: "Returns task instances with a specified variable."
      description: ""
      operationId: "getTasksByVariables"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "varName"
        in: "path"
        description: "name of the variable used to fiter tasks"
        required: true
        type: "string"
      - name: "varValue"
        in: "query"
        description: "value of the variable used to fiter tasks, optional when filtering\
          \ only by name, required when filtering by both name and value"
        required: false
        type: "string"
      - name: "status"
        in: "query"
        description: "optional task status (Created, Ready, Reserved, InProgress,\
          \ Suspended, Completed, Failed, Error, Exited, Obsolete)"
        required: false
        type: "array"
        items:
          type: "string"
          enum:
          - "Created"
          - "Ready"
          - "Reserved"
          - "InProgress"
          - "Suspended"
          - "Completed"
          - "Failed"
          - "Error"
          - "Exited"
          - "Obsolete"
        collectionFormat: "multi"
      - name: "user"
        in: "query"
        description: "optional user id to be used instead of authenticated user -\
          \ only when bypass authenticated user is enabled"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      - name: "sort"
        in: "query"
        description: "optional sort column, no default"
        required: false
        type: "string"
      - name: "sortOrder"
        in: "query"
        description: "optional sort direction (asc, desc) - defaults to asc"
        required: false
        type: "boolean"
        default: true
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              task-summary:
              - task-id: "2"
                task-name: "Self Evaluation"
                task-subject: ""
                task-description: "Please perform a self-evalutation."
                task-status: "Ready"
                task-priority: "0"
                task-is-skippable: "false"
                task-created-by: "John"
                task-created-on: "2016-04-05T15:09:14.206+02:00"
                task-activation-time: "2016-04-05T15:09:14.206+02:00"
                task-proc-inst-id: "2"
                task-proc-def-id: "evaluation"
                task-container-id: "myContainer"
                task-parent-id: "-1"
              - task-id: "1"
                task-name: "Self Evaluation"
                task-subject: ""
                task-description: "Please perform a self-evalutation."
                task-status: "InProgress"
                task-priority: "0"
                task-is-skippable: "false"
                task-actual-owner: "kiesu"
                task-created-by: "John"
                task-created-on: "2016-04-05T15:05:06.508+02:00"
                task-activation-time: "2016-04-05T15:05:06.508+02:00"
                task-proc-inst-id: "1"
                task-proc-def-id: "evaluation"
                task-container-id: "myContainer"
                task-parent-id: "-1"
          schema:
            $ref: "#/definitions/task-summary-list"
  /server/queries/variables/processes:
    post:
      tags:
      - "Process queries"
      summary: "Queries processes by variables and tasks"
      description: ""
      operationId: "queryProcessesByVariables"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - in: "body"
        name: "body"
        required: false
        schema:
          type: "string"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      - name: "orderBy"
        in: "query"
        description: "optional sort column"
        required: false
        type: "string"
      - name: "asc"
        in: "query"
        description: "optional sort direction - true ascending, false descending"
        required: false
        type: "boolean"
        default: true
      responses:
        "200":
          description: "successful operation"
          schema:
            $ref: "#/definitions/process-instance-custom-list"
  /server/queries/processes/{processId}/instances:
    get:
      tags:
      - "Process queries"
      summary: "Returns all process instances for a specified process."
      description: ""
      operationId: "getProcessInstancesByProcessId"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "processId"
        in: "path"
        description: "process id to filter process instance"
        required: true
        type: "string"
      - name: "status"
        in: "query"
        description: "optional process instance status (active, completed, aborted)\
          \ - defaults ot active (1) only"
        required: false
        type: "array"
        items:
          type: "integer"
          format: "int32"
          enum:
          - 1
          - 2
          - 3
        collectionFormat: "multi"
      - name: "initiator"
        in: "query"
        description: "optinal process instance initiator - user who started process\
          \ instance to filtr process instances"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      - name: "sort"
        in: "query"
        description: "optional sort column, no default"
        required: false
        type: "string"
      - name: "sortOrder"
        in: "query"
        description: "optional sort direction (asc, desc) - defaults to asc"
        required: false
        type: "boolean"
        default: true
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              process-instance:
              - process-instance-id: 1
                process-id: "Employee_Rostering.Process1"
                process-name: "Process1"
                process-version: "1.0"
                process-instance-state: 1
                container-id: "employee-rostering"
                initiator: "baAdmin"
                start-date:
                  java.util.Date: 1539184095041
                process-instance-desc: "Process1"
                correlation-key: "1"
                parent-instance-id: -1
                sla-compliance: 0
                sla-due-date: null
                active-user-tasks: null
                process-instance-variables: null
              - process-instance-id: 2
                process-id: "Employee_Rostering.Process2"
                process-name: "Process2"
                process-version: "1.0"
                process-instance-state: 1
                container-id: "employee-rostering"
                initiator: "baAdmin"
                start-date:
                  java.util.Date: 1539184303976
                process-instance-desc: "Process2"
                correlation-key: "2"
                parent-instance-id: -1
                sla-compliance: 0
                sla-due-date: null
                active-user-tasks: null
                process-instance-variables: null
          schema:
            $ref: "#/definitions/process-instance-list"
  /server/queries/containers/{containerId}/process/instances:
    get:
      tags:
      - "Process queries"
      summary: "Returns all process instances for a specified KIE container."
      description: ""
      operationId: "getProcessInstancesByDeploymentId_1"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id to filter process instance"
        required: true
        type: "string"
      - name: "status"
        in: "query"
        description: "optional process instance status (active, completed, aborted)\
          \ - defaults ot active (1) only"
        required: false
        type: "array"
        items:
          type: "integer"
          format: "int32"
          enum:
          - 1
          - 2
          - 3
        collectionFormat: "multi"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      - name: "sort"
        in: "query"
        description: "optional sort column, no default"
        required: false
        type: "string"
      - name: "sortOrder"
        in: "query"
        description: "optional sort direction (asc, desc) - defaults to asc"
        required: false
        type: "boolean"
        default: true
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Container Id not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              process-instance:
              - process-instance-id: 1
                process-id: "Employee_Rostering.Process1"
                process-name: "Process1"
                process-version: "1.0"
                process-instance-state: 1
                container-id: "employee-rostering"
                initiator: "baAdmin"
                start-date:
                  java.util.Date: 1539184095041
                process-instance-desc: "Process1"
                correlation-key: "1"
                parent-instance-id: -1
                sla-compliance: 0
                sla-due-date: null
                active-user-tasks: null
                process-instance-variables: null
              - process-instance-id: 2
                process-id: "Employee_Rostering.Process2"
                process-name: "Process2"
                process-version: "1.0"
                process-instance-state: 1
                container-id: "employee-rostering"
                initiator: "baAdmin"
                start-date:
                  java.util.Date: 1539184303976
                process-instance-desc: "Process2"
                correlation-key: "2"
                parent-instance-id: -1
                sla-compliance: 0
                sla-due-date: null
                active-user-tasks: null
                process-instance-variables: null
          schema:
            $ref: "#/definitions/process-instance-list"
  /server/queries/containers/{containerId}/process/instances/count:
    get:
      tags:
      - "Process queries"
      summary: "Returns the count of all process instances for a specified KIE container."
      description: ""
      operationId: "countProcessInstancesByDeploymentId"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id to filter process instance"
        required: true
        type: "string"
      - name: "status"
        in: "query"
        description: "optional process instance status (active, completed, aborted)\
          \ - defaults ot active (1) only"
        required: false
        type: "array"
        items:
          type: "integer"
          format: "int32"
          enum:
          - 1
          - 2
          - 3
        collectionFormat: "multi"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Container Id not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              count: 150
          schema:
            $ref: "#/definitions/count"
  /server/queries/processes/instance/correlation/{correlationKey}:
    get:
      tags:
      - "Process queries"
      summary: "Returns information about a single process instance with a specified\
        \ correlation key."
      description: ""
      operationId: "getProcessInstanceByCorrelationKey"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "correlationKey"
        in: "path"
        description: "correlation key associated with process instance"
        required: true
        type: "string"
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              process-instance-id: 1
              process-id: "Employee_Rostering.Process1"
              process-name: "Process1"
              process-version: "1.0"
              process-instance-state: 1
              container-id: "employee-rostering"
              initiator: "baAdmin"
              start-date:
                java.util.Date: 1539184095041
              process-instance-desc: "Process1"
              correlation-key: "1"
              parent-instance-id: -1
              sla-compliance: 0
              sla-due-date: null
              active-user-tasks: null
              process-instance-variables:
                initiator: "baAdmin"
          schema:
            $ref: "#/definitions/process-instance"
  /server/queries/processes/instances/correlation/{correlationKey}:
    get:
      tags:
      - "Process queries"
      summary: "Returns process instances with a specified correlation key."
      description: ""
      operationId: "getProcessInstancesByCorrelationKey"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "correlationKey"
        in: "path"
        description: "correlation key to filter process instance, can be given as\
          \ partial correlation key like in starts with approach"
        required: true
        type: "string"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      - name: "sort"
        in: "query"
        description: "optional sort column, no default"
        required: false
        type: "string"
      - name: "sortOrder"
        in: "query"
        description: "optional sort direction (asc, desc) - defaults to asc"
        required: false
        type: "boolean"
        default: true
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              process-instance:
              - process-instance-id: 1
                process-id: "Employee_Rostering.Process1"
                process-name: "Process1"
                process-version: "1.0"
                process-instance-state: 1
                container-id: "employee-rostering"
                initiator: "baAdmin"
                start-date:
                  java.util.Date: 1539184095041
                process-instance-desc: "Process1"
                correlation-key: "1"
                parent-instance-id: -1
                sla-compliance: 0
                sla-due-date: null
                active-user-tasks: null
                process-instance-variables: null
              - process-instance-id: 2
                process-id: "Employee_Rostering.Process2"
                process-name: "Process2"
                process-version: "1.0"
                process-instance-state: 1
                container-id: "employee-rostering"
                initiator: "baAdmin"
                start-date:
                  java.util.Date: 1539184303976
                process-instance-desc: "Process2"
                correlation-key: "2"
                parent-instance-id: -1
                sla-compliance: 0
                sla-due-date: null
                active-user-tasks: null
                process-instance-variables: null
          schema:
            $ref: "#/definitions/process-instance-list"
  /server/queries/processes/instances/variables/{varName}:
    get:
      tags:
      - "Process queries"
      summary: "Returns process instances with a specified variable."
      description: ""
      operationId: "getProcessInstanceByVariables"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "varName"
        in: "path"
        description: "variable name to filter process instance"
        required: true
        type: "string"
      - name: "varValue"
        in: "query"
        description: "variable value to filter process instance, optional when filtering\
          \ by name only required when filtering by name and value"
        required: false
        type: "string"
      - name: "status"
        in: "query"
        description: "optional process instance status (active, completed, aborted)\
          \ - defaults ot active (1) only"
        required: false
        type: "array"
        items:
          type: "integer"
          format: "int32"
          enum:
          - 1
          - 2
          - 3
        collectionFormat: "multi"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      - name: "sort"
        in: "query"
        description: "optional sort column, no default"
        required: false
        type: "string"
      - name: "sortOrder"
        in: "query"
        description: "optional sort direction (asc, desc) - defaults to asc"
        required: false
        type: "boolean"
        default: true
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              process-instance:
              - process-instance-id: 1
                process-id: "Employee_Rostering.Process1"
                process-name: "Process1"
                process-version: "1.0"
                process-instance-state: 1
                container-id: "employee-rostering"
                initiator: "baAdmin"
                start-date:
                  java.util.Date: 1539184095041
                process-instance-desc: "Process1"
                correlation-key: "1"
                parent-instance-id: -1
                sla-compliance: 0
                sla-due-date: null
                active-user-tasks: null
                process-instance-variables: null
              - process-instance-id: 2
                process-id: "Employee_Rostering.Process2"
                process-name: "Process2"
                process-version: "1.0"
                process-instance-state: 1
                container-id: "employee-rostering"
                initiator: "baAdmin"
                start-date:
                  java.util.Date: 1539184303976
                process-instance-desc: "Process2"
                correlation-key: "2"
                parent-instance-id: -1
                sla-compliance: 0
                sla-due-date: null
                active-user-tasks: null
                process-instance-variables: null
          schema:
            $ref: "#/definitions/process-instance-list"
  /server/queries/processes/instances/{processInstanceId}:
    get:
      tags:
      - "Process queries"
      summary: "Returns information about a specified process instance."
      description: ""
      operationId: "getProcessInstanceById"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "processInstanceId"
        in: "path"
        description: "process instance id to retrieve process instance"
        required: true
        type: "integer"
        format: "int64"
      - name: "withVars"
        in: "query"
        description: "load process instance variables or not, defaults to false"
        required: false
        type: "boolean"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Process instance id not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              process-instance-id: 1
              process-id: "Employee_Rostering.Process1"
              process-name: "Process1"
              process-version: "1.0"
              process-instance-state: 1
              container-id: "employee-rostering"
              initiator: "baAdmin"
              start-date:
                java.util.Date: 1539184095041
              process-instance-desc: "Process1"
              correlation-key: "1"
              parent-instance-id: -1
              sla-compliance: 0
              sla-due-date: null
              active-user-tasks: null
              process-instance-variables:
                initiator: "baAdmin"
          schema:
            $ref: "#/definitions/process-instance"
  /server/queries/processes/instances/{processInstanceId}/wi-nodes/instances/{workItemId}:
    get:
      tags:
      - "Process queries"
      summary: "Returns node instances for a specified work item in a specified process\
        \ instance."
      description: ""
      operationId: "getNodeInstanceForWorkItem"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "processInstanceId"
        in: "path"
        description: "process instance id that work item belongs to"
        required: true
        type: "integer"
        format: "int64"
      - name: "workItemId"
        in: "path"
        description: "work item id to retrieve node instance for"
        required: true
        type: "integer"
        format: "int64"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Node instance id not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              node-instance-id: 6
              node-name: "Correct Data"
              process-instance-id: 7
              work-item-id: 9
              container-id: "mortgage-process2"
              start-date:
                java.util.Date: 1539810634380
              node-id: "_011ED858-F841-4C44-B0F1-F3BE388ADDA5"
              node-type: "HumanTaskNode"
              node-connection: null
              node-completed: false
              reference-id: null
              sla-compliance: 0
              sla-due-date: null
          schema:
            $ref: "#/definitions/node-instance"
  /server/queries/processes/instances/{processInstanceId}/nodes/instances:
    get:
      tags:
      - "Process queries"
      summary: "Returns node instances for a specified process instance."
      description: ""
      operationId: "getProcessInstanceHistory_1"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "processInstanceId"
        in: "path"
        description: "process instance id to to retrive history for"
        required: true
        type: "integer"
        format: "int64"
      - name: "activeOnly"
        in: "query"
        description: "include active nodes only"
        required: false
        type: "boolean"
      - name: "completedOnly"
        in: "query"
        description: "include completed nodes only"
        required: false
        type: "boolean"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              node-instance:
              - node-instance-id: 1
                node-name: "Task"
                process-instance-id: 2
                work-item-id: 2
                container-id: "employee-rostering"
                start-date:
                  java.util.Date: 1539184095048
                node-id: "_5F8EED98-433C-4E7B-97BC-0E70615F13CB"
                node-type: "HumanTaskNode"
                node-connection: "_E89FEB0F-B8E1-4138-9DF0-397C9F9A6512"
                node-completed: false
                reference-id: null
                sla-compliance: 0
                sla-due-date: null
          schema:
            $ref: "#/definitions/node-instance-list"
  /server/queries/processes/instances:
    get:
      tags:
      - "Process queries"
      summary: "Returns all process instances filtered by optional parameters."
      description: ""
      operationId: "getProcessInstances_1"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "status"
        in: "query"
        description: "optional process instance status (active, completed, aborted)\
          \ - defaults ot active (1) only"
        required: false
        type: "array"
        items:
          type: "integer"
          format: "int32"
          enum:
          - 1
          - 2
          - 3
        collectionFormat: "multi"
      - name: "initiator"
        in: "query"
        description: "optional process instance initiator - user who started process\
          \ instance to filter process instances"
        required: false
        type: "string"
      - name: "processName"
        in: "query"
        description: "optional process name to filter process instances"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      - name: "sort"
        in: "query"
        description: "optional sort column, no default"
        required: false
        type: "string"
      - name: "sortOrder"
        in: "query"
        description: "optional sort direction (asc, desc) - defaults to asc"
        required: false
        type: "boolean"
        default: true
      responses:
        "500":
          description: "Unexpected error"
        "200":
          description: "Successful response"
          examples:
            application/json:
              process-instance:
              - process-instance-id: 1
                process-id: "Employee_Rostering.Process1"
                process-name: "Process1"
                process-version: "1.0"
                process-instance-state: 1
                container-id: "employee-rostering"
                initiator: "baAdmin"
                start-date:
                  java.util.Date: 1539184095041
                process-instance-desc: "Process1"
                correlation-key: "1"
                parent-instance-id: -1
                sla-compliance: 0
                sla-due-date: null
                active-user-tasks: null
                process-instance-variables: null
              - process-instance-id: 2
                process-id: "Employee_Rostering.Process2"
                process-name: "Process2"
                process-version: "1.0"
                process-instance-state: 1
                container-id: "employee-rostering"
                initiator: "baAdmin"
                start-date:
                  java.util.Date: 1539184303976
                process-instance-desc: "Process2"
                correlation-key: "2"
                parent-instance-id: -1
                sla-compliance: 0
                sla-due-date: null
                active-user-tasks: null
                process-instance-variables: null
          schema:
            $ref: "#/definitions/process-instance-list"
  /server/containers/{containerId}/tasks/{taskInstanceId}/states/exited:
    put:
      tags:
      - "Task instances"
      summary: "Exits a specified task instance."
      description: ""
      operationId: "exit"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of the task instance that should be exited"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "user"
        in: "query"
        description: "optional user id to be used instead of authenticated user -\
          \ only when bypass authenticated user is enabled"
        required: false
        type: "string"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task with given id not found"
  /server/containers/{containerId}/tasks/{taskInstanceId}:
    get:
      tags:
      - "Task instances"
      summary: "Returns information about a specified task instance."
      description: ""
      operationId: "getTask"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of the task instance that should be loaded"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "withInputData"
        in: "query"
        description: "optionally loads task input data"
        required: false
        type: "boolean"
      - name: "withOutputData"
        in: "query"
        description: "optionally loads task output data"
        required: false
        type: "boolean"
      - name: "withAssignments"
        in: "query"
        description: "optionally loads task people assignments"
        required: false
        type: "boolean"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task with given id not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              task-id: 1
              task-priority: 0
              task-name: "Self Evaluation"
              task-subject: null
              task-description: "Please perform a self-evalutation."
              task-type: null
              task-form: null
              task-status: "Ready"
              task-actual-owner: "kiesu"
              task-created-by: "Jane"
              task-created-on:
                java.util.Date: 1539623679113
              task-activation-time:
                java.util.Date: 1539623679113
              task-expiration-time: null
              task-skippable: null
              task-workitem-id: null
              task-process-instance-id: 4
              task-parent-id: null
              task-process-id: "Mortgage_Process.MortgageApprovalProcess"
              task-container-id: "mortgage-process_1.0.0-SNAPSHOT"
              task-pot-owners: "Jane"
              task-excl-owners: null
              task-business-admins: "John"
              task-input-data: null
              task-output-data: null
          schema:
            $ref: "#/definitions/task-instance"
    put:
      tags:
      - "Task instances"
      summary: "Updates information in a specified task instance."
      description: ""
      operationId: "update"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of the task instance that should be updated"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "user"
        in: "query"
        description: "optional user id to be used instead of authenticated user -\
          \ only when bypass authenticated user is enabled"
        required: false
        type: "string"
      - in: "body"
        name: "body"
        description: "task instance with updates as TaskInstance type"
        required: true
        schema:
          type: "string"
        x-examples:
          application/json: "{\n  \"task-id\" : null,\n  \"task-priority\" : 10,\n\
            \  \"task-name\" : \"Modified name\",\n  \"task-subject\" : null,\n  \"\
            task-description\" : \"Simple user task.\",\n  \"task-type\" : null,\n\
            \  \"task-form\" : null,\n  \"task-status\" : null,\n  \"task-actual-owner\"\
            \ : null,\n  \"task-created-by\" : null,\n  \"task-created-on\" : null,\n\
            \  \"task-activation-time\" : null,\n  \"task-expiration-time\" : {\n\
            \    \"java.util.Date\" : 1540025025627\n  },\n  \"task-skippable\" :\
            \ null,\n  \"task-workitem-id\" : null,\n  \"task-process-instance-id\"\
            \ : null,\n  \"task-parent-id\" : null,\n  \"task-process-id\" : null,\n\
            \  \"task-container-id\" : null,\n  \"task-pot-owners\" : null,\n  \"\
            task-excl-owners\" : null,\n  \"task-business-admins\" : null,\n  \"task-input-data\"\
            \ : {\n    \"added input\" : \"test\"\n  },\n  \"task-output-data\" :\
            \ {\n    \"person_\" : {\n      \"org.jbpm.data.Person\" : {\n       \
            \ \"name\" : \"mary\"\n      }\n    },\n    \"string_\" : \"my custom\
            \ data\"\n  }\n}"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<task-instance>\n    <task-priority>10</task-priority>\n    <task-name>Modified\
            \ name</task-name>\n    <task-description>Simple user task.</task-description>\n\
            \    <task-expiration-time>2018-10-20T10:43:45.273+02:00</task-expiration-time>\n\
            \    <inputData>\n        <entry>\n            <key>added input</key>\n\
            \            <value xsi:type=\"xs:string\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
            \ xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">test</value>\n\
            \        </entry>\n    </inputData>\n    <outputData>\n        <entry>\n\
            \            <key>person_</key>\n            <value xsi:type=\"person\"\
            \ xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">\n         \
            \       <name>mary</name>\n            </value>\n        </entry>\n  \
            \      <entry>\n            <key>string_</key>\n            <value xsi:type=\"\
            xs:string\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\" xmlns:xsi=\"\
            http://www.w3.org/2001/XMLSchema-instance\">my custom data</value>\n \
            \       </entry>\n    </outputData>\n</task-instance>"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task with given id not found"
  /server/containers/{containerId}/tasks/{taskInstanceId}/priority:
    put:
      tags:
      - "Task instances"
      summary: "Updates the priority of a specified task instance."
      description: ""
      operationId: "setPriority"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of the task instance where priority should be updated"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - in: "body"
        name: "body"
        description: "priority as Integer"
        required: true
        schema:
          type: "string"
        x-examples:
          application/json: "10"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<int-type>\n    <value>10</value>\n</int-type>"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task with given id not found"
  /server/containers/{containerId}/tasks/{taskInstanceId}/states/started:
    put:
      tags:
      - "Task instances"
      summary: "Starts a specified task instance."
      description: ""
      operationId: "start"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of the task instance that should be started"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "user"
        in: "query"
        description: "optional user id to be used instead of authenticated user -\
          \ only when bypass authenticated user is enabled"
        required: false
        type: "string"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task with given id not found"
  /server/containers/{containerId}/tasks/{taskInstanceId}/states/stopped:
    put:
      tags:
      - "Task instances"
      summary: "Stops a specified task instance."
      description: ""
      operationId: "stop"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of the task instance that should be stopped"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "user"
        in: "query"
        description: "optional user id to be used instead of authenticated user -\
          \ only when bypass authenticated user is enabled"
        required: false
        type: "string"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task with given id not found"
  /server/containers/{containerId}/tasks/{taskInstanceId}/states/suspended:
    put:
      tags:
      - "Task instances"
      summary: "Suspends a specified task instance."
      description: ""
      operationId: "suspend"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of the task instance that should be suspended"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "user"
        in: "query"
        description: "optional user id to be used instead of authenticated user -\
          \ only when bypass authenticated user is enabled"
        required: false
        type: "string"
      - in: "body"
        name: "body"
        description: "optional map to pass parameters to suspend. e.g suspendUntil"
        required: false
        schema:
          type: "string"
        x-examples:
          application/json: "{\n    \"age\": 25,\n    \"person\": {\n        \"Person\"\
            : {\n            \"name\": \"john\"\n        }\n    }\n}"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<map-type>\n    <entries>\n        <entry>\n            <key>age</key>\n\
            \            <value xsi:type=\"xs:int\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
            \n                    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
            >25</value>\n        </entry>\n        <entry>\n            <key>person</key>\n\
            \            <value xsi:type=\"person\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
            >\n                <name>john</name>\n            </value>\n        </entry>\n\
            \    </entries>\n</map-type>"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task with given id not found"
  /server/containers/{containerId}/tasks/{taskInstanceId}/states/resumed:
    put:
      tags:
      - "Task instances"
      summary: "Resumes a specified task instance."
      description: ""
      operationId: "resume"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of the task instance that should be resumed"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "user"
        in: "query"
        description: "optional user id to be used instead of authenticated user -\
          \ only when bypass authenticated user is enabled"
        required: false
        type: "string"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task with given id not found"
  /server/containers/{containerId}/tasks/{taskInstanceId}/name:
    put:
      tags:
      - "Task instances"
      summary: "Updates the name of a specified task instance."
      description: ""
      operationId: "setName"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of the task instance where name should be updated"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - in: "body"
        name: "body"
        description: "name as String"
        required: true
        schema:
          type: "string"
        x-examples:
          application/json: "\"Simple user task.\""
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<string-type>\n    <value>Simple user task.</value>\n</string-type>"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task with given id not found"
  /server/containers/{containerId}/tasks/{taskInstanceId}/states/failed:
    put:
      tags:
      - "Task instances"
      summary: "Fails a specified task instance."
      description: ""
      operationId: "fail"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of the task instance that should be failed"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "user"
        in: "query"
        description: "optional user id to be used instead of authenticated user -\
          \ only when bypass authenticated user is enabled"
        required: false
        type: "string"
      - in: "body"
        name: "body"
        description: "optional map of output variables"
        required: false
        schema:
          type: "string"
        x-examples:
          application/json: "{\n    \"age\": 25,\n    \"person\": {\n        \"Person\"\
            : {\n            \"name\": \"john\"\n        }\n    }\n}"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<map-type>\n    <entries>\n        <entry>\n            <key>age</key>\n\
            \            <value xsi:type=\"xs:int\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
            \n                    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
            >25</value>\n        </entry>\n        <entry>\n            <key>person</key>\n\
            \            <value xsi:type=\"person\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
            >\n                <name>john</name>\n            </value>\n        </entry>\n\
            \    </entries>\n</map-type>"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task with given id not found"
  /server/containers/{containerId}/tasks/{taskInstanceId}/states/skipped:
    put:
      tags:
      - "Task instances"
      summary: "Skips a specified task instance within the sequence of tasks in the\
        \ process instance"
      description: ""
      operationId: "skip"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of the task instance that should be skipped"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "user"
        in: "query"
        description: "optional user id to be used instead of authenticated user -\
          \ only when bypass authenticated user is enabled"
        required: false
        type: "string"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task with given id not found"
  /server/containers/{containerId}/tasks/{taskInstanceId}/states/released:
    put:
      tags:
      - "Task instances"
      summary: "Releases a specified task instance from being claimed by the task\
        \ owner."
      description: ""
      operationId: "release"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of the task instance that should be released"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "user"
        in: "query"
        description: "optional user id to be used instead of authenticated user -\
          \ only when bypass authenticated user is enabled"
        required: false
        type: "string"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task with given id not found"
        "403":
          description: "User was unable to execute current operation on task with\
            \ given id due to a no 'current status' match or insufficient permissions"
  /server/containers/{containerId}/tasks/{taskInstanceId}/states/completed:
    put:
      tags:
      - "Task instances"
      summary: "Completes a specified task instance."
      description: ""
      operationId: "complete"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of the task instance that should be completed"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "user"
        in: "query"
        description: "optional user id to be used instead of authenticated user -\
          \ only when bypass authenticated user is enabled"
        required: false
        type: "string"
      - name: "auto-progress"
        in: "query"
        description: "optional flag that allows to directlu claim and start task (if\
          \ needed) before completion"
        required: false
        type: "boolean"
      - in: "body"
        name: "body"
        description: "optional map of output variables"
        required: false
        schema:
          type: "string"
        x-examples:
          application/json: "{\n    \"age\": 25,\n    \"person\": {\n        \"Person\"\
            : {\n            \"name\": \"john\"\n        }\n    }\n}"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<map-type>\n    <entries>\n        <entry>\n            <key>age</key>\n\
            \            <value xsi:type=\"xs:int\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
            \n                    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
            >25</value>\n        </entry>\n        <entry>\n            <key>person</key>\n\
            \            <value xsi:type=\"person\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
            >\n                <name>john</name>\n            </value>\n        </entry>\n\
            \    </entries>\n</map-type>"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task with given id not found"
        "403":
          description: "User was unable to execute current operation on task with\
            \ given id due to a no 'current status' match or insufficient permissions"
  /server/containers/{containerId}/tasks/{taskInstanceId}/states/delegated:
    put:
      tags:
      - "Task instances"
      summary: "Delegates a specified task instance to a specified target user as\
        \ the new task owner."
      description: ""
      operationId: "delegate"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of the task instance that should be delegated"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "user"
        in: "query"
        description: "optional user id to be used instead of authenticated user -\
          \ only when bypass authenticated user is enabled"
        required: false
        type: "string"
      - name: "targetUser"
        in: "query"
        description: "user that task should be dalegated to"
        required: true
        type: "string"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task with given id not found"
        "403":
          description: "User was unable to execute current operation on task with\
            \ given id due to a no 'current status' match or insufficient permissions"
  /server/containers/{containerId}/tasks/{taskInstanceId}/states/activated:
    put:
      tags:
      - "Task instances"
      summary: "Activates a specified task instance to be progressed."
      description: ""
      operationId: "activate"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of the task instance that should be activated"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "user"
        in: "query"
        description: "optional user id to be used instead of authenticated user -\
          \ only when bypass authenticated user is enabled"
        required: false
        type: "string"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task with given id not found"
  /server/containers/{containerId}/tasks/{taskInstanceId}/states/forwarded:
    put:
      tags:
      - "Task instances"
      summary: "Forwards a specified task instance to a specified target user for\
        \ review or for suggested delegation."
      description: ""
      operationId: "forward"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of the task instance that should be forwarded"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "user"
        in: "query"
        description: "optional user id to be used instead of authenticated user -\
          \ only when bypass authenticated user is enabled"
        required: false
        type: "string"
      - name: "targetUser"
        in: "query"
        description: "user that the task should be forwarded to"
        required: true
        type: "string"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task with given id not found"
        "403":
          description: "User was unable to execute current operation on task with\
            \ given id due to a no 'current status' match or insufficient permissions"
  /server/containers/{containerId}/tasks/{taskInstanceId}/comments:
    get:
      tags:
      - "Task instances"
      summary: "Returns all comments in a specified task instance."
      description: ""
      operationId: "getCommentsByTaskId"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of the task instance that comments should be loaded\
          \ for"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task with given id not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              task-comment:
              - comment-id: 1
                comment: "Ensure that this self evaluation is completed before the\
                  \ HR and PM evaluations."
                comment-added-by: "baAdmin"
                comment-added-at:
                  java.util.Date: 1540238822132
              - comment-id: 2
                comment: "Task must be assigned to administrator."
                comment-added-by: "baAdmin"
                comment-added-at:
                  java.util.Date: 1540238822140
          schema:
            $ref: "#/definitions/task-comment-list"
    post:
      tags:
      - "Task instances"
      summary: "Adds a comment to a specified task instance and returns the ID of\
        \ the new comment."
      description: ""
      operationId: "addComment_1"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of the task instance that comment should be added\
          \ to"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - in: "body"
        name: "body"
        description: "comment data as TaskComment"
        required: true
        schema:
          type: "string"
        x-examples:
          application/json: "{\n  \"comment-id\" : null,\n  \"comment\" : \"First\
            \ comment.\",\n  \"comment-added-by\" : \"yoda\",\n  \"comment-added-at\"\
            \ : {\n    \"java.util.Date\" : 1539939094774\n  }\n}"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<task-comment>\n    <comment>First comment.</comment>\n    <comment-added-by>yoda</comment-added-by>\n\
            \    <comment-added-at>2018-10-19T10:51:34.405+02:00</comment-added-at>\n\
            </task-comment>"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task with given id not found"
        "201":
          description: "Successful response"
          examples:
            application/json: 10
          schema:
            type: "integer"
            format: "int64"
  /server/containers/{containerId}/tasks/{taskInstanceId}/description:
    put:
      tags:
      - "Task instances"
      summary: "Updates the description of a specified task instance."
      description: ""
      operationId: "setDescription"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of the task instance where description should be\
          \ updated"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - in: "body"
        name: "body"
        description: "description as String"
        required: true
        schema:
          type: "string"
        x-examples:
          application/json: "\"Simple user task.\""
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<string-type>\n    <value>Simple user task.</value>\n</string-type>"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task with given id not found"
  /server/containers/{containerId}/tasks/states/claimed:
    post:
      tags:
      - "Task instances"
      summary: "Claims (reserves) multiple task instances for the user sending the\
        \ request"
      description: ""
      operationId: "claimBulk"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskId"
        in: "query"
        description: "identifiers of the task instances that should be claimed"
        required: true
        type: "array"
        items:
          type: "integer"
          format: "int64"
        collectionFormat: "multi"
        x-example: "taskId=1&taskId=2&taskId=3"
      - name: "user"
        in: "query"
        description: "optional user id to be used instead of authenticated user -\
          \ only when bypass authenticated user is enabled"
        required: false
        type: "string"
      responses:
        "500":
          description: "Unexpected error"
        "403":
          description: "User was unable to execute current operation on task with\
            \ given id due to a no 'current status' match or insufficient permissions"
  /server/containers/{containerId}/tasks/{taskInstanceId}/states/nominated:
    put:
      tags:
      - "Task instances"
      summary: "Nominates one or more potential owners to whom the task instance should\
        \ be assigned."
      description: ""
      operationId: "nominate"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of the task instance that should be nominated"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "user"
        in: "query"
        description: "optional user id to be used instead of authenticated user -\
          \ only when bypass authenticated user is enabled"
        required: false
        type: "string"
      - name: "potOwner"
        in: "query"
        description: "list of users that the task should be nominated to"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task with given id not found"
        "403":
          description: "User was unable to execute current operation on task with\
            \ given id due to a no 'current status' match or insufficient permissions"
  /server/containers/{containerId}/tasks/{taskInstanceId}/expiration:
    put:
      tags:
      - "Task instances"
      summary: "Updates the expiration date for a specified task instance."
      description: ""
      operationId: "setExpirationDate"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of the task instance where expiration date should\
          \ be updated"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - in: "body"
        name: "body"
        description: "expiration date as Date"
        required: true
        schema:
          type: "string"
        x-examples:
          application/json: "{\n  \"java.util.Date\" : 1540025263987\n}"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<date-type>\n    <value>2018-10-20T10:47:43.607+02:00</value>\n\
            </date-type>"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task with given id not found"
  /server/containers/{containerId}/tasks/{taskInstanceId}/skipable:
    put:
      tags:
      - "Task instances"
      summary: "Marks a specified task instance that can be skipped in a sequence\
        \ of tasks."
      description: ""
      operationId: "setSkipable"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of the task instance where skipable flag should be\
          \ updated"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - in: "body"
        name: "body"
        description: "skipable flag as Boolean"
        required: true
        schema:
          type: "string"
        x-examples:
          application/json: "false"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<boolean-type>\n    <value>false</value>\n</boolean-type>"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task with given id not found"
  /server/containers/{containerId}/tasks/{taskInstanceId}/contents/output:
    get:
      tags:
      - "Task instances"
      summary: "Returns output data for a specified task instance."
      description: ""
      operationId: "getTaskOutputContentByTaskId"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of the task instance that output data should be loaded\
          \ from"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task with given id not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              application:
                com.myspace.mortgage_app.Application:
                  applicant:
                    com.myspace.mortgage_app.Applicant:
                      name: ""
                      annualincome: 0
                      address: null
                      ssn: 0
                      creditrating: null
                  property:
                    com.myspace.mortgage_app.Property:
                      age: 0
                      address: ""
                      locale: ""
                      saleprice: 0
                  downpayment: 0
                  amortization: 0
                  mortgageamount: null
              initiator: "baAdmin"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
    put:
      tags:
      - "Task instances"
      summary: "Adds output data to a specified task instance and returns the ID of\
        \ the new output content."
      description: ""
      operationId: "saveContent"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of the task instance that data should be saved into"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "user"
        in: "query"
        description: "optional user id to be used instead of authenticated user -\
          \ only when bypass authenticated user is enabled"
        required: false
        type: "string"
      - in: "body"
        name: "body"
        description: "output data to be saved as Map "
        required: true
        schema:
          type: "string"
        x-examples:
          application/json: "{\n    \"age\": 25,\n    \"person\": {\n        \"Person\"\
            : {\n            \"name\": \"john\"\n        }\n    }\n}"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<map-type>\n    <entries>\n        <entry>\n            <key>age</key>\n\
            \            <value xsi:type=\"xs:int\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
            \n                    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
            >25</value>\n        </entry>\n        <entry>\n            <key>person</key>\n\
            \            <value xsi:type=\"person\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
            >\n                <name>john</name>\n            </value>\n        </entry>\n\
            \    </entries>\n</map-type>"
      responses:
        "500":
          description: "Unexpected error"
        "403":
          description: "User is not allowed to perform the operation"
        "404":
          description: "Task with given id not found"
  /server/containers/{containerId}/tasks/{taskInstanceId}/contents/input:
    get:
      tags:
      - "Task instances"
      summary: "Returns input data for a specified task instance."
      description: ""
      operationId: "getTaskInputContentByTaskId"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of the task instance that input data should be loaded\
          \ from"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task with given id not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              application:
                com.myspace.mortgage_app.Application:
                  applicant:
                    com.myspace.mortgage_app.Applicant:
                      name: ""
                      annualincome: 0
                      address: null
                      ssn: 0
                      creditrating: null
                  property:
                    com.myspace.mortgage_app.Property:
                      age: 0
                      address: ""
                      locale: ""
                      saleprice: 0
                  downpayment: 0
                  amortization: 0
                  mortgageamount: null
              initiator: "baAdmin"
          schema:
            type: "object"
            additionalProperties:
              type: "object"
  /server/containers/{containerId}/tasks/{taskInstanceId}/contents/{contentId}:
    delete:
      tags:
      - "Task instances"
      summary: "Deletes output data by content ID from a specified task instance."
      description: ""
      operationId: "deleteContent"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of the task instance that content belongs to"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "contentId"
        in: "path"
        description: "identifier of the content to be deleted"
        required: true
        type: "integer"
        format: "int64"
        x-example: 567
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task with given id not found"
  /server/containers/{containerId}/tasks/{taskInstanceId}/comments/{commentId}:
    get:
      tags:
      - "Task instances"
      summary: "Returns a specified comment from a specified task instance."
      description: ""
      operationId: "getCommentById"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of the task instance that comment belongs to"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "commentId"
        in: "path"
        description: "identifier of the comment to be loaded"
        required: true
        type: "integer"
        format: "int64"
        x-example: 567
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task with given id not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              comment-id: null
              comment: "First comment."
              comment-added-by: "yoda"
              comment-added-at:
                java.util.Date: 1539939094774
          schema:
            $ref: "#/definitions/task-comment"
    delete:
      tags:
      - "Task instances"
      summary: "Deletes a specified comment from a specified task instance."
      description: ""
      operationId: "deleteComment"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of the task instance that comment belongs to"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "commentId"
        in: "path"
        description: "identifier of the comment to be deleted"
        required: true
        type: "integer"
        format: "int64"
        x-example: 567
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task with given id not found"
  /server/containers/{containerId}/tasks/{taskInstanceId}/attachments/{attachmentId}:
    get:
      tags:
      - "Task instances"
      summary: "Returns information about a specified attachment for a specified task\
        \ instance."
      description: ""
      operationId: "getAttachmentById"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of the task instance that attachment belongs to"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "attachmentId"
        in: "path"
        description: "identifier of the attachment to be loaded"
        required: true
        type: "integer"
        format: "int64"
        x-example: 567
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task with given id not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              Person:
                name: "john"
          schema:
            $ref: "#/definitions/task-attachment"
    delete:
      tags:
      - "Task instances"
      summary: "Deletes a specified attachment from a specified task instance."
      description: ""
      operationId: "deleteAttachment"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of the task instance that attachment belongs to"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "attachmentId"
        in: "path"
        description: "identifier of the attachment to be deleted"
        required: true
        type: "integer"
        format: "int64"
        x-example: 567
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task with given id not found"
  /server/containers/{containerId}/tasks/{taskInstanceId}/attachments/{attachmentId}/content:
    get:
      tags:
      - "Task instances"
      summary: "Returns the content of a specified attachment for a specified task\
        \ instance."
      description: ""
      operationId: "getAttachmentContentById"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of the task instance that attachment belongs to"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "attachmentId"
        in: "path"
        description: "identifier of the attachment that content should be loaded from"
        required: true
        type: "integer"
        format: "int64"
        x-example: 567
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task with given id not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              Person:
                name: "john"
          schema:
            type: "object"
  /server/containers/{containerId}/tasks/{taskInstanceId}/attachments:
    get:
      tags:
      - "Task instances"
      summary: "Returns all attachments for a specified task instance."
      description: ""
      operationId: "getAttachmentsByTaskId"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of the task instance that attachments should be loaded\
          \ for"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task with given id not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              task-attachment:
              - attachment-id: 1
                attachment-name: "Task Attachment"
                attachment-added-by: "baAdmin"
                attachment-added-at:
                  java.util.Date: 1540229715779
                attachment-type: "java.util.LinkedHashMap"
                attachment-size: 233
                attachment-content-id: 31
              - attachment-id: 2
                attachment-name: "Task Attachment 2"
                attachment-added-by: "baAdmin"
                attachment-added-at:
                  java.util.Date: 1540229715780
                attachment-type: "java.util.LinkedHashMap"
                attachment-size: 300
                attachment-content-id: 32
          schema:
            $ref: "#/definitions/task-attachment-list"
    post:
      tags:
      - "Task instances"
      summary: "Adds an attachment to a specified task instance and returns the ID\
        \ of the new attachment."
      description: ""
      operationId: "addAttachment"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of the task instance that attachment should be added\
          \ to"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "user"
        in: "query"
        description: "optional user id to be used instead of authenticated user -\
          \ only when bypass authenticated user is enabled"
        required: false
        type: "string"
      - name: "name"
        in: "query"
        description: "name of the attachment to be added"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "attachment content, any type can be provided"
        required: true
        schema:
          type: "string"
        x-examples:
          application/json: "{\n    \"Person\": {\n        \"name\": \"john\"\n  \
            \  }\n}"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<person>\n    <name>john</name>\n</person>"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task with given id not found"
        "201":
          description: "Successful response"
          examples:
            application/json: 10
          schema:
            type: "integer"
            format: "int64"
  /server/containers/{containerId}/tasks/{taskInstanceId}/events:
    get:
      tags:
      - "Task instances"
      summary: "Returns all events for a specified task instance."
      description: ""
      operationId: "getTaskEvents_1"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of the task instance that events should be loaded\
          \ for"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      - name: "sort"
        in: "query"
        description: "optional sort column, no default"
        required: false
        type: "string"
      - name: "sortOrder"
        in: "query"
        description: "optional sort direction (asc, desc) - defaults to asc"
        required: false
        type: "boolean"
        default: true
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task with given id not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              task-event-instance:
              - task-event-id: 4
                task-id: 4
                task-event-type: "STARTED"
                task-event-user: "Mortgage_Process.MortgageApprovalProcess"
                task-event-date:
                  java.util.Date: 1539623679130
                task-process-instance-id: 4
                task-work-item-id: 4
                task-event-message: null
          schema:
            $ref: "#/definitions/task-event-instance-list"
  /server/containers/{containerId}/tasks/{taskInstanceId}/states/claimed:
    put:
      tags:
      - "Task instances"
      summary: "Claims (reserves) a specified task instance for the user sending the\
        \ request."
      description: ""
      operationId: "claim"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of the task instance that should be claimed"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "user"
        in: "query"
        description: "optional user id to be used instead of authenticated user -\
          \ only when bypass authenticated user is enabled"
        required: false
        type: "string"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task with given id not found"
        "403":
          description: "User was unable to execute current operation on task with\
            \ given id due to a no 'current status' match or insufficient permissions"
  /server/admin/containers/{containerId}/processes/instances/{processInstanceId}/subprocess:
    put:
      tags:
      - "Process instance administration"
      summary: "Migrates a specified process instance with all subprocesses to process\
        \ definition in another KIE container."
      description: ""
      operationId: "migrateProcessInstanceWithSubprocess"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that process instances belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "processInstanceId"
        in: "path"
        description: "list of identifiers of process instance to be migrated"
        required: true
        type: "integer"
        format: "int64"
      - name: "targetContainerId"
        in: "query"
        description: "container id that new process definition belongs to"
        required: true
        type: "string"
      - name: "targetProcessId"
        in: "query"
        description: "process definition that process instances should be migrated\
          \ to"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "migration specifcation. It contains process mapping and node\
          \ mapping - unique ids of old definition to new definition given as Map"
        required: false
        schema:
          type: "string"
        x-examples:
          application/json: "{ MigrationSpecification {\n   {         sourceProcessId\
            \ : sourceProcessId, \n        targetProcessId : targetProcessId, \n \
            \       migration-nodes-map {\n            node1 : node2\n        }  \
            \ }\n}"
          application/xml: "<MigrationSpecification>\n   <MigrationProcessSpecification>\
            \         <sourceProcessId>sourceProcessId</sourceProcessId> \n      \
            \  <targetProcessId>targetProcessId</targetProcessId>, \n        <migration-nodes-map>\
            \                    <entry>\\n\" + \n                        <key>node\
            \ 1</key>\\n\" + \n                        <value xsi:type=\\\"xs:int\\\
            \" xmlns:xs=\\\"http://www.w3.org/2001/XMLSchema\\\"\\n \" +\n       \
            \                        xmlns:xsi=\\\"http://www.w3.org/2001/XMLSchema-instance\\\
            \">node 1 translate</value>\\n\" + \n                    </entry>\\n\"\
            \ + \n        </migration-nodes-map>\n   </MigrationProcessSpecification></MigrationSpecification>"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Container Id not found"
        "201":
          description: "Successful response"
          examples:
            application/json:
              migration-report-instance:
              - migration-successful: true
                migration-start: "2018-10-15T15:12:47.194Z"
                migration-end: "2018-10-15T15:13:17.202Z"
                migration-logs:
                - "15-Oct-2018 15:56:23: StartNode () - Human\n15-Oct-2018 15:56:23:\
                  \ Join () - System\n15-Oct-2018 15:56:23: RuleSetNode (Validation)\
                  \ - System\n15-Oct-2018 15:56:23: Split () - System\n15-Oct-2018\
                  \ 15:56:23: RuleSetNode (Retract Validation) - System\n15-Oct-2018\
                  \ 15:56:23: HumanTaskNode (Correct Data) - System\n15-Oct-2018 15:56:23:\
                  \ RuleSetNode (Retract Validation) Completed - System\n15-Oct-2018\
                  \ 15:56:23: Split () Completed - System\n15-Oct-2018 15:56:23: RuleSetNode\
                  \ (Validation) Completed - System\n15-Oct-2018 15:56:23: Join ()\
                  \ Completed - System\n15-Oct-2018 15:56:23: StartNode () Completed\
                  \ - System"
                migration-process-instance: 5
              - migration-successful: true
                migration-start: "2018-10-15T15:13:17.202Z"
                migration-end: "2018-10-15T15:13:47.194Z"
                migration-logs:
                - "15-Oct-2018 15:56:23: StartNode () - Human\n15-Oct-2018 15:56:23:\
                  \ Join () - System\n15-Oct-2018 15:56:23: RuleSetNode (Validation)\
                  \ - System\n15-Oct-2018 15:56:23: Split () - System\n15-Oct-2018\
                  \ 15:56:23: RuleSetNode (Retract Validation) - System\n15-Oct-2018\
                  \ 15:56:23: HumanTaskNode (Correct Data) - System\n15-Oct-2018 15:56:23:\
                  \ RuleSetNode (Retract Validation) Completed - System\n15-Oct-2018\
                  \ 15:56:23: Split () Completed - System\n15-Oct-2018 15:56:23: RuleSetNode\
                  \ (Validation) Completed - System\n15-Oct-2018 15:56:23: Join ()\
                  \ Completed - System\n15-Oct-2018 15:56:23: StartNode () Completed\
                  \ - System"
                migration-process-instance: 6
          schema:
            $ref: "#/definitions/migration-report-instance-list"
  /server/admin/containers/{containerId}/processes/instances/{processInstanceId}/nodeinstances/{nodeInstanceId}:
    put:
      tags:
      - "Process instance administration"
      summary: "Re-triggers a specified node instance for a specified process instance.\
        \ If the node is not active in the process instance, it becomes active upon\
        \ re-triggering."
      description: ""
      operationId: "retriggerNodeInstance"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that process instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "processInstanceId"
        in: "path"
        description: "identifier of process instance that node instance belongs to"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "nodeInstanceId"
        in: "path"
        description: "identifier of node instance that should be retriggered"
        required: true
        type: "integer"
        format: "int64"
        x-example: 567
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Process instance, node instance or Container Id not found"
    delete:
      tags:
      - "Process instance administration"
      summary: "Aborts a specified node instance within a specified process instance."
      description: ""
      operationId: "cancelNodeInstance"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that process instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "processInstanceId"
        in: "path"
        description: "identifier of process instance that node instance belongs to"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "nodeInstanceId"
        in: "path"
        description: "identifier of node instance that should be canceled"
        required: true
        type: "integer"
        format: "int64"
        x-example: 567
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Process instance, node instance or Container Id not found"
  /server/admin/containers/{containerId}/processes/instances/{processInstanceId}/nodes/{nodeId}:
    post:
      tags:
      - "Process instance administration"
      summary: "Triggers a specified node for a specified process instance. If the\
        \ node is not active in the process instance, it becomes active upon triggering."
      description: ""
      operationId: "triggerNode"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that process instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "processInstanceId"
        in: "path"
        description: "identifier of process instance where node should be triggered"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "nodeId"
        in: "path"
        description: "identifier of the node to be triggered"
        required: true
        type: "integer"
        format: "int64"
        x-example: 567
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Process instance, node instance or Container Id not found"
  /server/admin/containers/{containerId}/processes/instances/{processInstanceId}/timers:
    get:
      tags:
      - "Process instance administration"
      summary: "Returns all timers for a specified process instance."
      description: ""
      operationId: "getTimerInstances"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that process instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "processInstanceId"
        in: "path"
        description: "identifier of process instance that timer instances should be\
          \ collected for"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Container Id not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              timer-instance:
              - name: "MyTimer"
                id: 1
                activation-time: "2018-10-18T04:49:28.907Z"
                last-fire-time: "2018-10-18T04:49:28.907Z"
                next-fire-time: "2018-10-18T04:49:28.907Z"
                delay: 35000
                period: 500000
                repeat-limit: 2
                process-instance-id: 6
                session-id: 9
          schema:
            $ref: "#/definitions/timer-instance-list"
  /server/admin/containers/{containerId}/processes/instances/{processInstanceId}/nodeinstances:
    get:
      tags:
      - "Process instance administration"
      summary: "Returns all the active node instances in a specified process instance."
      description: ""
      operationId: "getActiveNodeInstances"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that process instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "processInstanceId"
        in: "path"
        description: "identifier of process instance that active nodes instances should\
          \ be collected for"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Process instance or Container Id not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              node-instance:
              - node-instance-id: 1
                node-name: "Task"
                process-instance-id: 2
                work-item-id: 2
                container-id: "employee-rostering"
                start-date:
                  java.util.Date: 1539184095048
                node-id: "_5F8EED98-433C-4E7B-97BC-0E70615F13CB"
                node-type: "HumanTaskNode"
                node-connection: "_E89FEB0F-B8E1-4138-9DF0-397C9F9A6512"
                node-completed: false
                reference-id: null
                sla-compliance: 0
                sla-due-date: null
          schema:
            $ref: "#/definitions/node-instance-list"
  /server/admin/containers/{containerId}/processes/errors/{errorId}:
    get:
      tags:
      - "Process instance administration"
      summary: "Returns information about a specified process execution error."
      description: ""
      operationId: "getExecutionErrorById"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that process error belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "errorId"
        in: "path"
        description: "identifier of error to be loaded"
        required: true
        type: "string"
        x-example: "xxx-yyy-zzz"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Process instance or Container Id not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              id: "a7982044-019d-4d4a-be3f-781f4ddca1df"
              type: "Process"
              container-id: "mortgage-process_1.0.0-SNAPSHOT"
              process-instance-id: 4
              process-id: "Mortgage_Process.MortgageApprovalProcess"
              activity-id: 12
              activity-name: "Validation"
              job-id: null
              error-msg: "[Mortgage_Process.MortgageApprovalProcess:4 - Validation:3]\
                \ -- [Mortgage_Process.MortgageApprovalProcess:4 - Validation:3] --\
                \ null"
              error: null
              acknowledged: false
              acknowledged-by: null
              acknowledged-at: null
              error-date: 1539627364193
          schema:
            $ref: "#/definitions/execution-error"
    put:
      tags:
      - "Process instance administration"
      summary: "Acknowledges a specified process execution error (sets acknowledged\
        \ to true for the error)."
      description: ""
      operationId: "acknowledgeError"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that error belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "errorId"
        in: "path"
        description: "identifier of error to be acknowledged"
        required: true
        type: "string"
        x-example: "xxx-yyy-zzz"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Execution error or Container Id not found"
  /server/admin/containers/{containerId}/processes/errors:
    get:
      tags:
      - "Process instance administration"
      summary: "Returns all process execution errors for a specified KIE container."
      description: ""
      operationId: "getExecutionErrors"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that errors belong to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "includeAck"
        in: "query"
        description: "optional flag that indicates if acknowledged errors should also\
          \ be collected, defaults to false"
        required: false
        type: "boolean"
        default: false
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      - name: "sort"
        in: "query"
        description: "optional sort column, no default"
        required: false
        type: "string"
      - name: "sortOrder"
        in: "query"
        description: "optional sort direction (asc, desc) - defaults to asc"
        required: false
        type: "boolean"
        default: true
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Process instance or Container Id not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              error-instance:
              - id: "54b04160-6242-475d-9452-0df3678123b0"
                type: "Process"
                container-id: "mortgage-process_1.0.0-SNAPSHOT"
                process-instance-id: 4
                process-id: "Mortgage_Process.MortgageApprovalProcess"
                activity-id: 12
                activity-name: "Validation"
                job-id: null
                error-msg: "[Mortgage_Process.MortgageApprovalProcess:4 - Validation:3]\
                  \ -- [Mortgage_Process.MortgageApprovalProcess:4 - Validation:3]\
                  \ -- null"
                error: null
                acknowledged: false
                acknowledged-by: null
                acknowledged-at: null
                error-date: 1539627373788
              - id: "a7982044-019d-4d4a-be3f-781f4ddca1df"
                type: "Process"
                container-id: "mortgage-process_1.0.0-SNAPSHOT"
                process-instance-id: 4
                process-id: "Mortgage_Process.MortgageApprovalProcess"
                activity-id: 12
                activity-name: "Validation"
                job-id: null
                error-msg: "[Mortgage_Process.MortgageApprovalProcess:4 - Validation:3]\
                  \ -- [Mortgage_Process.MortgageApprovalProcess:4 - Validation:3]\
                  \ -- null"
                error: null
                acknowledged: false
                acknowledged-by: null
                acknowledged-at: null
                error-date: 1539627364193
          schema:
            $ref: "#/definitions/execution-error-list"
    put:
      tags:
      - "Process instance administration"
      summary: "Acknowledges multiple process execution errors (sets acknowledged\
        \ to true for the errors)."
      description: ""
      operationId: "acknowledgeErrors"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that errors belong to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "errorId"
        in: "query"
        description: "list of error identifiers to be acknowledged"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
        x-example: "xxx-yyy-zzz"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Execution error or Container Id not found"
  /server/admin/containers/{containerId}/processes/instances/{processInstanceId}/errors:
    get:
      tags:
      - "Process instance administration"
      summary: "Returns all process execution errors for a specified process instance."
      description: ""
      operationId: "getExecutionErrorsByProcessInstance"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that process instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "processInstanceId"
        in: "path"
        description: "identifier of process instance that errors should be collected\
          \ for"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "includeAck"
        in: "query"
        description: "optional flag that indicates if acknowledged errors should also\
          \ be collected, defaults to false"
        required: false
        type: "boolean"
        default: false
      - name: "node"
        in: "query"
        description: "optional name of the node in the process instance to filter\
          \ by"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      - name: "sort"
        in: "query"
        description: "optional sort column, no default"
        required: false
        type: "string"
      - name: "sortOrder"
        in: "query"
        description: "optional sort direction (asc, desc) - defaults to asc"
        required: false
        type: "boolean"
        default: true
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Container Id not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              error-instance:
              - id: "54b04160-6242-475d-9452-0df3678123b0"
                type: "Process"
                container-id: "mortgage-process_1.0.0-SNAPSHOT"
                process-instance-id: 4
                process-id: "Mortgage_Process.MortgageApprovalProcess"
                activity-id: 12
                activity-name: "Validation"
                job-id: null
                error-msg: "[Mortgage_Process.MortgageApprovalProcess:4 - Validation:3]\
                  \ -- [Mortgage_Process.MortgageApprovalProcess:4 - Validation:3]\
                  \ -- null"
                error: null
                acknowledged: false
                acknowledged-by: null
                acknowledged-at: null
                error-date: 1539627373788
              - id: "a7982044-019d-4d4a-be3f-781f4ddca1df"
                type: "Process"
                container-id: "mortgage-process_1.0.0-SNAPSHOT"
                process-instance-id: 4
                process-id: "Mortgage_Process.MortgageApprovalProcess"
                activity-id: 12
                activity-name: "Validation"
                job-id: null
                error-msg: "[Mortgage_Process.MortgageApprovalProcess:4 - Validation:3]\
                  \ -- [Mortgage_Process.MortgageApprovalProcess:4 - Validation:3]\
                  \ -- null"
                error: null
                acknowledged: false
                acknowledged-by: null
                acknowledged-at: null
                error-date: 1539627364193
          schema:
            $ref: "#/definitions/execution-error-list"
  /server/admin/containers/{containerId}/processes/instances/{processInstanceId}/timers/{timerId}:
    put:
      tags:
      - "Process instance administration"
      summary: "Updates a specified timer for a specified process instance."
      description: ""
      operationId: "updateTimer"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that process instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "processInstanceId"
        in: "path"
        description: "identifier of process instance that timer belongs to"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "timerId"
        in: "path"
        description: "identifier of timer instance to be updated"
        required: true
        type: "integer"
        format: "int64"
        x-example: 99
      - name: "relative"
        in: "query"
        description: "optional flag that indicates if the time expression is relative\
          \ to the current date or not, defaults to true"
        required: false
        type: "boolean"
        default: true
      - in: "body"
        name: "body"
        description: "Map of timer expressions - deplay, perios and repeat are allowed\
          \ values in the map"
        required: true
        schema:
          type: "string"
        x-examples:
          application/json: "{\n  \"period\" : 0,\n  \"delay\" : 3,\n  \"repeatLimit\"\
            \ : 0\n}"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<map-type>\n    <entries>\n        <entry>\n            <key>period</key>\n\
            \            <value xsi:type=\"xs:long\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
            \ xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">0</value>\n\
            \        </entry>\n        <entry>\n            <key>delay</key>\n   \
            \         <value xsi:type=\"xs:long\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
            \ xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">3</value>\n\
            \        </entry>\n        <entry>\n            <key>repeatLimit</key>\n\
            \            <value xsi:type=\"xs:int\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
            \ xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\">0</value>\n\
            \        </entry>\n    </entries>\n</map-type>"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Process instance, node instance or Container Id not found"
  /server/admin/containers/{containerId}/processes/instances/{processInstanceId}/nodes:
    get:
      tags:
      - "Process instance administration"
      summary: "Returns all nodes in a specified process instance."
      description: ""
      operationId: "getNodes"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that process instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "processInstanceId"
        in: "path"
        description: "identifier of process instance that process nodes should be\
          \ collected from"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Process instance or Container Id not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              process-node:
              - name: ""
                id: 1
                type: "StartNode"
                process-id: "Mortgage_Process.MortgageApprovalProcess"
              - name: ""
                id: 2
                type: "Join"
                process-id: "Mortgage_Process.MortgageApprovalProcess"
              - name: "Validation"
                id: 3
                type: "RuleSetNode"
                process-id: "Mortgage_Process.MortgageApprovalProcess"
              - name: ""
                id: 4
                type: "Split"
                process-id: "Mortgage_Process.MortgageApprovalProcess"
              - name: "Retract Validation"
                id: 5
                type: "RuleSetNode"
                process-id: "Mortgage_Process.MortgageApprovalProcess"
              - name: "Correct Data"
                id: 6
                type: "HumanTaskNode"
                process-id: "Mortgage_Process.MortgageApprovalProcess"
              - name: "Mortgage Calculation"
                id: 7
                type: "RuleSetNode"
                process-id: "Mortgage_Process.MortgageApprovalProcess"
              - name: "Qualify"
                id: 8
                type: "HumanTaskNode"
                process-id: "Mortgage_Process.MortgageApprovalProcess"
              - name: ""
                id: 9
                type: "Split"
                process-id: "Mortgage_Process.MortgageApprovalProcess"
              - name: "Final Approval"
                id: 10
                type: "HumanTaskNode"
                process-id: "Mortgage_Process.MortgageApprovalProcess"
              - name: ""
                id: 11
                type: "EndNode"
                process-id: "Mortgage_Process.MortgageApprovalProcess"
              - name: "Increase Down Payment"
                id: 12
                type: "HumanTaskNode"
                process-id: "Mortgage_Process.MortgageApprovalProcess"
              - name: ""
                id: 13
                type: "Split"
                process-id: "Mortgage_Process.MortgageApprovalProcess"
              - name: ""
                id: 14
                type: "EndNode"
                process-id: "Mortgage_Process.MortgageApprovalProcess"
          schema:
            $ref: "#/definitions/process-node-list"
  /server/admin/containers/{containerId}/processes/instances/{processInstanceId}:
    put:
      tags:
      - "Process instance administration"
      summary: "Migrates a specified process instance to a process definition in another\
        \ KIE container."
      description: ""
      operationId: "migrateProcessInstance"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that process instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "processInstanceId"
        in: "path"
        description: "identifier of process instance to be migrated"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "targetContainerId"
        in: "query"
        description: "container id that new process definition belongs to"
        required: true
        type: "string"
      - name: "targetProcessId"
        in: "query"
        description: "process definition that process instance should be migrated\
          \ to"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "node mapping - unique ids of old definition to new definition\
          \ given as Map"
        required: false
        schema:
          type: "string"
        x-examples:
          application/json: "{\n    \"age\": 25,\n    \"name\": \"john\"\n}"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<map-type>\n    <entries>\n        <entry>\n            <key>age</key>\n\
            \            <value xsi:type=\"xs:int\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
            \n                    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
            >25</value>\n        </entry>\n        <entry>\n            <key>name</key>\n\
            \            <value xsi:type=\"xs:string\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
            \n                    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
            >john</value>\n        </entry>\n    </entries>\n</map-type>"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Container Id not found"
        "201":
          description: "Successful response"
          examples:
            application/json:
              migration-successful: true
              migration-start: "2018-10-15T15:12:47.194Z"
              migration-end: "2018-10-15T15:12:47.194Z"
              migration-logs:
              - "15-Oct-2018 15:56:23: StartNode () - Human\n15-Oct-2018 15:56:23:\
                \ Join () - System\n15-Oct-2018 15:56:23: RuleSetNode (Validation)\
                \ - System\n15-Oct-2018 15:56:23: Split () - System\n15-Oct-2018 15:56:23:\
                \ RuleSetNode (Retract Validation) - System\n15-Oct-2018 15:56:23:\
                \ HumanTaskNode (Correct Data) - System\n15-Oct-2018 15:56:23: RuleSetNode\
                \ (Retract Validation) Completed - System\n15-Oct-2018 15:56:23: Split\
                \ () Completed - System\n15-Oct-2018 15:56:23: RuleSetNode (Validation)\
                \ Completed - System\n15-Oct-2018 15:56:23: Join () Completed - System\n\
                15-Oct-2018 15:56:23: StartNode () Completed - System"
              migration-process-instance: 4
          schema:
            $ref: "#/definitions/migration-report-instance"
  /server/admin/containers/{containerId}/processes/instances:
    put:
      tags:
      - "Process instance administration"
      summary: "Migrates multiple process instances to process definition in another\
        \ KIE container."
      description: ""
      operationId: "migrateProcessInstances"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that process instances belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "processInstanceId"
        in: "query"
        description: "list of identifiers of process instance to be migrated"
        required: true
        type: "array"
        items:
          type: "integer"
          format: "int64"
        collectionFormat: "multi"
      - name: "targetContainerId"
        in: "query"
        description: "container id that new process definition belongs to"
        required: true
        type: "string"
      - name: "targetProcessId"
        in: "query"
        description: "process definition that process instances should be migrated\
          \ to"
        required: true
        type: "string"
      - in: "body"
        name: "body"
        description: "node mapping - unique ids of old definition to new definition\
          \ given as Map"
        required: false
        schema:
          type: "string"
        x-examples:
          application/json: "{\n    \"age\": 25,\n    \"name\": \"john\"\n}"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<map-type>\n    <entries>\n        <entry>\n            <key>age</key>\n\
            \            <value xsi:type=\"xs:int\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
            \n                    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
            >25</value>\n        </entry>\n        <entry>\n            <key>name</key>\n\
            \            <value xsi:type=\"xs:string\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
            \n                    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
            >john</value>\n        </entry>\n    </entries>\n</map-type>"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Container Id not found"
        "201":
          description: "Successful response"
          examples:
            application/json:
              migration-report-instance:
              - migration-successful: true
                migration-start: "2018-10-15T15:12:47.194Z"
                migration-end: "2018-10-15T15:13:17.202Z"
                migration-logs:
                - "15-Oct-2018 15:56:23: StartNode () - Human\n15-Oct-2018 15:56:23:\
                  \ Join () - System\n15-Oct-2018 15:56:23: RuleSetNode (Validation)\
                  \ - System\n15-Oct-2018 15:56:23: Split () - System\n15-Oct-2018\
                  \ 15:56:23: RuleSetNode (Retract Validation) - System\n15-Oct-2018\
                  \ 15:56:23: HumanTaskNode (Correct Data) - System\n15-Oct-2018 15:56:23:\
                  \ RuleSetNode (Retract Validation) Completed - System\n15-Oct-2018\
                  \ 15:56:23: Split () Completed - System\n15-Oct-2018 15:56:23: RuleSetNode\
                  \ (Validation) Completed - System\n15-Oct-2018 15:56:23: Join ()\
                  \ Completed - System\n15-Oct-2018 15:56:23: StartNode () Completed\
                  \ - System"
                migration-process-instance: 5
              - migration-successful: true
                migration-start: "2018-10-15T15:13:17.202Z"
                migration-end: "2018-10-15T15:13:47.194Z"
                migration-logs:
                - "15-Oct-2018 15:56:23: StartNode () - Human\n15-Oct-2018 15:56:23:\
                  \ Join () - System\n15-Oct-2018 15:56:23: RuleSetNode (Validation)\
                  \ - System\n15-Oct-2018 15:56:23: Split () - System\n15-Oct-2018\
                  \ 15:56:23: RuleSetNode (Retract Validation) - System\n15-Oct-2018\
                  \ 15:56:23: HumanTaskNode (Correct Data) - System\n15-Oct-2018 15:56:23:\
                  \ RuleSetNode (Retract Validation) Completed - System\n15-Oct-2018\
                  \ 15:56:23: Split () Completed - System\n15-Oct-2018 15:56:23: RuleSetNode\
                  \ (Validation) Completed - System\n15-Oct-2018 15:56:23: Join ()\
                  \ Completed - System\n15-Oct-2018 15:56:23: StartNode () Completed\
                  \ - System"
                migration-process-instance: 6
          schema:
            $ref: "#/definitions/migration-report-instance-list"
  /server/admin/containers/{containerId}/tasks/{taskInstanceId}/notifications:
    get:
      tags:
      - "Task instance administration"
      summary: "Returns notifications created for a specified task instance."
      description: ""
      operationId: "getTaskNotifications"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of task instance to be updated"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "activeOnly"
        in: "query"
        description: "optional flag that indicates if active only notifications should\
          \ be collected, defaults to true"
        required: false
        type: "boolean"
        default: true
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task instance or Container Id not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              task-notification:
              - id: 11070
                name: null
                notify-at: 1540396524172
                users:
                - "Sheldon"
                groups:
                - "IT"
                active: true
                subject: "You hava a task not started"
                content: "You have been assigned to a task (task-id ${taskId}).\n\
                  \  Important technical information that can be of use when working\
                  \ on it:\n    - process instance id - ${processInstanceId}\n  -\
                  \ work item id - ${workItemId}\n  - work item id - ${workItemId}\n\
                  \   Regards from dev team"
          schema:
            $ref: "#/definitions/task-notification-list"
    post:
      tags:
      - "Task instance administration"
      summary: "Creates an email notification for the specified task instance and\
        \ returns the ID of the new notification."
      description: ""
      operationId: "notify"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of task instance to be updated"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "expiresAt"
        in: "query"
        description: "time expression for notification"
        required: true
        type: "string"
      - name: "whenNotStarted"
        in: "query"
        description: "optional flag that indicates the type of notification, either\
          \ whenNotStarted or whenNotCompleted must be set"
        required: false
        type: "boolean"
        default: false
      - name: "whenNotCompleted"
        in: "query"
        description: "optional flag that indicates the type of notification, either\
          \ whenNotStarted or whenNotCompleted must be set"
        required: false
        type: "boolean"
        default: false
      - in: "body"
        name: "body"
        description: "email notification details, as EmailNotification type"
        required: true
        schema:
          type: "string"
        x-examples:
          application/json: "{\n  \"from\" : \"test@jbpm.org\",\n  \"reply-to\" :\
            \ \"no-reply@jbpm.org\",\n  \"users\" : [ \"john\" ],\n  \"emails\" :\
            \ [ \"emails@jbpm.org\" ],\n  \"groups\" : null,\n  \"subject\" : \"reminder\"\
            ,\n  \"body\" : \"my test content\"\n}"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<email-notification>\n    <from>test@jbpm.org</from>\n    <reply-to>no-reply@jbpm.org</reply-to>\n\
            \    <users>john</users>\n    <emails>email@jbpm.olrg</emails>    <subject>reminder</subject>\n\
            \    <body>my test content</body>\n</email-notification>"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task instance or Container Id not found"
        "201":
          description: "Successful response"
          examples:
            application/json: 10
          schema:
            type: "integer"
            format: "int64"
  /server/admin/containers/{containerId}/tasks/errors/{errorId}:
    get:
      tags:
      - "Task instance administration"
      summary: "Returns information about a specified task execution error."
      description: ""
      operationId: "getExecutionErrorById_1"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that error belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "errorId"
        in: "path"
        description: "identifier of the execution error to load"
        required: true
        type: "string"
        x-example: "xxx-yyy-zzz"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task instance or Container Id not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              id: "a7982044-019d-4d4a-be3f-781f4ddca1df"
              type: "Process"
              container-id: "mortgage-process_1.0.0-SNAPSHOT"
              process-instance-id: 4
              process-id: "Mortgage_Process.MortgageApprovalProcess"
              activity-id: 12
              activity-name: "Validation"
              job-id: null
              error-msg: "[Mortgage_Process.MortgageApprovalProcess:4 - Validation:3]\
                \ -- [Mortgage_Process.MortgageApprovalProcess:4 - Validation:3] --\
                \ null"
              error: null
              acknowledged: false
              acknowledged-by: null
              acknowledged-at: null
              error-date: 1539627364193
          schema:
            $ref: "#/definitions/execution-error"
    put:
      tags:
      - "Task instance administration"
      summary: "Acknowledges a specified task execution error."
      description: ""
      operationId: "acknowledgeError_1"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that error belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "errorId"
        in: "path"
        description: "identifier of the execution error to be acknowledged"
        required: true
        type: "string"
        x-example: "xxx-yyy-zzz"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task instance or Container Id not found"
  /server/admin/containers/{containerId}/tasks/errors:
    get:
      tags:
      - "Task instance administration"
      summary: "Returns all task execution errors for a specified KIE container."
      description: ""
      operationId: "getExecutionErrors_1"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "includeAck"
        in: "query"
        description: "optional flag that indicates if acknowledged errors should also\
          \ be collected, defaults to false"
        required: false
        type: "boolean"
        default: false
      - name: "name"
        in: "query"
        description: "optional name of the task to filter by"
        required: false
        type: "string"
      - name: "process"
        in: "query"
        description: "optional process id that the task belongs to to filter by"
        required: false
        type: "string"
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      - name: "sort"
        in: "query"
        description: "optional sort column, no default"
        required: false
        type: "string"
      - name: "sortOrder"
        in: "query"
        description: "optional sort direction (asc, desc) - defaults to asc"
        required: false
        type: "boolean"
        default: true
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Container Id not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              error-instance:
              - id: "54b04160-6242-475d-9452-0df3678123b0"
                type: "Process"
                container-id: "mortgage-process_1.0.0-SNAPSHOT"
                process-instance-id: 4
                process-id: "Mortgage_Process.MortgageApprovalProcess"
                activity-id: 12
                activity-name: "Validation"
                job-id: null
                error-msg: "[Mortgage_Process.MortgageApprovalProcess:4 - Validation:3]\
                  \ -- [Mortgage_Process.MortgageApprovalProcess:4 - Validation:3]\
                  \ -- null"
                error: null
                acknowledged: false
                acknowledged-by: null
                acknowledged-at: null
                error-date: 1539627373788
              - id: "a7982044-019d-4d4a-be3f-781f4ddca1df"
                type: "Process"
                container-id: "mortgage-process_1.0.0-SNAPSHOT"
                process-instance-id: 4
                process-id: "Mortgage_Process.MortgageApprovalProcess"
                activity-id: 12
                activity-name: "Validation"
                job-id: null
                error-msg: "[Mortgage_Process.MortgageApprovalProcess:4 - Validation:3]\
                  \ -- [Mortgage_Process.MortgageApprovalProcess:4 - Validation:3]\
                  \ -- null"
                error: null
                acknowledged: false
                acknowledged-by: null
                acknowledged-at: null
                error-date: 1539627364193
          schema:
            $ref: "#/definitions/execution-error-list"
    put:
      tags:
      - "Task instance administration"
      summary: "Acknowledges one or more task execution errors in a specified KIE\
        \ container."
      description: ""
      operationId: "acknowledgeErrors_1"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that errors belong to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "errorId"
        in: "query"
        description: "list of identifiers of execution errors to be acknowledged"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task instance or Container Id not found"
  /server/admin/containers/{containerId}/tasks/{taskInstanceId}/pot-owners:
    put:
      tags:
      - "Task instance administration"
      summary: "Adds users and groups as potential owners to a specified task instance."
      description: ""
      operationId: "addPotentialOwners"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of task instance to be updated"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "user"
        in: "query"
        description: "optional user id to be used instead of authenticated user -\
          \ only when bypass authenticated user is enabled"
        required: false
        type: "string"
      - name: "remove"
        in: "query"
        description: "optional flag that indicates if existing potential owners should\
          \ be removed, defaults to false"
        required: false
        type: "boolean"
        default: false
      - in: "body"
        name: "body"
        description: "list of users/groups to be added as potential owners, as OrgEntities\
          \ type"
        required: true
        schema:
          type: "string"
        x-examples:
          application/json: "{\n  \"users\" : [ \"john\" ],\n  \"groups\" : null\n\
            }"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<org-entities>\n    <users>john</users>\n</org-entities>"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task instance or Container Id not found"
  /server/admin/containers/{containerId}/tasks/{taskInstanceId}/exl-owners:
    put:
      tags:
      - "Task instance administration"
      summary: "Adds users and groups to be excluded from being owners for a specified\
        \ task instance."
      description: ""
      operationId: "addExcludedOwners"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of task instance to be updated"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "user"
        in: "query"
        description: "optional user id to be used instead of authenticated user -\
          \ only when bypass authenticated user is enabled"
        required: false
        type: "string"
      - name: "remove"
        in: "query"
        description: "optional flag that indicates if existing excluded owners should\
          \ be removed, defaults to false"
        required: false
        type: "boolean"
        default: false
      - in: "body"
        name: "body"
        description: "list of users/groups to be added as excluded owners, as OrgEntities\
          \ type"
        required: true
        schema:
          type: "string"
        x-examples:
          application/json: "{\n  \"users\" : [ \"john\" ],\n  \"groups\" : null\n\
            }"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<org-entities>\n    <users>john</users>\n</org-entities>"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task instance or Container Id not found"
  /server/admin/containers/{containerId}/tasks/{taskInstanceId}/admins:
    put:
      tags:
      - "Task instance administration"
      summary: "Adds business administrator users or groups to a specified task instance."
      description: ""
      operationId: "addAdmins"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of task instance to be updated"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "user"
        in: "query"
        description: "optional user id to be used instead of authenticated user -\
          \ only when bypass authenticated user is enabled"
        required: false
        type: "string"
      - name: "remove"
        in: "query"
        description: "optional flag that indicates if existing business admins should\
          \ be removed, defaults to false"
        required: false
        type: "boolean"
        default: false
      - in: "body"
        name: "body"
        description: "list of users/groups to be added as business admins, as OrgEntities\
          \ type"
        required: true
        schema:
          type: "string"
        x-examples:
          application/json: "{\n  \"users\" : [ \"john\" ],\n  \"groups\" : null\n\
            }"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<org-entities>\n    <users>john</users>\n</org-entities>"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task instance or Container Id not found"
  /server/admin/containers/{containerId}/tasks/{taskInstanceId}/pot-owners/users/{entityId}:
    delete:
      tags:
      - "Task instance administration"
      summary: "Deletes specified users previously added as potential owners for a\
        \ specified task instance."
      description: ""
      operationId: "removePotentialOwnersUsers"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of task instance to be updated"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "user"
        in: "query"
        description: "optional user id to be used instead of authenticated user -\
          \ only when bypass authenticated user is enabled"
        required: false
        type: "string"
      - name: "entityId"
        in: "path"
        description: "list of users to be removed from potantial owners list"
        required: true
        type: "string"
        x-example: "john"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task instance or Container Id not found"
  /server/admin/containers/{containerId}/tasks/{taskInstanceId}/exl-owners/users/{entityId}:
    delete:
      tags:
      - "Task instance administration"
      summary: "Deletes specified users previously added as excluded owners for a\
        \ specified task instance. "
      description: ""
      operationId: "removeExcludedOwnersUsers"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of task instance to be updated"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "user"
        in: "query"
        description: "optional user id to be used instead of authenticated user -\
          \ only when bypass authenticated user is enabled"
        required: false
        type: "string"
      - name: "entityId"
        in: "path"
        description: "list of users to be removed from excluded owners list"
        required: true
        type: "string"
        x-example: "john"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task instance or Container Id not found"
  /server/admin/containers/{containerId}/tasks/{taskInstanceId}/admins/users/{entityId}:
    delete:
      tags:
      - "Task instance administration"
      summary: "Deletes specified users previously added as business administrators\
        \ for a specified task instance."
      description: ""
      operationId: "removeAdminsUsers"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of task instance to be updated"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "user"
        in: "query"
        description: "optional user id to be used instead of authenticated user -\
          \ only when bypass authenticated user is enabled"
        required: false
        type: "string"
      - name: "entityId"
        in: "path"
        description: "list of users to be removed from business admin list"
        required: true
        type: "string"
        x-example: "john"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task instance or Container Id not found"
  /server/admin/containers/{containerId}/tasks/{taskInstanceId}/pot-owners/groups/{entityId}:
    delete:
      tags:
      - "Task instance administration"
      summary: "Deletes specified groups previously added as potential owners for\
        \ a specified task instance."
      description: ""
      operationId: "removePotentialOwnersGroups"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of task instance to be updated"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "user"
        in: "query"
        description: "optional user id to be used instead of authenticated user -\
          \ only when bypass authenticated user is enabled"
        required: false
        type: "string"
      - name: "entityId"
        in: "path"
        description: "list of groups to be removed from potantial owners list"
        required: true
        type: "string"
        x-example: "HR"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task instance or Container Id not found"
  /server/admin/containers/{containerId}/tasks/{taskInstanceId}/exl-owners/groups/{entityId}:
    delete:
      tags:
      - "Task instance administration"
      summary: "Deletes specified groups previously added as excluded owners for a\
        \ specified task instance."
      description: ""
      operationId: "removeExcludedOwnersGroups"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of task instance to be updated"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "user"
        in: "query"
        description: "optional user id to be used instead of authenticated user -\
          \ only when bypass authenticated user is enabled"
        required: false
        type: "string"
      - name: "entityId"
        in: "path"
        description: "list of groups to be removed from excluded owners list"
        required: true
        type: "string"
        x-example: "HR"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task instance or Container Id not found"
  /server/admin/containers/{containerId}/tasks/{taskInstanceId}/admins/groups/{entityId}:
    delete:
      tags:
      - "Task instance administration"
      summary: "Deletes specified groups previously added as business administrators\
        \ for a specified task instance."
      description: ""
      operationId: "removeAdminsGroups"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of task instance to be updated"
        required: true
        type: "integer"
        format: "int64"
      - name: "user"
        in: "query"
        description: "optional user id to be used instead of authenticated user -\
          \ only when bypass authenticated user is enabled"
        required: false
        type: "string"
      - name: "entityId"
        in: "path"
        description: "list of groups to be removed from business admin list"
        required: true
        type: "string"
        x-example: "HR"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task instance or Container Id not found"
  /server/admin/containers/{containerId}/tasks/{taskInstanceId}/contents/input:
    put:
      tags:
      - "Task instance administration"
      summary: "Adds input data to a specified task instance."
      description: ""
      operationId: "addTaskInputs"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of task instance to be updated"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - in: "body"
        name: "body"
        description: "map of data to be set as task inputs, as Map"
        required: true
        schema:
          type: "string"
        x-examples:
          application/json: "{\n    \"age\": 25,\n    \"person\": {\n        \"Person\"\
            : {\n            \"name\": \"john\"\n        }\n    }\n}"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<map-type>\n    <entries>\n        <entry>\n            <key>age</key>\n\
            \            <value xsi:type=\"xs:int\" xmlns:xs=\"http://www.w3.org/2001/XMLSchema\"\
            \n                    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
            >25</value>\n        </entry>\n        <entry>\n            <key>person</key>\n\
            \            <value xsi:type=\"person\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\
            >\n                <name>john</name>\n            </value>\n        </entry>\n\
            \    </entries>\n</map-type>"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task instance or Container Id not found"
    delete:
      tags:
      - "Task instance administration"
      summary: "Deletes input data by parameter name from a specified task instance."
      description: ""
      operationId: "removeTaskInputs"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of task instance to be updated"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "name"
        in: "query"
        description: "one or more names of task inputs to be removed"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task instance or Container Id not found"
  /server/admin/containers/{containerId}/tasks/{taskInstanceId}/contents/output:
    delete:
      tags:
      - "Task instance administration"
      summary: "Deletes output data by parameter name from a specified task instance."
      description: ""
      operationId: "removeTaskOutputs"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of task instance to be updated"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "name"
        in: "query"
        description: "one or more names of task outputs to be removed"
        required: true
        type: "array"
        items:
          type: "string"
        collectionFormat: "multi"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task instance or Container Id not found"
  /server/admin/containers/{containerId}/tasks/{taskInstanceId}/reassignments:
    get:
      tags:
      - "Task instance administration"
      summary: "Returns task reassignments for a specified task instance."
      description: ""
      operationId: "getTaskReassignments"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of task instance to be updated"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "activeOnly"
        in: "query"
        description: "optional flag that indicates if active only reassignmnets should\
          \ be collected, defaults to true"
        required: false
        type: "boolean"
        default: true
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task instance or Container Id not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              task-reassignment:
              - id: 9995
                name: ""
                reassign-at: 1540394323872
                users:
                - "John"
                - "Jane"
                groups:
                - "IT"
                active: true
          schema:
            $ref: "#/definitions/task-reassignment-list"
    post:
      tags:
      - "Task instance administration"
      summary: "Schedules a specified task instance to be reassigned to specified\
        \ users or groups and returns the ID of the reassignment."
      description: ""
      operationId: "reassign"
      consumes:
      - "application/json"
      - "application/xml"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of task instance to be updated"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "expiresAt"
        in: "query"
        description: "time expression for reassignmnet"
        required: true
        type: "string"
      - name: "whenNotStarted"
        in: "query"
        description: "optional flag that indicates the type of reassignment, either\
          \ whenNotStarted or whenNotCompleted must be set"
        required: false
        type: "boolean"
        default: false
      - name: "whenNotCompleted"
        in: "query"
        description: "optional flag that indicates the type of reassignment, either\
          \ whenNotStarted or whenNotCompleted must be set"
        required: false
        type: "boolean"
        default: false
      - in: "body"
        name: "body"
        description: "list of users/groups that task should be reassined to, as OrgEntities\
          \ type"
        required: true
        schema:
          type: "string"
        x-examples:
          application/json: "{\n  \"users\" : [ \"john\" ],\n  \"groups\" : null\n\
            }"
          application/xml: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"\
            yes\"?>\n<org-entities>\n    <users>john</users>\n</org-entities>"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task instance or Container Id not found"
        "201":
          description: "Successful response"
          examples:
            application/json: 10
          schema:
            type: "integer"
            format: "int64"
  /server/admin/containers/{containerId}/tasks/{taskInstanceId}/reassignments/{reassignmentId}:
    delete:
      tags:
      - "Task instance administration"
      summary: "Deletes a specified reassignment for a specified task instance."
      description: ""
      operationId: "cancelReassignment"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of task instance to be updated"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "reassignmentId"
        in: "path"
        description: "identifier of reassignment to be canceled"
        required: true
        type: "integer"
        format: "int64"
        x-example: 567
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task instance or Container Id not found"
  /server/admin/containers/{containerId}/tasks/{taskInstanceId}/notifications/{notificationId}:
    delete:
      tags:
      - "Task instance administration"
      summary: "Deletes a specified email notification from a specified task instance."
      description: ""
      operationId: "cancelNotification"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of task instance to be updated"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "notificationId"
        in: "path"
        description: "identifier of notification to be canceled"
        required: true
        type: "integer"
        format: "int64"
        x-example: 567
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task instance or Container Id not found"
  /server/admin/containers/{containerId}/tasks/{taskInstanceId}/errors:
    get:
      tags:
      - "Task instance administration"
      summary: "Returns task execution errors for a specified task instance."
      description: ""
      operationId: "getExecutionErrorsByTask"
      produces:
      - "application/json"
      - "application/xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of the task instance that errors should be collected\
          \ for"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "includeAck"
        in: "query"
        description: "optional flag that indicates if acknowledged errors should also\
          \ be collected, defaults to false"
        required: false
        type: "boolean"
        default: false
      - name: "page"
        in: "query"
        description: "optional pagination - at which page to start, defaults to 0\
          \ (meaning first)"
        required: false
        type: "integer"
        default: 0
        format: "int32"
      - name: "pageSize"
        in: "query"
        description: "optional pagination - size of the result, defaults to 10"
        required: false
        type: "integer"
        default: 10
        format: "int32"
      - name: "sort"
        in: "query"
        description: "optional sort column, no default"
        required: false
        type: "string"
      - name: "sortOrder"
        in: "query"
        description: "optional sort direction (asc, desc) - defaults to asc"
        required: false
        type: "boolean"
        default: true
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Container Id not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              error-instance:
              - id: "54b04160-6242-475d-9452-0df3678123b0"
                type: "Process"
                container-id: "mortgage-process_1.0.0-SNAPSHOT"
                process-instance-id: 4
                process-id: "Mortgage_Process.MortgageApprovalProcess"
                activity-id: 12
                activity-name: "Validation"
                job-id: null
                error-msg: "[Mortgage_Process.MortgageApprovalProcess:4 - Validation:3]\
                  \ -- [Mortgage_Process.MortgageApprovalProcess:4 - Validation:3]\
                  \ -- null"
                error: null
                acknowledged: false
                acknowledged-by: null
                acknowledged-at: null
                error-date: 1539627373788
              - id: "a7982044-019d-4d4a-be3f-781f4ddca1df"
                type: "Process"
                container-id: "mortgage-process_1.0.0-SNAPSHOT"
                process-instance-id: 4
                process-id: "Mortgage_Process.MortgageApprovalProcess"
                activity-id: 12
                activity-name: "Validation"
                job-id: null
                error-msg: "[Mortgage_Process.MortgageApprovalProcess:4 - Validation:3]\
                  \ -- [Mortgage_Process.MortgageApprovalProcess:4 - Validation:3]\
                  \ -- null"
                error: null
                acknowledged: false
                acknowledged-by: null
                acknowledged-at: null
                error-date: 1539627364193
          schema:
            $ref: "#/definitions/execution-error-list"
  /server/containers/{containerId}/forms/processes/{processId}:
    get:
      tags:
      - "Process and task forms"
      summary: "Returns the form information for a specified process definition."
      description: ""
      operationId: "getProcessForm"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that process definition belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "processId"
        in: "path"
        description: "identifier of process definition that form should be fetched\
          \ for"
        required: true
        type: "string"
        x-example: "evaluation"
      - name: "lang"
        in: "query"
        description: "optional language that the form should be found for"
        required: false
        type: "string"
        default: "en"
      - name: "filter"
        in: "query"
        description: "optional filter flag if form should be filtered or returned\
          \ as is"
        required: false
        type: "boolean"
      - name: "type"
        in: "query"
        description: "optional type of the form, defaults to ANY so system will find\
          \ the most current one"
        required: false
        type: "string"
        default: "ANY"
      - name: "marshallContent"
        in: "query"
        description: "optional marshall content flag if the content should be transformed\
          \ or not, defaults to true"
        required: false
        type: "boolean"
        default: true
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Process definition, form or Container Id not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              id: "d1e6dd47-b24c-4f93-ba25-337832926113"
              name: "evaluation-taskform.frm"
              model:
                processName: "Evaluation"
                processId: "evaluation"
                name: "process"
                properties:
                - name: "employee"
                  typeInfo:
                    type: "BASE"
                    className: "java.lang.String"
                    multiple: false
                  metaData:
                    entries:
                    - name: "field-readOnly"
                      value: false
                - name: "initiator"
                  typeInfo:
                    type: "BASE"
                    className: "java.lang.String"
                    multiple: false
                  metaData:
                    entries:
                    - name: "field-readOnly"
                      value: false
                - name: "performance"
                  typeInfo:
                    type: "BASE"
                    className: "java.lang.Integer"
                    multiple: false
                  metaData:
                    entries:
                    - name: "field-readOnly"
                      value: false
                - name: "reason"
                  typeInfo:
                    type: "BASE"
                    className: "java.lang.String"
                    multiple: false
                  metaData:
                    entries:
                    - name: "field-readOnly"
                      value: false
                formModelType: "org.kie.workbench.common.forms.jbpm.model.authoring.process.BusinessProcessFormModel"
              fields:
              - maxLength: 100
                placeHolder: "Employee"
                id: "field_740177746345817E11"
                name: "employee"
                label: "Employee"
                required: true
                readOnly: false
                validateOnChange: true
                binding: "employee"
                standaloneClassName: "java.lang.String"
                code: "TextBox"
                serializedFieldClassName: "org.kie.workbench.common.forms.fields.shared.fieldTypes.basic.textBox.definition.TextBoxFieldDefinition"
              - placeHolder: "Reason"
                rows: 4
                id: "field_282038126127015E11"
                name: "reason"
                label: "Reason"
                required: true
                readOnly: false
                validateOnChange: true
                binding: "reason"
                standaloneClassName: "java.lang.String"
                code: "TextArea"
                serializedFieldClassName: "org.kie.workbench.common.forms.fields.shared.fieldTypes.basic.textArea.definition.TextAreaFieldDefinition"
              layoutTemplate:
                version: 2
                name: "evaluation-taskform.frm"
                style: "FLUID"
                layoutProperties: {}
                rows:
                - height: "12"
                  layoutColumns:
                  - span: "12"
                    height: "12"
                    rows: []
                    layoutComponents:
                    - dragTypeName: "org.kie.workbench.common.forms.editor.client.editor.rendering.EditorFieldLayoutComponent"
                      properties:
                        field_id: "field_740177746345817E11"
                        form_id: "d1e6dd47-b24c-4f93-ba25-337832926113"
                - height: "12"
                  layoutColumns:
                  - span: "12"
                    height: "12"
                    rows: []
                    layoutComponents:
                    - dragTypeName: "org.kie.workbench.common.forms.editor.client.editor.rendering.EditorFieldLayoutComponent"
                      properties:
                        field_id: "field_282038126127015E11"
                        form_id: "d1e6dd47-b24c-4f93-ba25-337832926113"
          schema:
            type: "string"
  /server/containers/{containerId}/forms/tasks/{taskInstanceId}:
    get:
      tags:
      - "Process and task forms"
      summary: "Returns the form information for a specified task instance."
      description: ""
      operationId: "getTaskForm"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of task instance that form should be fetched for"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "lang"
        in: "query"
        description: "optional language that the form should be found for"
        required: false
        type: "string"
        default: "en"
      - name: "filter"
        in: "query"
        description: "optional filter flag if form should be filtered or returned\
          \ as is"
        required: false
        type: "boolean"
      - name: "type"
        in: "query"
        description: "optional type of the form, defaults to ANY so system will find\
          \ the most current one"
        required: false
        type: "string"
        default: "ANY"
      - name: "marshallContent"
        in: "query"
        description: "optional marshall content flag if the content should be transformed\
          \ or not, defaults to true"
        required: false
        type: "boolean"
        default: true
      - name: "user"
        in: "query"
        description: "optional user id to be used instead of authenticated user -\
          \ only when bypass authenticated user is enabled"
        required: false
        type: "string"
      responses:
        "500":
          description: "Unexpected error"
        "404":
          description: "Task, form or Container Id not found"
        "200":
          description: "Successful response"
          examples:
            application/json:
              id: "47078d21-7da5-4d3f-8355-0fcd78b09f39"
              name: "PerformanceEvaluation-taskform.frm"
              model:
                taskName: "PerformanceEvaluation"
                processId: "evaluation"
                name: "task"
                properties:
                - name: "BusinessAdministratorId"
                  typeInfo:
                    type: "BASE"
                    className: "java.lang.String"
                    multiple: false
                  metaData:
                    entries:
                    - name: "field-readOnly"
                      value: true
                - name: "reason"
                  typeInfo:
                    type: "BASE"
                    className: "java.lang.String"
                    multiple: false
                  metaData:
                    entries:
                    - name: "field-readOnly"
                      value: true
                - name: "performance"
                  typeInfo:
                    type: "BASE"
                    className: "java.lang.Integer"
                    multiple: false
                  metaData:
                    entries:
                    - name: "field-readOnly"
                      value: false
                formModelType: "org.kie.workbench.common.forms.jbpm.model.authoring.task.TaskFormModel"
              fields:
              - placeHolder: "Reason"
                rows: 4
                id: "field_332058348325587E12"
                name: "reason"
                label: "Reason"
                required: false
                readOnly: true
                validateOnChange: true
                binding: "reason"
                standaloneClassName: "java.lang.String"
                code: "TextArea"
                serializedFieldClassName: "org.kie.workbench.common.forms.fields.shared.fieldTypes.basic.textArea.definition.TextAreaFieldDefinition"
              - placeHolder: "Performance"
                maxLength: 100
                id: "field_336003622256354E12"
                name: "performance"
                label: "Performance"
                required: true
                readOnly: false
                validateOnChange: true
                binding: "performance"
                standaloneClassName: "java.lang.Integer"
                code: "IntegerBox"
                serializedFieldClassName: "org.kie.workbench.common.forms.fields.shared.fieldTypes.basic.integerBox.definition.IntegerBoxFieldDefinition"
              layoutTemplate:
                version: 2
                name: "PerformanceEvaluation-taskform.frm"
                style: "FLUID"
                layoutProperties: {}
                rows:
                - height: "12"
                  layoutColumns:
                  - span: "12"
                    height: "12"
                    rows: []
                    layoutComponents:
                    - dragTypeName: "org.kie.workbench.common.forms.editor.client.editor.rendering.EditorFieldLayoutComponent"
                      properties:
                        field_id: "field_332058348325587E12"
                        form_id: "47078d21-7da5-4d3f-8355-0fcd78b09f39"
                - height: "12"
                  layoutColumns:
                  - span: "12"
                    height: "12"
                    rows: []
                    layoutComponents:
                    - dragTypeName: "org.kie.workbench.common.forms.editor.client.editor.rendering.EditorFieldLayoutComponent"
                      properties:
                        field_id: "field_336003622256354E12"
                        form_id: "47078d21-7da5-4d3f-8355-0fcd78b09f39"
          schema:
            type: "string"
  /server/containers/{containerId}/forms/processes/{processId}/content:
    get:
      tags:
      - "Process and task forms"
      summary: "Returns the rendered form for a specified process definition"
      description: ""
      operationId: "getProcessRenderedForm"
      produces:
      - "text/html"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that process definition belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "processId"
        in: "path"
        description: "identifier of process definition that form should be fetched\
          \ for"
        required: true
        type: "string"
        x-example: "evaluation"
      - name: "renderer"
        in: "query"
        description: "optional renderer name that the form should be rendered with"
        required: false
        type: "string"
        default: "patternfly"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "string"
        "500":
          description: "Unexpected error"
        "404":
          description: "Process, form or Container Id not found"
  /server/containers/{containerId}/forms/tasks/{taskInstanceId}/content:
    get:
      tags:
      - "Process and task forms"
      summary: "Returns the rendered form for a specified task instance."
      description: ""
      operationId: "getTaskRenderedForm"
      produces:
      - "text/html"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that task instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "taskInstanceId"
        in: "path"
        description: "identifier of task instance that form should be fetched for"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "renderer"
        in: "query"
        description: "optional renderer name that the form should be rendered with"
        required: false
        type: "string"
        default: "patternfly"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "string"
        "500":
          description: "Unexpected error"
        "404":
          description: "Task, form or Container Id not found"
  /server/containers/{containerId}/forms/cases/{caseDefId}/content:
    get:
      tags:
      - "Process and task forms"
      summary: "Returns the rendered form for a specified case definition."
      description: ""
      operationId: "getCaseRenderedForm"
      produces:
      - "text/html"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that case definition belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "caseDefId"
        in: "path"
        description: "identifier of case definition that form should be fetched for"
        required: true
        type: "string"
        x-example: "orderhardware"
      - name: "renderer"
        in: "query"
        description: "optional renderer name that the form should be rendered with"
        required: false
        type: "string"
        default: "patternfly"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "string"
        "500":
          description: "Unexpected error"
        "404":
          description: "Case, form or Container Id not found"
  /server/containers/{containerId}/images/processes/{processId}:
    get:
      tags:
      - "Process images"
      summary: "Returns an SVG image file of a specified process definition diagram."
      description: ""
      operationId: "getProcessImage"
      produces:
      - "application/svg+xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that process definition belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "processId"
        in: "path"
        description: "identifier of the process definition that image should be loaded\
          \ for"
        required: true
        type: "string"
        x-example: "evaluation"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "string"
        "500":
          description: "Unexpected error"
        "404":
          description: "Process definition, image or Container Id not found"
  /server/containers/{containerId}/images/processes/instances/{processInstanceId}:
    get:
      tags:
      - "Process images"
      summary: "Returns an annotated SVG image file of a specified process instance\
        \ diagram."
      description: ""
      operationId: "getProcessInstanceImage"
      produces:
      - "application/svg+xml"
      parameters:
      - name: "containerId"
        in: "path"
        description: "container id that process instance belongs to"
        required: true
        type: "string"
        x-example: "evaluation_1.0.0-SNAPSHOT"
      - name: "processInstanceId"
        in: "path"
        description: "identifier of the process instance that image should be loaded\
          \ for"
        required: true
        type: "integer"
        format: "int64"
        x-example: 123
      - name: "svgCompletedColor"
        in: "query"
        description: "svg completed node color"
        required: false
        type: "string"
        default: "#C0C0C0"
        x-example: "#C0C0C0"
      - name: "svgCompletedBorderColor"
        in: "query"
        description: "svg completed node border color"
        required: false
        type: "string"
        default: "#030303"
        x-example: "#030303"
      - name: "svgActiveBorderColor"
        in: "query"
        description: "svg active node border color"
        required: false
        type: "string"
        default: "#1e90ff"
        x-example: "#1e90ff"
      - name: "svgInstanceBadgesShow"
        in: "query"
        description: "show or hidden instance badges"
        required: false
        type: "boolean"
        default: false
        x-example: false
      - name: "svgActiveAsyncBorderColor"
        in: "query"
        description: "svg active async node border color"
        required: false
        type: "string"
        default: "#FF0000"
        x-example: "#FF0000"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "string"
        "500":
          description: "Unexpected error"
        "404":
          description: "Process instance, image or Container Id not found"
  /server/files/{type}/{file}:
    get:
      tags:
      - "Static files endpoint :: BPM"
      summary: "Retrieves given resource/file based on the type and file name"
      description: ""
      operationId: "getSharedContent"
      parameters:
      - name: "type"
        in: "path"
        description: "Type of the resource e.g. js, css, etc"
        required: true
        type: "string"
      - name: "file"
        in: "path"
        description: "Name of the resource to look up"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "string"
        "500":
          description: "Unexpected error"
        "404":
          description: "resource/file not found"
  /server/files/{provider}/{type}/{file}:
    get:
      tags:
      - "Static files endpoint :: BPM"
      summary: "Retrieves given resource/file based on the type and file name managed\
        \ by given provider"
      description: ""
      operationId: "getProviderSpecificContent"
      parameters:
      - name: "provider"
        in: "path"
        description: "Name of the provider that manages given resource"
        required: true
        type: "string"
      - name: "type"
        in: "path"
        description: "Type of the resource e.g. js, css, etc"
        required: true
        type: "string"
      - name: "file"
        in: "path"
        description: "Name of the resource to look up"
        required: true
        type: "string"
      responses:
        "200":
          description: "successful operation"
          schema:
            type: "string"
        "500":
          description: "Unexpected error"
        "404":
          description: "resource/file not found"
definitions:
  case-adhoc-fragment:
    type: "object"
    properties:
      name:
        type: "string"
      type:
        type: "string"
    xml:
      name: "case-adhoc-fragment"
  case-file:
    type: "object"
    properties:
      case-data:
        type: "object"
        additionalProperties:
          type: "object"
      case-user-assignments:
        type: "object"
        additionalProperties:
          type: "string"
      case-group-assignments:
        type: "object"
        additionalProperties:
          type: "string"
      case-data-restrictions:
        type: "object"
        additionalProperties:
          type: "array"
          items:
            type: "string"
    xml:
      name: "case-file"
  case-instance:
    type: "object"
    properties:
      case-id:
        type: "string"
      case-description:
        type: "string"
      case-owner:
        type: "string"
      case-status:
        type: "integer"
        format: "int32"
      case-definition-id:
        type: "string"
      container-id:
        type: "string"
      case-started-at:
        type: "string"
        format: "date-time"
      case-completed-at:
        type: "string"
        format: "date-time"
      case-completion-msg:
        type: "string"
      case-sla-compliance:
        type: "integer"
        format: "int32"
      case-sla-due-date:
        type: "string"
        format: "date-time"
      case-file:
        $ref: "#/definitions/case-file"
      case-milestones:
        type: "array"
        items:
          xml:
            name: "case-milestones"
          $ref: "#/definitions/case-milestone"
      case-stages:
        type: "array"
        items:
          xml:
            name: "case-stages"
          $ref: "#/definitions/case-stage"
      case-roles:
        type: "array"
        items:
          xml:
            name: "case-roles"
          $ref: "#/definitions/case-role-assignment"
    xml:
      name: "case-instance"
  case-instance-list:
    type: "object"
    properties:
      instances:
        type: "array"
        items:
          xml:
            name: "instances"
          $ref: "#/definitions/case-instance"
    xml:
      name: "case-instance-list"
  case-milestone:
    type: "object"
    properties:
      milestone-name:
        type: "string"
      milestone-id:
        type: "string"
      milestone-achieved:
        type: "boolean"
      milestone-achieved-at:
        type: "string"
        format: "date-time"
      milestone-status:
        type: "string"
    xml:
      name: "case-milestone"
  case-role-assignment:
    type: "object"
    properties:
      name:
        type: "string"
      users:
        type: "array"
        items:
          type: "string"
          xml:
            name: "users"
      groups:
        type: "array"
        items:
          type: "string"
          xml:
            name: "groups"
    xml:
      name: "case-role-assignment"
  case-stage:
    type: "object"
    properties:
      stage-name:
        type: "string"
      stage-id:
        type: "string"
      stage-status:
        type: "string"
      adhoc-fragments:
        type: "array"
        items:
          xml:
            name: "adhoc-fragments"
          $ref: "#/definitions/case-adhoc-fragment"
      active-nodes:
        type: "array"
        items:
          xml:
            name: "active-nodes"
          $ref: "#/definitions/node-instance"
    xml:
      name: "case-stage"
  node-instance:
    type: "object"
    properties:
      node-instance-id:
        type: "integer"
        format: "int64"
      node-name:
        type: "string"
      process-instance-id:
        type: "integer"
        format: "int64"
      work-item-id:
        type: "integer"
        format: "int64"
      container-id:
        type: "string"
      start-date:
        type: "string"
        format: "date-time"
      node-id:
        type: "string"
      node-type:
        type: "string"
      node-connection:
        type: "string"
      node-completed:
        type: "boolean"
      reference-id:
        type: "integer"
        format: "int64"
      sla-compliance:
        type: "integer"
        format: "int32"
      sla-due-date:
        type: "string"
        format: "date-time"
    xml:
      name: "node-instance"
  case-migration-report-instance:
    type: "object"
    properties:
      case-id:
        type: "string"
      case-migration-successful:
        type: "boolean"
      case-migration-start:
        type: "string"
        format: "date-time"
      case-migration-end:
        type: "string"
        format: "date-time"
      case-migration-reports:
        type: "array"
        items:
          xml:
            name: "case-migration-reports"
          $ref: "#/definitions/migration-report-instance"
    xml:
      name: "case-migration-report-instance"
  migration-report-instance:
    type: "object"
    properties:
      migration-successful:
        type: "boolean"
      migration-start:
        type: "string"
        format: "date-time"
      migration-end:
        type: "string"
        format: "date-time"
      migration-logs:
        type: "array"
        items:
          type: "string"
          xml:
            name: "migration-logs"
      migration-process-instance:
        type: "integer"
        format: "int64"
    xml:
      name: "migration-report-instance"
  case-definition:
    type: "object"
    properties:
      name:
        type: "string"
      id:
        type: "string"
      version:
        type: "string"
      case-id-prefix:
        type: "string"
      container-id:
        type: "string"
      adhoc-fragments:
        type: "array"
        items:
          xml:
            name: "adhoc-fragments"
          $ref: "#/definitions/case-adhoc-fragment"
      roles:
        type: "object"
        additionalProperties:
          type: "integer"
          format: "int32"
      milestones:
        type: "array"
        items:
          xml:
            name: "milestones"
          $ref: "#/definitions/case-milestone-def"
      stages:
        type: "array"
        items:
          xml:
            name: "stages"
          $ref: "#/definitions/case-stage-def"
    xml:
      name: "case-definition"
  case-definition-list:
    type: "object"
    properties:
      definitions:
        type: "array"
        items:
          xml:
            name: "definitions"
          $ref: "#/definitions/case-definition"
    xml:
      name: "case-definition-list"
  case-milestone-def:
    type: "object"
    properties:
      milestone-name:
        type: "string"
      milestone-id:
        type: "string"
      milestone-mandatory:
        type: "boolean"
    xml:
      name: "case-milestone-def"
  case-stage-def:
    type: "object"
    properties:
      stage-name:
        type: "string"
      stage-id:
        type: "string"
      adhoc-fragments:
        type: "array"
        items:
          xml:
            name: "adhoc-fragments"
          $ref: "#/definitions/case-adhoc-fragment"
    xml:
      name: "case-stage-def"
  node-definition:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      unique-id:
        type: "string"
      type:
        type: "string"
    xml:
      name: "node-definition"
  process-definition:
    type: "object"
    properties:
      associatedEntities:
        type: "object"
        xml:
          name: "associated-entities"
          wrapped: true
        additionalProperties:
          type: "array"
          items:
            type: "string"
      serviceTasks:
        type: "object"
        xml:
          name: "service-tasks"
          wrapped: true
        additionalProperties:
          type: "string"
      processVariables:
        type: "object"
        xml:
          name: "process-variables"
          wrapped: true
        additionalProperties:
          type: "string"
      reusableSubProcesses:
        type: "array"
        xml:
          name: "process-subprocesses"
          wrapped: true
        items:
          type: "string"
      nodes:
        type: "array"
        xml:
          wrapped: true
        items:
          $ref: "#/definitions/node-definition"
      timers:
        type: "array"
        xml:
          wrapped: true
        items:
          $ref: "#/definitions/timer-definition"
      tagsByVariable:
        type: "object"
        xml:
          name: "tags"
          wrapped: true
        additionalProperties:
          type: "array"
          items:
            type: "string"
      process-id:
        type: "string"
      process-name:
        type: "string"
      process-version:
        type: "string"
      package:
        type: "string"
      container-id:
        type: "string"
      dynamic:
        type: "boolean"
    xml:
      name: "process-definition"
  process-definitions:
    type: "object"
    properties:
      processes:
        type: "array"
        items:
          xml:
            name: "processes"
          $ref: "#/definitions/process-definition"
    xml:
      name: "process-definitions"
  timer-definition:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      node-name:
        type: "string"
      unique-id:
        type: "string"
      nodeId:
        type: "integer"
        format: "int64"
    xml:
      name: "timer-definition"
  task-summary:
    type: "object"
    properties:
      task-id:
        type: "integer"
        format: "int64"
      task-name:
        type: "string"
      task-subject:
        type: "string"
      task-description:
        type: "string"
      task-status:
        type: "string"
      task-priority:
        type: "integer"
        format: "int32"
      task-is-skipable:
        type: "boolean"
      task-actual-owner:
        type: "string"
      task-created-by:
        type: "string"
      task-created-on:
        type: "string"
        format: "date-time"
      task-activation-time:
        type: "string"
        format: "date-time"
      task-expiration-time:
        type: "string"
        format: "date-time"
      task-proc-inst-id:
        type: "integer"
        format: "int64"
      task-proc-def-id:
        type: "string"
      task-container-id:
        type: "string"
      task-parent-id:
        type: "integer"
        format: "int64"
      correlation-key:
        type: "string"
      process-type:
        type: "integer"
        format: "int32"
    xml:
      name: "task-summary"
  task-summary-list:
    type: "object"
    properties:
      task-summary:
        type: "array"
        items:
          xml:
            name: "task-summary"
          $ref: "#/definitions/task-summary"
    xml:
      name: "task-summary-list"
  case-file-data-item:
    type: "object"
    properties:
      case-id:
        type: "string"
      name:
        type: "string"
      value:
        type: "string"
      type:
        type: "string"
      last-modified-by:
        type: "string"
      last-modified:
        type: "string"
        format: "date-time"
    xml:
      name: "case-file-data-item"
  case-file-data-item-list:
    type: "object"
    properties:
      instances:
        type: "array"
        items:
          xml:
            name: "instances"
          $ref: "#/definitions/case-file-data-item"
    xml:
      name: "case-file-data-item-list"
  case-instance-vars:
    type: "object"
    properties:
      process-instance-id:
        type: "integer"
        format: "int64"
      case-id:
        type: "string"
      case-definition-id:
        type: "string"
      process-name:
        type: "string"
      process-version:
        type: "string"
      process-instance-state:
        type: "integer"
        format: "int32"
      container-id:
        type: "string"
      initiator:
        type: "string"
      correlation-key:
        type: "string"
      process-instance-variables:
        type: "object"
        additionalProperties:
          type: "object"
      case-instance-variables:
        type: "object"
        additionalProperties:
          type: "object"
    xml:
      name: "case-instance-vars"
  case-instance-vars-list:
    type: "object"
    properties:
      case-instance-vars:
        type: "array"
        items:
          xml:
            name: "case-instance-vars"
          $ref: "#/definitions/case-instance-vars"
    xml:
      name: "case-instance-vars-list"
  case-task-with-vars:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      description:
        type: "string"
      actual-owner:
        type: "string"
      correlation-key:
        type: "string"
      potential-owners:
        type: "array"
        items:
          type: "string"
          xml:
            name: "potential-owners"
      case-definition-id:
        type: "string"
      process-instance-id:
        type: "integer"
        format: "int64"
      case-id:
        type: "string"
      task-instance-input-variables:
        type: "object"
        additionalProperties:
          type: "object"
      process-instance-variables:
        type: "object"
        additionalProperties:
          type: "object"
      case-instance-variables:
        type: "object"
        additionalProperties:
          type: "object"
      status:
        type: "string"
    xml:
      name: "case-task-with-vars"
  case-user-task-variable-instance-list:
    type: "object"
    properties:
      case-user-task-with-vars-instance:
        type: "array"
        items:
          xml:
            name: "case-user-task-with-vars-instance"
          $ref: "#/definitions/case-task-with-vars"
    xml:
      name: "case-user-task-variable-instance-list"
  case-stage-list:
    type: "object"
    properties:
      stages:
        type: "array"
        items:
          xml:
            name: "stages"
          $ref: "#/definitions/case-stage"
    xml:
      name: "case-stage-list"
  case-adhoc-fragment-list:
    type: "object"
    properties:
      fragments:
        type: "array"
        items:
          xml:
            name: "fragments"
          $ref: "#/definitions/case-adhoc-fragment"
    xml:
      name: "case-adhoc-fragment-list"
  process-instance:
    type: "object"
    properties:
      process-instance-id:
        type: "integer"
        format: "int64"
      process-id:
        type: "string"
      process-name:
        type: "string"
      process-version:
        type: "string"
      process-instance-state:
        type: "integer"
        format: "int32"
      container-id:
        type: "string"
      initiator:
        type: "string"
      start-date:
        type: "string"
        format: "date-time"
      process-instance-desc:
        type: "string"
      correlation-key:
        type: "string"
      parent-instance-id:
        type: "integer"
        format: "int64"
      sla-compliance:
        type: "integer"
        format: "int32"
      sla-due-date:
        type: "string"
        format: "date-time"
      active-user-tasks:
        $ref: "#/definitions/task-summary-list"
      process-instance-variables:
        type: "object"
        additionalProperties:
          type: "object"
    xml:
      name: "process-instance"
  process-instance-list:
    type: "object"
    properties:
      process-instance:
        type: "array"
        items:
          xml:
            name: "process-instance"
          $ref: "#/definitions/process-instance"
    xml:
      name: "process-instance-list"
  node-instance-list:
    type: "object"
    properties:
      node-instance:
        type: "array"
        items:
          xml:
            name: "node-instance"
          $ref: "#/definitions/node-instance"
    xml:
      name: "node-instance-list"
  case-role-assignment-list:
    type: "object"
    properties:
      role-assignments:
        type: "array"
        items:
          xml:
            name: "role-assignments"
          $ref: "#/definitions/case-role-assignment"
    xml:
      name: "case-role-assignment-list"
  case-comment:
    type: "object"
    properties:
      id:
        type: "string"
      author:
        type: "string"
      text:
        type: "string"
      added-at:
        type: "string"
        format: "date-time"
      restricted-to:
        type: "array"
        items:
          type: "string"
          xml:
            name: "restricted-to"
    xml:
      name: "case-comment"
  case-comment-list:
    type: "object"
    properties:
      comments:
        type: "array"
        items:
          xml:
            name: "comments"
          $ref: "#/definitions/case-comment"
    xml:
      name: "case-comment-list"
  case-milestone-list:
    type: "object"
    properties:
      milestones:
        type: "array"
        items:
          xml:
            name: "milestones"
          $ref: "#/definitions/case-milestone"
    xml:
      name: "case-milestone-list"
  response:
    type: "object"
    properties:
      type:
        type: "string"
        xml:
          attribute: true
        enum:
        - "SUCCESS"
        - "FAILURE"
        - "NO_RESPONSE"
      msg:
        type: "string"
        xml:
          attribute: true
      result:
        type: "object"
    xml:
      name: "response"
  responses:
    type: "object"
    properties:
      response:
        type: "array"
        items:
          xml:
            name: "response"
          $ref: "#/definitions/response"
    xml:
      name: "responses"
  kie-message:
    type: "object"
    properties:
      severity:
        type: "string"
        enum:
        - "INFO"
        - "WARN"
        - "ERROR"
      timestamp:
        type: "string"
        format: "date-time"
      content:
        type: "array"
        items:
          type: "string"
          xml:
            name: "content"
    xml:
      name: "kie-message"
  process-task-outputs:
    type: "object"
    properties:
      taskOutputs:
        type: "object"
        xml:
          name: "outputs"
          wrapped: true
        additionalProperties:
          type: "string"
    xml:
      name: "process-task-outputs"
  process-subprocesses:
    type: "object"
    properties:
      subProcesses:
        type: "array"
        xml:
          name: "subprocesses"
          wrapped: true
        items:
          type: "string"
    xml:
      name: "process-subprocesses"
  process-variables:
    type: "object"
    properties:
      variables:
        type: "object"
        xml:
          wrapped: true
        additionalProperties:
          type: "string"
    xml:
      name: "process-variables"
  process-service-tasks:
    type: "object"
    properties:
      serviceTasks:
        type: "object"
        xml:
          name: "tasks"
          wrapped: true
        additionalProperties:
          type: "string"
    xml:
      name: "process-service-tasks"
  process-associated-entities:
    type: "object"
    properties:
      associatedEntities:
        type: "object"
        xml:
          name: "associated-entities"
          wrapped: true
        additionalProperties:
          type: "array"
          items:
            type: "string"
    xml:
      name: "process-associated-entities"
  user-task-definition:
    type: "object"
    properties:
      associatedEntities:
        type: "array"
        xml:
          name: "associated-entities"
          wrapped: true
        items:
          type: "string"
      taskInputMappings:
        type: "object"
        xml:
          name: "task-inputs"
          wrapped: true
        additionalProperties:
          type: "string"
      taskOutputMappings:
        type: "object"
        xml:
          name: "task-outputs"
          wrapped: true
        additionalProperties:
          type: "string"
      task-id:
        type: "string"
      task-name:
        type: "string"
      task-priority:
        type: "integer"
        format: "int32"
      task-comment:
        type: "string"
      task-created-by:
        type: "string"
      task-skippable:
        type: "boolean"
      task-form-name:
        type: "string"
    xml:
      name: "user-task-definition"
  user-task-definitions:
    type: "object"
    properties:
      task:
        type: "array"
        items:
          xml:
            name: "task"
          $ref: "#/definitions/user-task-definition"
    xml:
      name: "user-task-definitions"
  process-task-inputs:
    type: "object"
    properties:
      taskInputs:
        type: "object"
        xml:
          name: "inputs"
          wrapped: true
        additionalProperties:
          type: "string"
    xml:
      name: "process-task-inputs"
  document-instance:
    type: "object"
    properties:
      document-id:
        type: "string"
      document-name:
        type: "string"
      document-link:
        type: "string"
      document-size:
        type: "integer"
        format: "int64"
      document-last-mod:
        type: "string"
        format: "date-time"
      document-content:
        type: "array"
        items:
          type: "string"
          format: "byte"
          xml:
            name: "document-content"
    xml:
      name: "document-instance"
  document-instance-list:
    type: "object"
    properties:
      document-instances:
        type: "array"
        items:
          xml:
            name: "document-instances"
          $ref: "#/definitions/document-instance"
    xml:
      name: "document-instance-list"
  error-info-instance:
    type: "object"
    properties:
      error-instance-id:
        type: "integer"
        format: "int64"
      request-instance-id:
        type: "integer"
        format: "int64"
      error-message:
        type: "string"
      error-stacktrace:
        type: "string"
      error-date:
        type: "string"
        format: "date-time"
    xml:
      name: "error-info-instance"
  error-info-instance-list:
    type: "object"
    properties:
      error-info-instance:
        type: "array"
        items:
          xml:
            name: "error-info-instance"
          $ref: "#/definitions/error-info-instance"
    xml:
      name: "error-info-instance-list"
  request-info-instance:
    type: "object"
    properties:
      request-instance-id:
        type: "integer"
        format: "int64"
      request-status:
        type: "string"
      request-business-key:
        type: "string"
      request-message:
        type: "string"
      request-retries:
        type: "integer"
        format: "int32"
      request-executions:
        type: "integer"
        format: "int32"
      request-command:
        type: "string"
      request-scheduled-date:
        type: "string"
        format: "date-time"
      request-data:
        type: "object"
        additionalProperties:
          type: "object"
      response-data:
        type: "object"
        additionalProperties:
          type: "object"
      request-errors:
        $ref: "#/definitions/error-info-instance-list"
      request-container-id:
        type: "string"
    xml:
      name: "request-info-instance"
  request-info-instance-list:
    type: "object"
    properties:
      request-info-instance:
        type: "array"
        items:
          xml:
            name: "request-info-instance"
          $ref: "#/definitions/request-info-instance"
    xml:
      name: "request-info-instance-list"
  variable-instance:
    type: "object"
    properties:
      name:
        type: "string"
      old-value:
        type: "string"
      value:
        type: "string"
      process-instance-id:
        type: "integer"
        format: "int64"
      modification-date:
        type: "string"
        format: "date-time"
    xml:
      name: "variable-instance"
  variable-instance-list:
    type: "object"
    properties:
      variable-instance:
        type: "array"
        items:
          xml:
            name: "variable-instance"
          $ref: "#/definitions/variable-instance"
    xml:
      name: "variable-instance-list"
  work-item-instance:
    type: "object"
    properties:
      work-item-id:
        type: "integer"
        format: "int64"
      work-item-name:
        type: "string"
      work-item-state:
        type: "integer"
        format: "int32"
      work-item-params:
        type: "object"
        additionalProperties:
          type: "object"
      process-instance-id:
        type: "integer"
        format: "int64"
      container-id:
        type: "string"
      node-instance-id:
        type: "integer"
        format: "int64"
      node-id:
        type: "integer"
        format: "int64"
    xml:
      name: "work-item-instance"
  work-item-instance-list:
    type: "object"
    properties:
      work-item-instance:
        type: "array"
        items:
          xml:
            name: "work-item-instance"
          $ref: "#/definitions/work-item-instance"
    xml:
      name: "work-item-instance-list"
  query-definition:
    type: "object"
    properties:
      query-name:
        type: "string"
      query-source:
        type: "string"
      query-expression:
        type: "string"
      query-target:
        type: "string"
      query-columns:
        type: "object"
        additionalProperties:
          type: "string"
    xml:
      name: "query-definition"
  query-definitions:
    type: "object"
    properties:
      queries:
        type: "array"
        items:
          xml:
            name: "queries"
          $ref: "#/definitions/query-definition"
    xml:
      name: "query-definitions"
  task-event-instance:
    type: "object"
    properties:
      task-event-id:
        type: "integer"
        format: "int64"
      task-id:
        type: "integer"
        format: "int64"
      task-event-type:
        type: "string"
      task-event-user:
        type: "string"
      task-event-date:
        type: "string"
        format: "date-time"
      task-process-instance-id:
        type: "integer"
        format: "int64"
      task-work-item-id:
        type: "integer"
        format: "int64"
      task-event-message:
        type: "string"
      correlation-key:
        type: "string"
      process-type:
        type: "integer"
        format: "int32"
      assigned-owner:
        type: "string"
    xml:
      name: "task-event-instance"
  task-event-instance-list:
    type: "object"
    properties:
      task-event-instance:
        type: "array"
        items:
          xml:
            name: "task-event-instance"
          $ref: "#/definitions/task-event-instance"
    xml:
      name: "task-event-instance-list"
  process-instance-task-with-vars:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      description:
        type: "string"
      actual-owner:
        type: "string"
      correlation-key:
        type: "string"
      potential-owners:
        type: "array"
        items:
          type: "string"
          xml:
            name: "potential-owners"
      process-definition-id:
        type: "string"
      process-instance-id:
        type: "integer"
        format: "int64"
      task-instance-input-variables:
        type: "object"
        additionalProperties:
          type: "object"
      process-variables:
        type: "object"
        additionalProperties:
          type: "object"
      status:
        type: "string"
    xml:
      name: "process-instance-task-with-vars"
  user-task-variable-instance-list:
    type: "object"
    properties:
      user-task-with-vars-instance:
        type: "array"
        items:
          xml:
            name: "user-task-with-vars-instance"
          $ref: "#/definitions/process-instance-task-with-vars"
    xml:
      name: "user-task-variable-instance-list"
  task-instance:
    type: "object"
    properties:
      task-id:
        type: "integer"
        format: "int64"
      task-priority:
        type: "integer"
        format: "int32"
      task-name:
        type: "string"
      task-subject:
        type: "string"
      task-description:
        type: "string"
      task-type:
        type: "string"
      task-form:
        type: "string"
      task-status:
        type: "string"
      task-actual-owner:
        type: "string"
      task-created-by:
        type: "string"
      task-created-on:
        type: "string"
        format: "date-time"
      task-activation-time:
        type: "string"
        format: "date-time"
      task-expiration-time:
        type: "string"
        format: "date-time"
      task-skippable:
        type: "boolean"
      task-workitem-id:
        type: "integer"
        format: "int64"
      task-process-instance-id:
        type: "integer"
        format: "int64"
      task-parent-id:
        type: "integer"
        format: "int64"
      task-process-id:
        type: "string"
      task-container-id:
        type: "string"
      sla-compliance:
        type: "integer"
        format: "int32"
      sla-due-date:
        type: "string"
        format: "date-time"
      task-pot-owners:
        type: "array"
        xml:
          name: "potential-owners"
          wrapped: true
        items:
          type: "string"
          xml:
            name: "task-pot-owners"
      task-excl-owners:
        type: "array"
        xml:
          name: "excluded-owners"
          wrapped: true
        items:
          type: "string"
          xml:
            name: "task-excl-owners"
      task-business-admins:
        type: "array"
        xml:
          name: "business-admins"
          wrapped: true
        items:
          type: "string"
          xml:
            name: "task-business-admins"
      task-input-data:
        type: "object"
        additionalProperties:
          type: "object"
      task-output-data:
        type: "object"
        additionalProperties:
          type: "object"
      correlation-key:
        type: "string"
      process-type:
        type: "integer"
        format: "int32"
    xml:
      name: "task-instance"
  process-instance-custom:
    type: "object"
    properties:
      process-instance-id:
        type: "integer"
        format: "int64"
      process-id:
        type: "string"
      process-name:
        type: "string"
      process-version:
        type: "string"
      process-instance-state:
        type: "integer"
        format: "int32"
      container-id:
        type: "string"
      initiator:
        type: "string"
      start-date:
        type: "string"
        format: "date-time"
      process-instance-desc:
        type: "string"
      correlation-key:
        type: "string"
      parent-instance-id:
        type: "integer"
        format: "int64"
      last-modification-date:
        type: "string"
        format: "date-time"
      active-user-tasks:
        $ref: "#/definitions/task-summary-list"
      process-instance-variables:
        type: "object"
        additionalProperties:
          type: "object"
    xml:
      name: "process-instance-custom"
  process-instance-custom-list:
    type: "object"
    properties:
      process-instance-vars:
        type: "array"
        items:
          xml:
            name: "process-instance-vars"
          $ref: "#/definitions/process-instance-custom"
    xml:
      name: "process-instance-custom-list"
  count:
    type: "object"
    properties:
      count:
        type: "integer"
        format: "int64"
    xml:
      name: "count"
  task-comment:
    type: "object"
    properties:
      comment-id:
        type: "integer"
        format: "int64"
      comment:
        type: "string"
      comment-added-by:
        type: "string"
      comment-added-at:
        type: "string"
        format: "date-time"
    xml:
      name: "task-comment"
  task-comment-list:
    type: "object"
    properties:
      task-comment:
        type: "array"
        items:
          xml:
            name: "task-comment"
          $ref: "#/definitions/task-comment"
    xml:
      name: "task-comment-list"
  task-attachment:
    type: "object"
    properties:
      attachment-id:
        type: "integer"
        format: "int64"
      attachment-name:
        type: "string"
      attachment-added-by:
        type: "string"
      attachment-added-at:
        type: "string"
        format: "date-time"
      attachment-type:
        type: "string"
      attachment-size:
        type: "integer"
        format: "int32"
      attachment-content-id:
        type: "integer"
        format: "int64"
    xml:
      name: "task-attachment"
  task-attachment-list:
    type: "object"
    properties:
      task-attachment:
        type: "array"
        items:
          xml:
            name: "task-attachment"
          $ref: "#/definitions/task-attachment"
    xml:
      name: "task-attachment-list"
  migration-report-instance-list:
    type: "object"
    properties:
      migration-report-instance:
        type: "array"
        items:
          xml:
            name: "migration-report-instance"
          $ref: "#/definitions/migration-report-instance"
    xml:
      name: "migration-report-instance-list"
  timer-instance:
    type: "object"
    properties:
      name:
        type: "string"
      id:
        type: "integer"
        format: "int64"
      timer-id:
        type: "integer"
        format: "int64"
      activation-time:
        type: "string"
        format: "date-time"
      last-fire-time:
        type: "string"
        format: "date-time"
      next-fire-time:
        type: "string"
        format: "date-time"
      delay:
        type: "integer"
        format: "int64"
      period:
        type: "integer"
        format: "int64"
      repeat-limit:
        type: "integer"
        format: "int32"
      process-instance-id:
        type: "integer"
        format: "int64"
      session-id:
        type: "integer"
        format: "int64"
    xml:
      name: "timer-instance"
  timer-instance-list:
    type: "object"
    properties:
      timer-instance:
        type: "array"
        items:
          xml:
            name: "timer-instance"
          $ref: "#/definitions/timer-instance"
    xml:
      name: "timer-instance-list"
  execution-error:
    type: "object"
    properties:
      id:
        type: "string"
      type:
        type: "string"
      container-id:
        type: "string"
      process-instance-id:
        type: "integer"
        format: "int64"
      process-id:
        type: "string"
      activity-id:
        type: "integer"
        format: "int64"
      activity-name:
        type: "string"
      job-id:
        type: "integer"
        format: "int64"
      error-msg:
        type: "string"
      error:
        type: "string"
      acknowledged:
        type: "boolean"
      acknowledged-by:
        type: "string"
      acknowledged-at:
        type: "string"
        format: "date-time"
      error-date:
        type: "string"
        format: "date-time"
    xml:
      name: "execution-error"
  execution-error-list:
    type: "object"
    properties:
      error-instance:
        type: "array"
        items:
          xml:
            name: "error-instance"
          $ref: "#/definitions/execution-error"
    xml:
      name: "execution-error-list"
  process-node:
    type: "object"
    properties:
      name:
        type: "string"
      id:
        type: "integer"
        format: "int64"
      type:
        type: "string"
      process-id:
        type: "string"
    xml:
      name: "process-node"
  process-node-list:
    type: "object"
    properties:
      process-node:
        type: "array"
        items:
          xml:
            name: "process-node"
          $ref: "#/definitions/process-node"
    xml:
      name: "process-node-list"
  task-reassignment:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      reassign-at:
        type: "string"
        format: "date-time"
      users:
        type: "array"
        items:
          type: "string"
          xml:
            name: "users"
      groups:
        type: "array"
        items:
          type: "string"
          xml:
            name: "groups"
      active:
        type: "boolean"
    xml:
      name: "task-reassignment"
  task-reassignment-list:
    type: "object"
    properties:
      task-reassignment:
        type: "array"
        items:
          xml:
            name: "task-reassignment"
          $ref: "#/definitions/task-reassignment"
    xml:
      name: "task-reassignment-list"
  task-notification:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
      notify-at:
        type: "string"
        format: "date-time"
      users:
        type: "array"
        items:
          type: "string"
          xml:
            name: "users"
      groups:
        type: "array"
        items:
          type: "string"
          xml:
            name: "groups"
      emails:
        type: "array"
        items:
          type: "string"
          xml:
            name: "emails"
      active:
        type: "boolean"
      subject:
        type: "string"
      content:
        type: "string"
    xml:
      name: "task-notification"
  task-notification-list:
    type: "object"
    properties:
      task-notification:
        type: "array"
        items:
          xml:
            name: "task-notification"
          $ref: "#/definitions/task-notification"
    xml:
      name: "task-notification-list"
